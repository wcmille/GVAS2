<?xml version="1.0"?>
<Definitions xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <Prefabs>
    <Prefab xsi:type="MyObjectBuilder_PrefabDefinition">
      <Id Type="MyObjectBuilder_PrefabDefinition" Subtype="[NPC] Clydsedale" />
      <CubeGrids>
        <CubeGrid>
          <SubtypeName />
          <EntityId>92482426277365356</EntityId>
          <PersistentFlags>CastShadows InScene</PersistentFlags>
          <Name>92482426277365356</Name>
          <PositionAndOrientation>
            <Position x="0" y="0" z="0" />
            <Forward x="-0.162132859" y="-0.02059643" z="-0.986553967" />
            <Up x="-0.8980814" y="-0.411167264" z="0.156177044" />
            <Orientation>
              <X>0.06276527</X>
              <Y>0.0527592525</Y>
              <Z>0.837641954</Z>
              <W>0.5400304</W>
            </Orientation>
          </PositionAndOrientation>
          <LocalPositionAndOrientation xsi:nil="true" />
          <GridSizeEnum>Small</GridSizeEnum>
          <CubeBlocks>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Cockpit">
              <SubtypeName>SmallBlockCockpitIndustrial</SubtypeName>
              <EntityId>88660163138165098</EntityId>
              <Min x="-1" y="-1" z="-1" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>1</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanReceive CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                  <ComponentData>
                    <TypeId>MyMultiTextPanelComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_MultiTextPanelComponent">
                      <TextPanelsContents>
                        <MySerializedTextPanelData>
                          <ChangeInterval>0</ChangeInterval>
                          <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
                          <FontSize>1</FontSize>
                          <Text>Status
====
&gt;Navigation
 Life Support &amp; Power
 Recipes Available
 Diagnostics





====

</Text>
                          <ShowText>NONE</ShowText>
                          <FontColor>
                            <PackedValue>4294967295</PackedValue>
                            <X>255</X>
                            <Y>255</Y>
                            <Z>255</Z>
                            <R>255</R>
                            <G>255</G>
                            <B>255</B>
                            <A>255</A>
                          </FontColor>
                          <BackgroundColor>
                            <PackedValue>4278190080</PackedValue>
                            <X>0</X>
                            <Y>0</Y>
                            <Z>0</Z>
                            <R>0</R>
                            <G>0</G>
                            <B>0</B>
                            <A>255</A>
                          </BackgroundColor>
                          <CurrentShownTexture>0</CurrentShownTexture>
                          <ContentType>TEXT_AND_IMAGE</ContentType>
                          <SelectedScript>TSS_EnergyHydrogen</SelectedScript>
                          <TextPadding>2</TextPadding>
                          <CustomizeScripts>true</CustomizeScripts>
                          <ScriptBackgroundColor>
                            <PackedValue>4288108544</PackedValue>
                            <X>0</X>
                            <Y>88</Y>
                            <Z>151</Z>
                            <R>0</R>
                            <G>88</G>
                            <B>151</B>
                            <A>255</A>
                          </ScriptBackgroundColor>
                          <ScriptForegroundColor>
                            <PackedValue>4294962611</PackedValue>
                            <X>179</X>
                            <Y>237</Y>
                            <Z>255</Z>
                            <R>179</R>
                            <G>237</G>
                            <B>255</B>
                            <A>255</A>
                          </ScriptForegroundColor>
                          <Sprites>
                            <Length>0</Length>
                          </Sprites>
                        </MySerializedTextPanelData>
                        <MySerializedTextPanelData>
                          <ChangeInterval>0</ChangeInterval>
                          <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
                          <FontSize>1</FontSize>
                          <Text>Totl Mass:      249,670kg
Invn Mass:      185,924kg
Term Mass:       61,256kg
NTer Mass:        2,491kg

FW: 3.38m/s²
BW: 3.38m/s²
LT: 1.15m/s²
RT: 1.15m/s²
UP: 11.27m/s² (22.06m/s² - 10.79m/s²)
DN: 10.79m/s² (0.00m/s² + 10.79m/s²)

Suicide Burn (up) @ 100m/s: 444m
Stopping Dist(bw) @ 100m/s: 1479m
Centrip. Max (fw) @ 100m/s: 2958m
</Text>
                          <ShowText>NONE</ShowText>
                          <FontColor>
                            <PackedValue>4294967295</PackedValue>
                            <X>255</X>
                            <Y>255</Y>
                            <Z>255</Z>
                            <R>255</R>
                            <G>255</G>
                            <B>255</B>
                            <A>255</A>
                          </FontColor>
                          <BackgroundColor>
                            <PackedValue>4278190080</PackedValue>
                            <X>0</X>
                            <Y>0</Y>
                            <Z>0</Z>
                            <R>0</R>
                            <G>0</G>
                            <B>0</B>
                            <A>255</A>
                          </BackgroundColor>
                          <CurrentShownTexture>0</CurrentShownTexture>
                          <ContentType>TEXT_AND_IMAGE</ContentType>
                          <SelectedScript>TSS_Velocity</SelectedScript>
                          <TextPadding>2</TextPadding>
                          <CustomizeScripts>true</CustomizeScripts>
                          <ScriptBackgroundColor>
                            <PackedValue>4288108544</PackedValue>
                            <X>0</X>
                            <Y>88</Y>
                            <Z>151</Z>
                            <R>0</R>
                            <G>88</G>
                            <B>151</B>
                            <A>255</A>
                          </ScriptBackgroundColor>
                          <ScriptForegroundColor>
                            <PackedValue>4294962611</PackedValue>
                            <X>179</X>
                            <Y>237</Y>
                            <Z>255</Z>
                            <R>179</R>
                            <G>237</G>
                            <B>255</B>
                            <A>255</A>
                          </ScriptForegroundColor>
                          <Sprites>
                            <Length>0</Length>
                          </Sprites>
                        </MySerializedTextPanelData>
                        <MySerializedTextPanelData>
                          <ChangeInterval>0</ChangeInterval>
                          <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
                          <FontSize>1</FontSize>
                          <ShowText>NONE</ShowText>
                          <FontColor>
                            <PackedValue>4294967295</PackedValue>
                            <X>255</X>
                            <Y>255</Y>
                            <Z>255</Z>
                            <R>255</R>
                            <G>255</G>
                            <B>255</B>
                            <A>255</A>
                          </FontColor>
                          <BackgroundColor>
                            <PackedValue>4278190080</PackedValue>
                            <X>0</X>
                            <Y>0</Y>
                            <Z>0</Z>
                            <R>0</R>
                            <G>0</G>
                            <B>0</B>
                            <A>255</A>
                          </BackgroundColor>
                          <CurrentShownTexture>0</CurrentShownTexture>
                          <ContentType>SCRIPT</ContentType>
                          <SelectedScript>TSS_ClockDigital</SelectedScript>
                          <TextPadding>2</TextPadding>
                          <CustomizeScripts>true</CustomizeScripts>
                          <ScriptBackgroundColor>
                            <PackedValue>4278190080</PackedValue>
                            <X>0</X>
                            <Y>0</Y>
                            <Z>0</Z>
                            <R>0</R>
                            <G>0</G>
                            <B>0</B>
                            <A>255</A>
                          </ScriptBackgroundColor>
                          <ScriptForegroundColor>
                            <PackedValue>4294962611</PackedValue>
                            <X>179</X>
                            <Y>237</Y>
                            <Z>255</Z>
                            <R>179</R>
                            <G>237</G>
                            <B>255</B>
                            <A>255</A>
                          </ScriptForegroundColor>
                          <Sprites>
                            <Length>0</Length>
                          </Sprites>
                        </MySerializedTextPanelData>
                        <MySerializedTextPanelData>
                          <ChangeInterval>0</ChangeInterval>
                          <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
                          <FontSize>1</FontSize>
                          <ShowText>NONE</ShowText>
                          <FontColor>
                            <PackedValue>4294967295</PackedValue>
                            <X>255</X>
                            <Y>255</Y>
                            <Z>255</Z>
                            <R>255</R>
                            <G>255</G>
                            <B>255</B>
                            <A>255</A>
                          </FontColor>
                          <BackgroundColor>
                            <PackedValue>4278190080</PackedValue>
                            <X>0</X>
                            <Y>0</Y>
                            <Z>0</Z>
                            <R>0</R>
                            <G>0</G>
                            <B>0</B>
                            <A>255</A>
                          </BackgroundColor>
                          <CurrentShownTexture>0</CurrentShownTexture>
                          <ContentType>SCRIPT</ContentType>
                          <SelectedScript>TSS_ArtificialHorizon</SelectedScript>
                          <TextPadding>2</TextPadding>
                          <CustomizeScripts>true</CustomizeScripts>
                          <ScriptBackgroundColor>
                            <PackedValue>4288108544</PackedValue>
                            <X>0</X>
                            <Y>88</Y>
                            <Z>151</Z>
                            <R>0</R>
                            <G>88</G>
                            <B>151</B>
                            <A>255</A>
                          </ScriptBackgroundColor>
                          <ScriptForegroundColor>
                            <PackedValue>4294962611</PackedValue>
                            <X>179</X>
                            <Y>237</Y>
                            <Z>255</Z>
                            <R>179</R>
                            <G>237</G>
                            <B>255</B>
                            <A>255</A>
                          </ScriptForegroundColor>
                          <Sprites>
                            <Length>0</Length>
                          </Sprites>
                        </MySerializedTextPanelData>
                        <MySerializedTextPanelData>
                          <ChangeInterval>0</ChangeInterval>
                          <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
                          <FontSize>1</FontSize>
                          <ShowText>NONE</ShowText>
                          <FontColor>
                            <PackedValue>4294967295</PackedValue>
                            <X>255</X>
                            <Y>255</Y>
                            <Z>255</Z>
                            <R>255</R>
                            <G>255</G>
                            <B>255</B>
                            <A>255</A>
                          </FontColor>
                          <BackgroundColor>
                            <PackedValue>4278190080</PackedValue>
                            <X>0</X>
                            <Y>0</Y>
                            <Z>0</Z>
                            <R>0</R>
                            <G>0</G>
                            <B>0</B>
                            <A>255</A>
                          </BackgroundColor>
                          <CurrentShownTexture>0</CurrentShownTexture>
                          <SelectedScript />
                          <TextPadding>2</TextPadding>
                          <ScriptBackgroundColor>
                            <PackedValue>4288108544</PackedValue>
                            <X>0</X>
                            <Y>88</Y>
                            <Z>151</Z>
                            <R>0</R>
                            <G>88</G>
                            <B>151</B>
                            <A>255</A>
                          </ScriptBackgroundColor>
                          <ScriptForegroundColor>
                            <PackedValue>4294962611</PackedValue>
                            <X>179</X>
                            <Y>237</Y>
                            <Z>255</Z>
                            <R>179</R>
                            <G>237</G>
                            <B>255</B>
                            <A>255</A>
                          </ScriptForegroundColor>
                          <Sprites>
                            <Length>0</Length>
                          </Sprites>
                        </MySerializedTextPanelData>
                      </TextPanelsContents>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Industrial Cockpit [BMC:0] [BMCAux:1]</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>1</NumberInGrid>
              <UseSingleWeaponMode>false</UseSingleWeaponMode>
              <Toolbar>
                <ToolbarType>Character</ToolbarType>
                <SelectedSlot xsi:nil="true" />
                <Slots>
                  <Slot>
                    <Index>18</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>Run</Action>
                      <Parameters>
                        <MyObjectBuilder_ToolbarItemActionParameter>
                          <TypeCode>String</TypeCode>
                          <Value>up</Value>
                        </MyObjectBuilder_ToolbarItemActionParameter>
                      </Parameters>
                      <BlockEntityId>133524887062689858</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>19</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>Run</Action>
                      <Parameters>
                        <MyObjectBuilder_ToolbarItemActionParameter>
                          <TypeCode>String</TypeCode>
                          <Value>down</Value>
                        </MyObjectBuilder_ToolbarItemActionParameter>
                      </Parameters>
                      <BlockEntityId>133524887062689858</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>20</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>Run</Action>
                      <Parameters>
                        <MyObjectBuilder_ToolbarItemActionParameter>
                          <TypeCode>String</TypeCode>
                          <Value>apply</Value>
                        </MyObjectBuilder_ToolbarItemActionParameter>
                      </Parameters>
                      <BlockEntityId>133524887062689858</BlockEntityId>
                    </Data>
                  </Slot>
                </Slots>
                <SlotsGamepad>
                  <Slot>
                    <Index>0</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>Run</Action>
                      <Parameters>
                        <MyObjectBuilder_ToolbarItemActionParameter>
                          <TypeCode>String</TypeCode>
                          <Value>up</Value>
                        </MyObjectBuilder_ToolbarItemActionParameter>
                      </Parameters>
                      <BlockEntityId>133524887062689858</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>1</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>Run</Action>
                      <Parameters>
                        <MyObjectBuilder_ToolbarItemActionParameter>
                          <TypeCode>String</TypeCode>
                          <Value>down</Value>
                        </MyObjectBuilder_ToolbarItemActionParameter>
                      </Parameters>
                      <BlockEntityId>133524887062689858</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>2</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>Run</Action>
                      <Parameters>
                        <MyObjectBuilder_ToolbarItemActionParameter>
                          <TypeCode>String</TypeCode>
                          <Value>apply</Value>
                        </MyObjectBuilder_ToolbarItemActionParameter>
                      </Parameters>
                      <BlockEntityId>133524887062689858</BlockEntityId>
                    </Data>
                  </Slot>
                </SlotsGamepad>
              </Toolbar>
              <SelectedGunId xsi:nil="true" />
              <BuildToolbar>
                <ToolbarType>Character</ToolbarType>
                <SelectedSlot xsi:nil="true" />
                <Slots />
                <SlotsGamepad />
              </BuildToolbar>
              <OnLockedToolbar>
                <ToolbarType>Character</ToolbarType>
                <SelectedSlot xsi:nil="true" />
                <Slots />
                <SlotsGamepad />
              </OnLockedToolbar>
              <PilotRelativeWorld>
                <Position x="1.8805149793624878" y="1.4381816387176514" z="-4.9422168731689453" />
                <Forward x="-0.315701485" y="-0.534380436" z="0.7840728" />
                <Up x="-0.223149091" y="0.84497" z="0.486035138" />
                <Orientation>
                  <X>-0.06491748</X>
                  <Y>0.942243159</Y>
                  <Z>0.270741045</Z>
                  <W>0.186179712</W>
                </Orientation>
              </PilotRelativeWorld>
              <PilotGunDefinition xsi:nil="true" />
              <IsInFirstPersonView>true</IsInFirstPersonView>
              <OxygenLevel>1</OxygenLevel>
              <PilotJetpackEnabled xsi:nil="true" />
              <TargetData>
                <TargetId>0</TargetId>
                <IsTargetLocked>false</IsTargetLocked>
                <LockingProgress>0</LockingProgress>
              </TargetData>
              <SitAnimation>0</SitAnimation>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Conveyor">
              <SubtypeName>SmallBlockConveyor</SubtypeName>
              <EntityId>99321221292600943</EntityId>
              <Min x="1" y="2" z="3" />
              <BlockOrientation Forward="Down" Up="Backward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Conveyor">
              <SubtypeName>SmallBlockConveyor</SubtypeName>
              <EntityId>125984245061949165</EntityId>
              <Min x="-1" y="2" z="3" />
              <BlockOrientation Forward="Down" Up="Backward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
              <SubtypeName>SmallBlockBatteryBlock</SubtypeName>
              <EntityId>144012364532725050</EntityId>
              <Min x="1" y="3" z="8" />
              <BlockOrientation Forward="Backward" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ShareMode>Faction</ShareMode>
              <CustomName>Cle Battery Sb 2</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>3</NumberInGrid>
              <Enabled>true</Enabled>
              <CurrentStoredPower>1</CurrentStoredPower>
              <ProducerEnabled>true</ProducerEnabled>
              <MaxStoredPower>0</MaxStoredPower>
              <SemiautoEnabled>false</SemiautoEnabled>
              <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
              <ChargeMode>0</ChargeMode>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="2" y="3" z="14" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorHalfSlopeInverted</SubtypeName>
              <Min x="2" y="3" z="17" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
              <EntityId>82991493045539186</EntityId>
              <Min x="0" y="0" z="3" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Atmo Thruster 03</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>4</NumberInGrid>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_AirVent">
              <SubtypeName>SmallAirVent</SubtypeName>
              <EntityId>94970053101278892</EntityId>
              <Min x="0" y="3" z="2" />
              <BlockOrientation Forward="Up" Up="Backward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ShareMode>Faction</ShareMode>
              <CustomName>Cle Air Vent</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>1</NumberInGrid>
              <Enabled>true</Enabled>
              <IsDepressurizing>true</IsDepressurizing>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockLargeFlatAtmosphericThrust</SubtypeName>
              <EntityId>132395241774553272</EntityId>
              <Min x="-4" y="0" z="0" />
              <BlockOrientation Forward="Forward" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Large Flat Atmo Thruster Po 01</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>2</NumberInGrid>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockLargeFlatAtmosphericThrust</SubtypeName>
              <EntityId>137168630246566905</EntityId>
              <Min x="2" y="0" z="0" />
              <BlockOrientation Forward="Forward" Up="Right" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Large Flat Atmo Thruster Sb 02</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>1</NumberInGrid>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ShipConnector">
              <SubtypeName>ConnectorMedium</SubtypeName>
              <EntityId>120087016329175982</EntityId>
              <Min x="-6" y="0" z="8" />
              <BlockOrientation Forward="Left" Up="Backward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ShareMode>Faction</ShareMode>
              <DeformationRatio>0.5</DeformationRatio>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>1.152</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanReceive CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame10</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>80</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Connector Po 2</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>2</NumberInGrid>
              <Enabled>true</Enabled>
              <MasterToSlaveTransform xsi:nil="true" />
              <Strength>1E-06</Strength>
              <MasterToSlaveGrid xsi:nil="true" />
              <IsMaster>true</IsMaster>
              <TradingEnabled>false</TradingEnabled>
              <AutoUnlockTime>0</AutoUnlockTime>
              <TimeOfConnection>0</TimeOfConnection>
              <IsParkingEnabled>true</IsParkingEnabled>
              <IsPowerTransferOverrideEnabled>false</IsPowerTransferOverrideEnabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ShipConnector">
              <SubtypeName>ConnectorMedium</SubtypeName>
              <EntityId>134306647415859824</EntityId>
              <Min x="5" y="0" z="8" />
              <BlockOrientation Forward="Right" Up="Forward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ShareMode>Faction</ShareMode>
              <DeformationRatio>0.5</DeformationRatio>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>1.152</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanReceive CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame10</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>80</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Connector Sb 3</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>3</NumberInGrid>
              <Enabled>true</Enabled>
              <MasterToSlaveTransform xsi:nil="true" />
              <Strength>1E-06</Strength>
              <MasterToSlaveGrid xsi:nil="true" />
              <IsMaster>true</IsMaster>
              <TradingEnabled>false</TradingEnabled>
              <AutoUnlockTime>0</AutoUnlockTime>
              <TimeOfConnection>0</TimeOfConnection>
              <IsParkingEnabled>true</IsParkingEnabled>
              <IsPowerTransferOverrideEnabled>false</IsPowerTransferOverrideEnabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockLargeAtmosphericThrust</SubtypeName>
              <EntityId>82371798612487779</EntityId>
              <Min x="-1" y="-1" z="4" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Large Atmo Thruster 1</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>4</NumberInGrid>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockLargeAtmosphericThrust</SubtypeName>
              <EntityId>137550746752495354</EntityId>
              <Min x="-1" y="-1" z="11" />
              <BlockOrientation Forward="Down" Up="Backward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Large Atmo Thruster 2</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>2</NumberInGrid>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockLargeAtmosphericThrust</SubtypeName>
              <EntityId>75439656906824430</EntityId>
              <Min x="-1" y="-1" z="14" />
              <BlockOrientation Forward="Down" Up="Backward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Large Atmo Thruster 3</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>3</NumberInGrid>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Beacon">
              <SubtypeName>SmallBlockBeacon</SubtypeName>
              <EntityId>107148690642884589</EntityId>
              <Min x="0" y="1" z="7" />
              <BlockOrientation Forward="Down" Up="Backward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ShareMode>Faction</ShareMode>
              <CustomName>Cle Beacon</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>2</NumberInGrid>
              <Enabled>true</Enabled>
              <BroadcastRadius>7000</BroadcastRadius>
              <HudText />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_RadioAntenna">
              <SubtypeName>SmallBlockRadioAntenna</SubtypeName>
              <EntityId>78255006177056654</EntityId>
              <Min x="0" y="3" z="9" />
              <BlockOrientation Forward="Up" Up="Forward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ShareMode>Faction</ShareMode>
              <CustomName>Main Antenna</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>2</NumberInGrid>
              <Enabled>true</Enabled>
              <BroadcastRadius>5000</BroadcastRadius>
              <ShowShipName>false</ShowShipName>
              <EnableBroadcasting>true</EnableBroadcasting>
              <AttachedPB>0</AttachedPB>
              <IgnoreAllied>false</IgnoreAllied>
              <IgnoreOther>true</IgnoreOther>
              <HudText />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_RemoteControl">
              <SubtypeName>SmallBlockRemoteControl</SubtypeName>
              <EntityId>101546344804735166</EntityId>
              <Min x="0" y="3" z="7" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ShareMode>Faction</ShareMode>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyAutopilotComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_AutopilotComponent">
                      <AutoPilotEnabled>false</AutoPilotEnabled>
                      <FlightMode>0</FlightMode>
                      <CurrentWaypointIndex>-1</CurrentWaypointIndex>
                      <Waypoints />
                      <DockingModeEnabled>false</DockingModeEnabled>
                      <CollisionAvoidance>false</CollisionAvoidance>
                      <Direction>0</Direction>
                      <AutopilotSpeedLimit>100</AutopilotSpeedLimit>
                      <WaitForFreeWay>false</WaitForFreeWay>
                      <WaypointThresholdDistance>0</WaypointThresholdDistance>
                      <Coords />
                      <Names />
                      <LookAtPosition xsi:nil="true" />
                      <FacingDirection>Forward</FacingDirection>
                      <AlignToGravity>true</AlignToGravity>
                      <MinHeightAboveTerrain>25</MinHeightAboveTerrain>
                      <IsWorkAreaReturningToStart>false</IsWorkAreaReturningToStart>
                      <WorkAreaStartForward>
                        <X>0</X>
                        <Y>0</Y>
                        <Z>0</Z>
                      </WorkAreaStartForward>
                      <PitchAngle>0</PitchAngle>
                      <RollAngle>0</RollAngle>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle RC</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>2</NumberInGrid>
              <UseSingleWeaponMode>false</UseSingleWeaponMode>
              <Toolbar>
                <ToolbarType>Character</ToolbarType>
                <SelectedSlot xsi:nil="true" />
                <Slots />
                <SlotsGamepad />
              </Toolbar>
              <SelectedGunId xsi:nil="true" />
              <BuildToolbar>
                <ToolbarType>Character</ToolbarType>
                <SelectedSlot xsi:nil="true" />
                <Slots />
                <SlotsGamepad />
              </BuildToolbar>
              <OnLockedToolbar>
                <ToolbarType>Character</ToolbarType>
                <SelectedSlot xsi:nil="true" />
                <Slots />
                <SlotsGamepad />
              </OnLockedToolbar>
              <IsTargetLockingEnabled>false</IsTargetLockingEnabled>
              <PreviousControlledEntityId xsi:nil="true" />
              <AutoPilotEnabled>false</AutoPilotEnabled>
              <FlightMode>0</FlightMode>
              <BindedCamera>0</BindedCamera>
              <CurrentWaypointIndex>-1</CurrentWaypointIndex>
              <Waypoints />
              <Direction>0</Direction>
              <DockingModeEnabled>false</DockingModeEnabled>
              <CollisionAvoidance>false</CollisionAvoidance>
              <Coords />
              <Names />
              <WaypointThresholdDistance>0</WaypointThresholdDistance>
              <IsMainRemoteControl>false</IsMainRemoteControl>
              <WaitForFreeWay>false</WaitForFreeWay>
              <IsUpdatedSave>true</IsUpdatedSave>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Projector">
              <SubtypeName>MnMSmall</SubtypeName>
              <EntityId>134260534147799106</EntityId>
              <Min x="1" y="2" z="7" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ShareMode>Faction</ShareMode>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyModStorageComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_ModStorageComponent">
                      <Storage>
                        <dictionary>
                          <item>
                            <Key>801f61c8-140e-4f2e-9a0a-b14889776868</Key>
                            <Value>CAEQ9LqMyfTG2KkBKAA4AUAB</Value>
                          </item>
                        </dictionary>
                      </Storage>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Manufacturing and Maintenance Projector Sml</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>2</NumberInGrid>
              <Enabled>true</Enabled>
              <ProjectedGrids>
                <MyObjectBuilder_CubeGrid>
                  <SubtypeName />
                  <EntityId>142189868726858429</EntityId>
                  <PersistentFlags>CastShadows InScene</PersistentFlags>
                  <Name>138637119944243362</Name>
                  <PositionAndOrientation>
                    <Position x="0" y="0" z="0" />
                    <Forward x="1.82145965E-17" y="1.38777878E-17" z="-1" />
                    <Up x="0" y="1" z="6.938894E-18" />
                    <Orientation>
                      <X>6.938894E-18</X>
                      <Y>-9.107298E-18</Y>
                      <Z>0</Z>
                      <W>1</W>
                    </Orientation>
                  </PositionAndOrientation>
                  <LocalPositionAndOrientation xsi:nil="true" />
                  <GridSizeEnum>Small</GridSizeEnum>
                  <CubeBlocks>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Cockpit">
                      <SubtypeName>SmallBlockCockpitIndustrial</SubtypeName>
                      <EntityId>76230495871978965</EntityId>
                      <Name>76230495871978965</Name>
                      <Min x="-1" y="-1" z="-1" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyHierarchyComponentBase</TypeId>
                            <Component xsi:type="MyObjectBuilder_HierarchyComponentBase">
                              <Children />
                            </Component>
                          </ComponentData>
                          <ComponentData>
                            <TypeId>MyMultiTextPanelComponent</TypeId>
                            <Component xsi:type="MyObjectBuilder_MultiTextPanelComponent">
                              <TextPanelsContents>
                                <MySerializedTextPanelData>
                                  <ChangeInterval>0</ChangeInterval>
                                  <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
                                  <FontSize>1</FontSize>
                                  <Text>Status
====
 Back
 Ship Damage
&gt;Acceleration Test
 Gyro Test (avoid in gravity)
 YawPID Test




====

</Text>
                                  <ShowText>NONE</ShowText>
                                  <FontColor>
                                    <PackedValue>4294967295</PackedValue>
                                    <X>255</X>
                                    <Y>255</Y>
                                    <Z>255</Z>
                                    <R>255</R>
                                    <G>255</G>
                                    <B>255</B>
                                    <A>255</A>
                                  </FontColor>
                                  <BackgroundColor>
                                    <PackedValue>4278190080</PackedValue>
                                    <X>0</X>
                                    <Y>0</Y>
                                    <Z>0</Z>
                                    <R>0</R>
                                    <G>0</G>
                                    <B>0</B>
                                    <A>255</A>
                                  </BackgroundColor>
                                  <CurrentShownTexture>0</CurrentShownTexture>
                                  <ContentType>TEXT_AND_IMAGE</ContentType>
                                  <SelectedScript>TSS_EnergyHydrogen</SelectedScript>
                                  <TextPadding>2</TextPadding>
                                  <CustomizeScripts>true</CustomizeScripts>
                                  <ScriptBackgroundColor>
                                    <PackedValue>4288108544</PackedValue>
                                    <X>0</X>
                                    <Y>88</Y>
                                    <Z>151</Z>
                                    <R>0</R>
                                    <G>88</G>
                                    <B>151</B>
                                    <A>255</A>
                                  </ScriptBackgroundColor>
                                  <ScriptForegroundColor>
                                    <PackedValue>4294962611</PackedValue>
                                    <X>179</X>
                                    <Y>237</Y>
                                    <Z>255</Z>
                                    <R>179</R>
                                    <G>237</G>
                                    <B>255</B>
                                    <A>255</A>
                                  </ScriptForegroundColor>
                                  <Sprites>
                                    <Length>0</Length>
                                  </Sprites>
                                </MySerializedTextPanelData>
                                <MySerializedTextPanelData>
                                  <ChangeInterval>0</ChangeInterval>
                                  <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
                                  <FontSize>1</FontSize>
                                  <Text>Totl Mass:      249,670kg
Invn Mass:      185,924kg
Term Mass:       61,256kg
NTer Mass:        2,491kg

FW: 3.38m/s²
BW: 3.38m/s²
LT: 1.15m/s²
RT: 1.15m/s²
UP: 11.27m/s² (22.06m/s² - 10.79m/s²)
DN: 10.79m/s² (0.00m/s² + 10.79m/s²)

Suicide Burn (up) @ 100m/s: 444m
Stopping Dist(bw) @ 100m/s: 1479m
Centrip. Max (fw) @ 100m/s: 2958m
</Text>
                                  <ShowText>NONE</ShowText>
                                  <FontColor>
                                    <PackedValue>4294967295</PackedValue>
                                    <X>255</X>
                                    <Y>255</Y>
                                    <Z>255</Z>
                                    <R>255</R>
                                    <G>255</G>
                                    <B>255</B>
                                    <A>255</A>
                                  </FontColor>
                                  <BackgroundColor>
                                    <PackedValue>4278190080</PackedValue>
                                    <X>0</X>
                                    <Y>0</Y>
                                    <Z>0</Z>
                                    <R>0</R>
                                    <G>0</G>
                                    <B>0</B>
                                    <A>255</A>
                                  </BackgroundColor>
                                  <CurrentShownTexture>0</CurrentShownTexture>
                                  <ContentType>TEXT_AND_IMAGE</ContentType>
                                  <SelectedScript>TSS_Velocity</SelectedScript>
                                  <TextPadding>2</TextPadding>
                                  <CustomizeScripts>true</CustomizeScripts>
                                  <ScriptBackgroundColor>
                                    <PackedValue>4288108544</PackedValue>
                                    <X>0</X>
                                    <Y>88</Y>
                                    <Z>151</Z>
                                    <R>0</R>
                                    <G>88</G>
                                    <B>151</B>
                                    <A>255</A>
                                  </ScriptBackgroundColor>
                                  <ScriptForegroundColor>
                                    <PackedValue>4294962611</PackedValue>
                                    <X>179</X>
                                    <Y>237</Y>
                                    <Z>255</Z>
                                    <R>179</R>
                                    <G>237</G>
                                    <B>255</B>
                                    <A>255</A>
                                  </ScriptForegroundColor>
                                  <Sprites>
                                    <Length>0</Length>
                                  </Sprites>
                                </MySerializedTextPanelData>
                                <MySerializedTextPanelData>
                                  <ChangeInterval>0</ChangeInterval>
                                  <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
                                  <FontSize>1</FontSize>
                                  <ShowText>NONE</ShowText>
                                  <FontColor>
                                    <PackedValue>4294967295</PackedValue>
                                    <X>255</X>
                                    <Y>255</Y>
                                    <Z>255</Z>
                                    <R>255</R>
                                    <G>255</G>
                                    <B>255</B>
                                    <A>255</A>
                                  </FontColor>
                                  <BackgroundColor>
                                    <PackedValue>4278190080</PackedValue>
                                    <X>0</X>
                                    <Y>0</Y>
                                    <Z>0</Z>
                                    <R>0</R>
                                    <G>0</G>
                                    <B>0</B>
                                    <A>255</A>
                                  </BackgroundColor>
                                  <CurrentShownTexture>0</CurrentShownTexture>
                                  <ContentType>SCRIPT</ContentType>
                                  <SelectedScript>TSS_ClockDigital</SelectedScript>
                                  <TextPadding>2</TextPadding>
                                  <CustomizeScripts>true</CustomizeScripts>
                                  <ScriptBackgroundColor>
                                    <PackedValue>4278190080</PackedValue>
                                    <X>0</X>
                                    <Y>0</Y>
                                    <Z>0</Z>
                                    <R>0</R>
                                    <G>0</G>
                                    <B>0</B>
                                    <A>255</A>
                                  </ScriptBackgroundColor>
                                  <ScriptForegroundColor>
                                    <PackedValue>4294962611</PackedValue>
                                    <X>179</X>
                                    <Y>237</Y>
                                    <Z>255</Z>
                                    <R>179</R>
                                    <G>237</G>
                                    <B>255</B>
                                    <A>255</A>
                                  </ScriptForegroundColor>
                                  <Sprites>
                                    <Length>0</Length>
                                  </Sprites>
                                </MySerializedTextPanelData>
                                <MySerializedTextPanelData>
                                  <ChangeInterval>0</ChangeInterval>
                                  <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
                                  <FontSize>1</FontSize>
                                  <ShowText>NONE</ShowText>
                                  <FontColor>
                                    <PackedValue>4294967295</PackedValue>
                                    <X>255</X>
                                    <Y>255</Y>
                                    <Z>255</Z>
                                    <R>255</R>
                                    <G>255</G>
                                    <B>255</B>
                                    <A>255</A>
                                  </FontColor>
                                  <BackgroundColor>
                                    <PackedValue>4278190080</PackedValue>
                                    <X>0</X>
                                    <Y>0</Y>
                                    <Z>0</Z>
                                    <R>0</R>
                                    <G>0</G>
                                    <B>0</B>
                                    <A>255</A>
                                  </BackgroundColor>
                                  <CurrentShownTexture>0</CurrentShownTexture>
                                  <ContentType>SCRIPT</ContentType>
                                  <SelectedScript>TSS_ArtificialHorizon</SelectedScript>
                                  <TextPadding>2</TextPadding>
                                  <CustomizeScripts>true</CustomizeScripts>
                                  <ScriptBackgroundColor>
                                    <PackedValue>4288108544</PackedValue>
                                    <X>0</X>
                                    <Y>88</Y>
                                    <Z>151</Z>
                                    <R>0</R>
                                    <G>88</G>
                                    <B>151</B>
                                    <A>255</A>
                                  </ScriptBackgroundColor>
                                  <ScriptForegroundColor>
                                    <PackedValue>4294962611</PackedValue>
                                    <X>179</X>
                                    <Y>237</Y>
                                    <Z>255</Z>
                                    <R>179</R>
                                    <G>237</G>
                                    <B>255</B>
                                    <A>255</A>
                                  </ScriptForegroundColor>
                                  <Sprites>
                                    <Length>0</Length>
                                  </Sprites>
                                </MySerializedTextPanelData>
                                <MySerializedTextPanelData>
                                  <ChangeInterval>0</ChangeInterval>
                                  <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
                                  <FontSize>1</FontSize>
                                  <ShowText>NONE</ShowText>
                                  <FontColor>
                                    <PackedValue>4294967295</PackedValue>
                                    <X>255</X>
                                    <Y>255</Y>
                                    <Z>255</Z>
                                    <R>255</R>
                                    <G>255</G>
                                    <B>255</B>
                                    <A>255</A>
                                  </FontColor>
                                  <BackgroundColor>
                                    <PackedValue>4278190080</PackedValue>
                                    <X>0</X>
                                    <Y>0</Y>
                                    <Z>0</Z>
                                    <R>0</R>
                                    <G>0</G>
                                    <B>0</B>
                                    <A>255</A>
                                  </BackgroundColor>
                                  <CurrentShownTexture>0</CurrentShownTexture>
                                  <SelectedScript />
                                  <TextPadding>2</TextPadding>
                                  <ScriptBackgroundColor>
                                    <PackedValue>4288108544</PackedValue>
                                    <X>0</X>
                                    <Y>88</Y>
                                    <Z>151</Z>
                                    <R>0</R>
                                    <G>88</G>
                                    <B>151</B>
                                    <A>255</A>
                                  </ScriptBackgroundColor>
                                  <ScriptForegroundColor>
                                    <PackedValue>4294962611</PackedValue>
                                    <X>179</X>
                                    <Y>237</Y>
                                    <Z>255</Z>
                                    <R>179</R>
                                    <G>237</G>
                                    <B>255</B>
                                    <A>255</A>
                                  </ScriptForegroundColor>
                                  <Sprites>
                                    <Length>0</Length>
                                  </Sprites>
                                </MySerializedTextPanelData>
                              </TextPanelsContents>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle Industrial Cockpit [BMC:0] [BMCAux:1]</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>1</NumberInGrid>
                      <UseSingleWeaponMode>false</UseSingleWeaponMode>
                      <Toolbar>
                        <ToolbarType>Character</ToolbarType>
                        <SelectedSlot xsi:nil="true" />
                        <Slots>
                          <Slot>
                            <Index>18</Index>
                            <Item />
                            <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                              <Action>Run</Action>
                              <Parameters>
                                <MyObjectBuilder_ToolbarItemActionParameter>
                                  <TypeCode>String</TypeCode>
                                  <Value>up</Value>
                                </MyObjectBuilder_ToolbarItemActionParameter>
                              </Parameters>
                              <BlockEntityId>127092542879941577</BlockEntityId>
                            </Data>
                          </Slot>
                          <Slot>
                            <Index>19</Index>
                            <Item />
                            <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                              <Action>Run</Action>
                              <Parameters>
                                <MyObjectBuilder_ToolbarItemActionParameter>
                                  <TypeCode>String</TypeCode>
                                  <Value>down</Value>
                                </MyObjectBuilder_ToolbarItemActionParameter>
                              </Parameters>
                              <BlockEntityId>127092542879941577</BlockEntityId>
                            </Data>
                          </Slot>
                          <Slot>
                            <Index>20</Index>
                            <Item />
                            <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                              <Action>Run</Action>
                              <Parameters>
                                <MyObjectBuilder_ToolbarItemActionParameter>
                                  <TypeCode>String</TypeCode>
                                  <Value>apply</Value>
                                </MyObjectBuilder_ToolbarItemActionParameter>
                              </Parameters>
                              <BlockEntityId>127092542879941577</BlockEntityId>
                            </Data>
                          </Slot>
                        </Slots>
                        <SlotsGamepad>
                          <Slot>
                            <Index>0</Index>
                            <Item />
                            <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                              <Action>Run</Action>
                              <Parameters>
                                <MyObjectBuilder_ToolbarItemActionParameter>
                                  <TypeCode>String</TypeCode>
                                  <Value>up</Value>
                                </MyObjectBuilder_ToolbarItemActionParameter>
                              </Parameters>
                              <BlockEntityId>127092542879941577</BlockEntityId>
                            </Data>
                          </Slot>
                          <Slot>
                            <Index>1</Index>
                            <Item />
                            <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                              <Action>Run</Action>
                              <Parameters>
                                <MyObjectBuilder_ToolbarItemActionParameter>
                                  <TypeCode>String</TypeCode>
                                  <Value>down</Value>
                                </MyObjectBuilder_ToolbarItemActionParameter>
                              </Parameters>
                              <BlockEntityId>127092542879941577</BlockEntityId>
                            </Data>
                          </Slot>
                          <Slot>
                            <Index>2</Index>
                            <Item />
                            <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                              <Action>Run</Action>
                              <Parameters>
                                <MyObjectBuilder_ToolbarItemActionParameter>
                                  <TypeCode>String</TypeCode>
                                  <Value>apply</Value>
                                </MyObjectBuilder_ToolbarItemActionParameter>
                              </Parameters>
                              <BlockEntityId>127092542879941577</BlockEntityId>
                            </Data>
                          </Slot>
                        </SlotsGamepad>
                      </Toolbar>
                      <SelectedGunId xsi:nil="true" />
                      <BuildToolbar>
                        <ToolbarType>Character</ToolbarType>
                        <SelectedSlot xsi:nil="true" />
                        <Slots />
                        <SlotsGamepad />
                      </BuildToolbar>
                      <OnLockedToolbar>
                        <ToolbarType>Character</ToolbarType>
                        <SelectedSlot xsi:nil="true" />
                        <Slots />
                        <SlotsGamepad />
                      </OnLockedToolbar>
                      <PilotRelativeWorld>
                        <Position x="1.8793038129806519" y="-0.35276332497596741" z="-4.0252509117126465" />
                        <Forward x="-0.387780249" y="-0.2912556" z="0.8745263" />
                        <Up x="-0.103995636" y="0.956532" z="0.272453934" />
                        <Orientation>
                          <X>-0.0230640881</X>
                          <Y>0.9678488</Y>
                          <Z>0.145608842</Z>
                          <W>0.203800932</W>
                        </Orientation>
                      </PilotRelativeWorld>
                      <PilotGunDefinition xsi:nil="true" />
                      <IsInFirstPersonView>false</IsInFirstPersonView>
                      <OxygenLevel>0</OxygenLevel>
                      <PilotJetpackEnabled>true</PilotJetpackEnabled>
                      <TargetData>
                        <TargetId>0</TargetId>
                        <IsTargetLocked>false</IsTargetLocked>
                        <LockingProgress>0</LockingProgress>
                      </TargetData>
                      <SitAnimation>244898</SitAnimation>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Conveyor">
                      <SubtypeName>SmallBlockConveyor</SubtypeName>
                      <EntityId>118664767272168950</EntityId>
                      <Name>118664767272168950</Name>
                      <Min x="1" y="2" z="3" />
                      <BlockOrientation Forward="Down" Up="Backward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Conveyor">
                      <SubtypeName>SmallBlockConveyor</SubtypeName>
                      <EntityId>130729632725207506</EntityId>
                      <Name>130729632725207506</Name>
                      <Min x="-1" y="2" z="3" />
                      <BlockOrientation Forward="Down" Up="Backward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
                      <SubtypeName>SmallBlockBatteryBlock</SubtypeName>
                      <EntityId>98835894465105933</EntityId>
                      <Name>98835894465105933</Name>
                      <Min x="1" y="3" z="8" />
                      <BlockOrientation Forward="Backward" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <CustomName>Cle Battery Sb 2</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>3</NumberInGrid>
                      <Enabled>true</Enabled>
                      <CurrentStoredPower>0</CurrentStoredPower>
                      <ProducerEnabled>true</ProducerEnabled>
                      <MaxStoredPower>0</MaxStoredPower>
                      <SemiautoEnabled>false</SemiautoEnabled>
                      <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
                      <ChargeMode>0</ChargeMode>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="2" y="3" z="14" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorHalfSlopeInverted</SubtypeName>
                      <Min x="2" y="3" z="17" />
                      <BlockOrientation Forward="Down" Up="Right" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
                      <EntityId>88144064049727648</EntityId>
                      <Name>88144064049727648</Name>
                      <Min x="0" y="0" z="3" />
                      <BlockOrientation Forward="Down" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyTimerComponent</TypeId>
                            <Component xsi:type="MyObjectBuilder_TimerComponent">
                              <Repeat>true</Repeat>
                              <TimeToEvent>0</TimeToEvent>
                              <SetTimeMinutes>0</SetTimeMinutes>
                              <TimerEnabled>true</TimerEnabled>
                              <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                              <TimerType>Frame100</TimerType>
                              <FramesFromLastTrigger>0</FramesFromLastTrigger>
                              <TimerTickInFrames>100</TimerTickInFrames>
                              <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle Atmo Thruster 03</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>4</NumberInGrid>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_AirVent">
                      <SubtypeName>SmallAirVent</SubtypeName>
                      <EntityId>102410210608482542</EntityId>
                      <Name>102410210608482542</Name>
                      <Min x="0" y="3" z="2" />
                      <BlockOrientation Forward="Up" Up="Backward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <CustomName>Cle Air Vent</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>1</NumberInGrid>
                      <Enabled>true</Enabled>
                      <IsDepressurizing>true</IsDepressurizing>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockLargeFlatAtmosphericThrust</SubtypeName>
                      <EntityId>126247704049876647</EntityId>
                      <Name>126247704049876647</Name>
                      <Min x="-4" y="0" z="0" />
                      <BlockOrientation Forward="Forward" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyTimerComponent</TypeId>
                            <Component xsi:type="MyObjectBuilder_TimerComponent">
                              <Repeat>true</Repeat>
                              <TimeToEvent>0</TimeToEvent>
                              <SetTimeMinutes>0</SetTimeMinutes>
                              <TimerEnabled>true</TimerEnabled>
                              <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                              <TimerType>Frame100</TimerType>
                              <FramesFromLastTrigger>0</FramesFromLastTrigger>
                              <TimerTickInFrames>100</TimerTickInFrames>
                              <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle Large Flat Atmo Thruster Po 01</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>2</NumberInGrid>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockLargeFlatAtmosphericThrust</SubtypeName>
                      <EntityId>98753596480409330</EntityId>
                      <Name>98753596480409330</Name>
                      <Min x="2" y="0" z="0" />
                      <BlockOrientation Forward="Forward" Up="Right" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyTimerComponent</TypeId>
                            <Component xsi:type="MyObjectBuilder_TimerComponent">
                              <Repeat>true</Repeat>
                              <TimeToEvent>0</TimeToEvent>
                              <SetTimeMinutes>0</SetTimeMinutes>
                              <TimerEnabled>true</TimerEnabled>
                              <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                              <TimerType>Frame100</TimerType>
                              <FramesFromLastTrigger>0</FramesFromLastTrigger>
                              <TimerTickInFrames>100</TimerTickInFrames>
                              <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle Large Flat Atmo Thruster Sb 02</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>1</NumberInGrid>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ShipConnector">
                      <SubtypeName>ConnectorMedium</SubtypeName>
                      <EntityId>140310696138366286</EntityId>
                      <Name>140310696138366286</Name>
                      <Min x="-6" y="0" z="8" />
                      <BlockOrientation Forward="Left" Up="Backward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <DeformationRatio>0.5</DeformationRatio>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyTimerComponent</TypeId>
                            <Component xsi:type="MyObjectBuilder_TimerComponent">
                              <Repeat>true</Repeat>
                              <TimeToEvent>0</TimeToEvent>
                              <SetTimeMinutes>0</SetTimeMinutes>
                              <TimerEnabled>true</TimerEnabled>
                              <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                              <TimerType>Frame10</TimerType>
                              <FramesFromLastTrigger>30</FramesFromLastTrigger>
                              <TimerTickInFrames>80</TimerTickInFrames>
                              <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle Connector Po 2</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>2</NumberInGrid>
                      <Enabled>true</Enabled>
                      <MasterToSlaveTransform xsi:nil="true" />
                      <Strength>1E-06</Strength>
                      <MasterToSlaveGrid xsi:nil="true" />
                      <IsMaster>true</IsMaster>
                      <TradingEnabled>false</TradingEnabled>
                      <AutoUnlockTime>0</AutoUnlockTime>
                      <TimeOfConnection>0</TimeOfConnection>
                      <IsParkingEnabled>true</IsParkingEnabled>
                      <IsPowerTransferOverrideEnabled>false</IsPowerTransferOverrideEnabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ShipConnector">
                      <SubtypeName>ConnectorMedium</SubtypeName>
                      <EntityId>115844269697793231</EntityId>
                      <Name>115844269697793231</Name>
                      <Min x="5" y="0" z="8" />
                      <BlockOrientation Forward="Right" Up="Forward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <DeformationRatio>0.5</DeformationRatio>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyTimerComponent</TypeId>
                            <Component xsi:type="MyObjectBuilder_TimerComponent">
                              <Repeat>true</Repeat>
                              <TimeToEvent>0</TimeToEvent>
                              <SetTimeMinutes>0</SetTimeMinutes>
                              <TimerEnabled>true</TimerEnabled>
                              <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                              <TimerType>Frame10</TimerType>
                              <FramesFromLastTrigger>30</FramesFromLastTrigger>
                              <TimerTickInFrames>80</TimerTickInFrames>
                              <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle Connector Sb 3</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>3</NumberInGrid>
                      <Enabled>true</Enabled>
                      <MasterToSlaveTransform xsi:nil="true" />
                      <Strength>1E-06</Strength>
                      <MasterToSlaveGrid xsi:nil="true" />
                      <IsMaster>true</IsMaster>
                      <TradingEnabled>false</TradingEnabled>
                      <AutoUnlockTime>0</AutoUnlockTime>
                      <TimeOfConnection>0</TimeOfConnection>
                      <IsParkingEnabled>true</IsParkingEnabled>
                      <IsPowerTransferOverrideEnabled>false</IsPowerTransferOverrideEnabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockLargeAtmosphericThrust</SubtypeName>
                      <EntityId>81114862851482916</EntityId>
                      <Name>81114862851482916</Name>
                      <Min x="-1" y="-1" z="4" />
                      <BlockOrientation Forward="Down" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyTimerComponent</TypeId>
                            <Component xsi:type="MyObjectBuilder_TimerComponent">
                              <Repeat>true</Repeat>
                              <TimeToEvent>0</TimeToEvent>
                              <SetTimeMinutes>0</SetTimeMinutes>
                              <TimerEnabled>true</TimerEnabled>
                              <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                              <TimerType>Frame100</TimerType>
                              <FramesFromLastTrigger>0</FramesFromLastTrigger>
                              <TimerTickInFrames>100</TimerTickInFrames>
                              <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle Large Atmo Thruster 1</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>4</NumberInGrid>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockLargeAtmosphericThrust</SubtypeName>
                      <EntityId>97332775425107848</EntityId>
                      <Name>97332775425107848</Name>
                      <Min x="-1" y="-1" z="11" />
                      <BlockOrientation Forward="Down" Up="Backward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyTimerComponent</TypeId>
                            <Component xsi:type="MyObjectBuilder_TimerComponent">
                              <Repeat>true</Repeat>
                              <TimeToEvent>0</TimeToEvent>
                              <SetTimeMinutes>0</SetTimeMinutes>
                              <TimerEnabled>true</TimerEnabled>
                              <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                              <TimerType>Frame100</TimerType>
                              <FramesFromLastTrigger>0</FramesFromLastTrigger>
                              <TimerTickInFrames>100</TimerTickInFrames>
                              <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle Large Atmo Thruster 2</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>2</NumberInGrid>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockLargeAtmosphericThrust</SubtypeName>
                      <EntityId>102660656296287658</EntityId>
                      <Name>102660656296287658</Name>
                      <Min x="-1" y="-1" z="14" />
                      <BlockOrientation Forward="Down" Up="Backward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyTimerComponent</TypeId>
                            <Component xsi:type="MyObjectBuilder_TimerComponent">
                              <Repeat>true</Repeat>
                              <TimeToEvent>0</TimeToEvent>
                              <SetTimeMinutes>0</SetTimeMinutes>
                              <TimerEnabled>true</TimerEnabled>
                              <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                              <TimerType>Frame100</TimerType>
                              <FramesFromLastTrigger>0</FramesFromLastTrigger>
                              <TimerTickInFrames>100</TimerTickInFrames>
                              <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle Large Atmo Thruster 3</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>3</NumberInGrid>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Beacon">
                      <SubtypeName>SmallBlockBeacon</SubtypeName>
                      <EntityId>115087997927615755</EntityId>
                      <Name>115087997927615755</Name>
                      <Min x="0" y="1" z="7" />
                      <BlockOrientation Forward="Down" Up="Backward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <CustomName>Cle Beacon</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>2</NumberInGrid>
                      <Enabled>true</Enabled>
                      <BroadcastRadius>20000</BroadcastRadius>
                      <HudText />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_RadioAntenna">
                      <SubtypeName>SmallBlockRadioAntenna</SubtypeName>
                      <EntityId>93348071081593139</EntityId>
                      <Name>93348071081593139</Name>
                      <Min x="0" y="3" z="9" />
                      <BlockOrientation Forward="Up" Up="Forward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <CustomName>Cle Antenna</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>2</NumberInGrid>
                      <Enabled>true</Enabled>
                      <BroadcastRadius>5000</BroadcastRadius>
                      <ShowShipName>false</ShowShipName>
                      <EnableBroadcasting>true</EnableBroadcasting>
                      <AttachedPB>0</AttachedPB>
                      <IgnoreAllied>false</IgnoreAllied>
                      <IgnoreOther>true</IgnoreOther>
                      <HudText />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_RemoteControl">
                      <SubtypeName>SmallBlockRemoteControl</SubtypeName>
                      <EntityId>74082084538902716</EntityId>
                      <Name>74082084538902716</Name>
                      <Min x="0" y="3" z="7" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyAutopilotComponent</TypeId>
                            <Component xsi:type="MyObjectBuilder_AutopilotComponent">
                              <AutoPilotEnabled>false</AutoPilotEnabled>
                              <FlightMode>0</FlightMode>
                              <CurrentWaypointIndex>-1</CurrentWaypointIndex>
                              <Waypoints />
                              <DockingModeEnabled>false</DockingModeEnabled>
                              <CollisionAvoidance>false</CollisionAvoidance>
                              <Direction>0</Direction>
                              <AutopilotSpeedLimit>100</AutopilotSpeedLimit>
                              <WaitForFreeWay>false</WaitForFreeWay>
                              <WaypointThresholdDistance>0</WaypointThresholdDistance>
                              <Coords />
                              <Names />
                              <LookAtPosition xsi:nil="true" />
                              <FacingDirection>Forward</FacingDirection>
                              <AlignToGravity>true</AlignToGravity>
                              <MinHeightAboveTerrain>25</MinHeightAboveTerrain>
                              <IsWorkAreaReturningToStart>false</IsWorkAreaReturningToStart>
                              <WorkAreaStartForward>
                                <X>0</X>
                                <Y>0</Y>
                                <Z>0</Z>
                              </WorkAreaStartForward>
                              <PitchAngle>0</PitchAngle>
                              <RollAngle>0</RollAngle>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle RC</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>2</NumberInGrid>
                      <UseSingleWeaponMode>false</UseSingleWeaponMode>
                      <Toolbar>
                        <ToolbarType>Character</ToolbarType>
                        <SelectedSlot xsi:nil="true" />
                        <Slots />
                        <SlotsGamepad />
                      </Toolbar>
                      <SelectedGunId xsi:nil="true" />
                      <BuildToolbar>
                        <ToolbarType>Character</ToolbarType>
                        <SelectedSlot xsi:nil="true" />
                        <Slots />
                        <SlotsGamepad />
                      </BuildToolbar>
                      <OnLockedToolbar>
                        <ToolbarType>Character</ToolbarType>
                        <SelectedSlot xsi:nil="true" />
                        <Slots />
                        <SlotsGamepad />
                      </OnLockedToolbar>
                      <IsTargetLockingEnabled>false</IsTargetLockingEnabled>
                      <PreviousControlledEntityId xsi:nil="true" />
                      <AutoPilotEnabled>false</AutoPilotEnabled>
                      <FlightMode>0</FlightMode>
                      <BindedCamera>0</BindedCamera>
                      <CurrentWaypointIndex>-1</CurrentWaypointIndex>
                      <Waypoints />
                      <Direction>0</Direction>
                      <DockingModeEnabled>false</DockingModeEnabled>
                      <CollisionAvoidance>false</CollisionAvoidance>
                      <Coords />
                      <Names />
                      <WaypointThresholdDistance>0</WaypointThresholdDistance>
                      <IsMainRemoteControl>false</IsMainRemoteControl>
                      <WaitForFreeWay>false</WaitForFreeWay>
                      <IsUpdatedSave>true</IsUpdatedSave>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Projector">
                      <SubtypeName>MnMSmall</SubtypeName>
                      <EntityId>136775526537134755</EntityId>
                      <Name>136775526537134755</Name>
                      <Min x="1" y="2" z="7" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyModStorageComponentBase</TypeId>
                            <Component xsi:type="MyObjectBuilder_ModStorageComponent">
                              <Storage>
                                <dictionary>
                                  <item>
                                    <Key>801f61c8-140e-4f2e-9a0a-b14889776868</Key>
                                    <Value>CAEQ9LqMyfTG2KkBKAA4AUAB</Value>
                                  </item>
                                </dictionary>
                              </Storage>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle Manufacturing and Maintenance Projector Sml</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>2</NumberInGrid>
                      <Enabled>true</Enabled>
                      <ProjectionOffset>
                        <X>0</X>
                        <Y>0</Y>
                        <Z>0</Z>
                      </ProjectionOffset>
                      <ProjectionRotation>
                        <X>0</X>
                        <Y>0</Y>
                        <Z>0</Z>
                      </ProjectionRotation>
                      <KeepProjection>false</KeepProjection>
                      <ShowOnlyBuildable>false</ShowOnlyBuildable>
                      <InstantBuildingEnabled>false</InstantBuildingEnabled>
                      <MaxNumberOfProjections>5</MaxNumberOfProjections>
                      <MaxNumberOfBlocks>200</MaxNumberOfBlocks>
                      <ProjectionsRemaining>0</ProjectionsRemaining>
                      <GetOwnershipFromProjector>false</GetOwnershipFromProjector>
                      <Scale>1</Scale>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="-2" y="3" z="14" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MergeBlock">
                      <SubtypeName>SmallShipMergeBlock</SubtypeName>
                      <EntityId>85144855921957113</EntityId>
                      <Name>85144855921957113</Name>
                      <Min x="-1" y="0" z="17" />
                      <BlockOrientation Forward="Right" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <CustomName>Cle Merge Block</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>1</NumberInGrid>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Gyro">
                      <SubtypeName>SmallBlockGyro</SubtypeName>
                      <EntityId>109176562666820815</EntityId>
                      <Name>109176562666820815</Name>
                      <Min x="0" y="3" z="8" />
                      <BlockOrientation Forward="Down" Up="Backward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <CustomName>Cle Gyroscope 4</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>6</NumberInGrid>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockLargeFlatAtmosphericThrust</SubtypeName>
                      <EntityId>137921161981972882</EntityId>
                      <Name>137921161981972882</Name>
                      <Min x="-4" y="0" z="17" />
                      <BlockOrientation Forward="Backward" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyTimerComponent</TypeId>
                            <Component xsi:type="MyObjectBuilder_TimerComponent">
                              <Repeat>true</Repeat>
                              <TimeToEvent>0</TimeToEvent>
                              <SetTimeMinutes>0</SetTimeMinutes>
                              <TimerEnabled>true</TimerEnabled>
                              <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                              <TimerType>Frame100</TimerType>
                              <FramesFromLastTrigger>0</FramesFromLastTrigger>
                              <TimerTickInFrames>100</TimerTickInFrames>
                              <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle Large Flat Atmo Thruster Po 09</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>3</NumberInGrid>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockLargeFlatAtmosphericThrust</SubtypeName>
                      <EntityId>127709003193999077</EntityId>
                      <Name>127709003193999077</Name>
                      <Min x="2" y="0" z="17" />
                      <BlockOrientation Forward="Backward" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyTimerComponent</TypeId>
                            <Component xsi:type="MyObjectBuilder_TimerComponent">
                              <Repeat>true</Repeat>
                              <TimeToEvent>0</TimeToEvent>
                              <SetTimeMinutes>0</SetTimeMinutes>
                              <TimerEnabled>true</TimerEnabled>
                              <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                              <TimerType>Frame100</TimerType>
                              <FramesFromLastTrigger>0</FramesFromLastTrigger>
                              <TimerTickInFrames>100</TimerTickInFrames>
                              <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle Large Flat Atmo Thruster Sb 10</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>4</NumberInGrid>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CargoContainer">
                      <SubtypeName>SmallBlockMediumContainer</SubtypeName>
                      <EntityId>96176431620480611</EntityId>
                      <Name>96176431620480611</Name>
                      <Min x="2" y="0" z="2" />
                      <BlockOrientation Forward="Left" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyInventoryBase</TypeId>
                            <Component xsi:type="MyObjectBuilder_Inventory">
                              <Items />
                              <nextItemId>0</nextItemId>
                              <Volume>3.375</Volume>
                              <Mass>9223372036854.775807</Mass>
                              <MaxItemCount>2147483647</MaxItemCount>
                              <Size xsi:nil="true" />
                              <InventoryFlags>CanReceive CanSend</InventoryFlags>
                              <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle Medium Cargo Container Sb 1</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>1</NumberInGrid>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CargoContainer">
                      <SubtypeName>SmallBlockMediumContainer</SubtypeName>
                      <EntityId>108838059434213433</EntityId>
                      <Name>108838059434213433</Name>
                      <Min x="-4" y="0" z="2" />
                      <BlockOrientation Forward="Right" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyInventoryBase</TypeId>
                            <Component xsi:type="MyObjectBuilder_Inventory">
                              <Items />
                              <nextItemId>0</nextItemId>
                              <Volume>3.375</Volume>
                              <Mass>9223372036854.775807</Mass>
                              <MaxItemCount>2147483647</MaxItemCount>
                              <Size xsi:nil="true" />
                              <InventoryFlags>CanReceive CanSend</InventoryFlags>
                              <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle Medium Cargo Container Po 2</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>2</NumberInGrid>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CargoContainer">
                      <SubtypeName>SmallBlockMediumContainer</SubtypeName>
                      <EntityId>133695098315550718</EntityId>
                      <Name>133695098315550718</Name>
                      <Min x="2" y="0" z="5" />
                      <BlockOrientation Forward="Down" Up="Right" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyInventoryBase</TypeId>
                            <Component xsi:type="MyObjectBuilder_Inventory">
                              <Items />
                              <nextItemId>0</nextItemId>
                              <Volume>3.375</Volume>
                              <Mass>9223372036854.775807</Mass>
                              <MaxItemCount>2147483647</MaxItemCount>
                              <Size xsi:nil="true" />
                              <InventoryFlags>CanReceive CanSend</InventoryFlags>
                              <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle Medium Cargo Container Sb 3</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>3</NumberInGrid>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CargoContainer">
                      <SubtypeName>SmallBlockMediumContainer</SubtypeName>
                      <EntityId>144049760384767023</EntityId>
                      <Name>144049760384767023</Name>
                      <Min x="-4" y="0" z="5" />
                      <BlockOrientation Forward="Down" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyInventoryBase</TypeId>
                            <Component xsi:type="MyObjectBuilder_Inventory">
                              <Items />
                              <nextItemId>0</nextItemId>
                              <Volume>3.375</Volume>
                              <Mass>9223372036854.775807</Mass>
                              <MaxItemCount>2147483647</MaxItemCount>
                              <Size xsi:nil="true" />
                              <InventoryFlags>CanReceive CanSend</InventoryFlags>
                              <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle Medium Cargo Container Po 4</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>4</NumberInGrid>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Conveyor">
                      <SubtypeName>SmallShipConveyorHub</SubtypeName>
                      <EntityId>76852970707699470</EntityId>
                      <Name>76852970707699470</Name>
                      <Min x="2" y="0" z="8" />
                      <BlockOrientation Forward="Backward" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Conveyor">
                      <SubtypeName>SmallShipConveyorHub</SubtypeName>
                      <EntityId>87391791500800636</EntityId>
                      <Name>87391791500800636</Name>
                      <Min x="-4" y="0" z="8" />
                      <BlockOrientation Forward="Backward" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Conveyor">
                      <SubtypeName>SmallShipConveyorHub</SubtypeName>
                      <EntityId>93162064640162779</EntityId>
                      <Name>93162064640162779</Name>
                      <Min x="-1" y="0" z="8" />
                      <BlockOrientation Forward="Down" Up="Backward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ShipConnector">
                      <SubtypeName>ConnectorMedium</SubtypeName>
                      <EntityId>126355846741067012</EntityId>
                      <Name>126355846741067012</Name>
                      <Min x="-1" y="-2" z="8" />
                      <BlockOrientation Forward="Down" Up="Right" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <DeformationRatio>0.5</DeformationRatio>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyTimerComponent</TypeId>
                            <Component xsi:type="MyObjectBuilder_TimerComponent">
                              <Repeat>true</Repeat>
                              <TimeToEvent>0</TimeToEvent>
                              <SetTimeMinutes>0</SetTimeMinutes>
                              <TimerEnabled>true</TimerEnabled>
                              <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                              <TimerType>Frame10</TimerType>
                              <FramesFromLastTrigger>50</FramesFromLastTrigger>
                              <TimerTickInFrames>80</TimerTickInFrames>
                              <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle Connector 1</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>1</NumberInGrid>
                      <Enabled>true</Enabled>
                      <MasterToSlaveTransform xsi:nil="true" />
                      <Strength>1E-06</Strength>
                      <MasterToSlaveGrid xsi:nil="true" />
                      <IsMaster>true</IsMaster>
                      <TradingEnabled>false</TradingEnabled>
                      <AutoUnlockTime>0</AutoUnlockTime>
                      <TimeOfConnection>0</TimeOfConnection>
                      <IsParkingEnabled>true</IsParkingEnabled>
                      <IsPowerTransferOverrideEnabled>false</IsPowerTransferOverrideEnabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CargoContainer">
                      <SubtypeName>SmallBlockMediumContainer</SubtypeName>
                      <EntityId>100732528110830976</EntityId>
                      <Name>100732528110830976</Name>
                      <Min x="-4" y="0" z="11" />
                      <BlockOrientation Forward="Down" Up="Right" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyInventoryBase</TypeId>
                            <Component xsi:type="MyObjectBuilder_Inventory">
                              <Items />
                              <nextItemId>0</nextItemId>
                              <Volume>3.375</Volume>
                              <Mass>9223372036854.775807</Mass>
                              <MaxItemCount>2147483647</MaxItemCount>
                              <Size xsi:nil="true" />
                              <InventoryFlags>CanReceive CanSend</InventoryFlags>
                              <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle Medium Cargo Container Po 5</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>5</NumberInGrid>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CargoContainer">
                      <SubtypeName>SmallBlockMediumContainer</SubtypeName>
                      <EntityId>115908635817634589</EntityId>
                      <Name>115908635817634589</Name>
                      <Min x="2" y="0" z="11" />
                      <BlockOrientation Forward="Down" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyInventoryBase</TypeId>
                            <Component xsi:type="MyObjectBuilder_Inventory">
                              <Items />
                              <nextItemId>0</nextItemId>
                              <Volume>3.375</Volume>
                              <Mass>9223372036854.775807</Mass>
                              <MaxItemCount>2147483647</MaxItemCount>
                              <Size xsi:nil="true" />
                              <InventoryFlags>CanReceive CanSend</InventoryFlags>
                              <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle Medium Cargo Container Sb 6</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>6</NumberInGrid>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CargoContainer">
                      <SubtypeName>SmallBlockMediumContainer</SubtypeName>
                      <EntityId>122026382859533213</EntityId>
                      <Name>122026382859533213</Name>
                      <Min x="2" y="0" z="14" />
                      <BlockOrientation Forward="Right" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyInventoryBase</TypeId>
                            <Component xsi:type="MyObjectBuilder_Inventory">
                              <Items />
                              <nextItemId>0</nextItemId>
                              <Volume>3.375</Volume>
                              <Mass>9223372036854.775807</Mass>
                              <MaxItemCount>2147483647</MaxItemCount>
                              <Size xsi:nil="true" />
                              <InventoryFlags>CanReceive CanSend</InventoryFlags>
                              <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle Medium Cargo Container Sb 7</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>10</NumberInGrid>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CargoContainer">
                      <SubtypeName>SmallBlockMediumContainer</SubtypeName>
                      <EntityId>138188536273604604</EntityId>
                      <Name>138188536273604604</Name>
                      <Min x="-4" y="0" z="14" />
                      <BlockOrientation Forward="Left" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyInventoryBase</TypeId>
                            <Component xsi:type="MyObjectBuilder_Inventory">
                              <Items />
                              <nextItemId>0</nextItemId>
                              <Volume>3.375</Volume>
                              <Mass>9223372036854.775807</Mass>
                              <MaxItemCount>2147483647</MaxItemCount>
                              <Size xsi:nil="true" />
                              <InventoryFlags>CanReceive CanSend</InventoryFlags>
                              <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle Medium Cargo Container Po 8</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>9</NumberInGrid>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Conveyor">
                      <SubtypeName>SmallBlockConveyor</SubtypeName>
                      <EntityId>110016153577798898</EntityId>
                      <Name>110016153577798898</Name>
                      <Min x="-1" y="1" z="3" />
                      <BlockOrientation Forward="Left" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Conveyor">
                      <SubtypeName>SmallBlockConveyor</SubtypeName>
                      <EntityId>80504776724018646</EntityId>
                      <Name>80504776724018646</Name>
                      <Min x="1" y="1" z="3" />
                      <BlockOrientation Forward="Right" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="2" y="3" z="15" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="0" y="3" z="3" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="-1" y="3" z="3" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_OreDetector">
                      <SubtypeName>SmallBlockOreDetector</SubtypeName>
                      <EntityId>79795224540583914</EntityId>
                      <Name>79795224540583914</Name>
                      <Min x="1" y="-1" z="3" />
                      <BlockOrientation Forward="Down" Up="Forward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <CustomName>Cle Ore Detector</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>2</NumberInGrid>
                      <Enabled>true</Enabled>
                      <DetectionRadius>50</DetectionRadius>
                      <BroadcastUsingAntennas>true</BroadcastUsingAntennas>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockLargeFlatAtmosphericThrust</SubtypeName>
                      <EntityId>87974399849745108</EntityId>
                      <Name>87974399849745108</Name>
                      <Min x="-4" y="-2" z="6" />
                      <BlockOrientation Forward="Down" Up="Forward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyTimerComponent</TypeId>
                            <Component xsi:type="MyObjectBuilder_TimerComponent">
                              <Repeat>true</Repeat>
                              <TimeToEvent>0</TimeToEvent>
                              <SetTimeMinutes>0</SetTimeMinutes>
                              <TimerEnabled>true</TimerEnabled>
                              <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                              <TimerType>Frame100</TimerType>
                              <FramesFromLastTrigger>0</FramesFromLastTrigger>
                              <TimerTickInFrames>100</TimerTickInFrames>
                              <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle Large Flat Atmo Thruster Po 05</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>8</NumberInGrid>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockLargeFlatAtmosphericThrust</SubtypeName>
                      <EntityId>115335720567421569</EntityId>
                      <Name>115335720567421569</Name>
                      <Min x="2" y="-2" z="6" />
                      <BlockOrientation Forward="Down" Up="Forward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyTimerComponent</TypeId>
                            <Component xsi:type="MyObjectBuilder_TimerComponent">
                              <Repeat>true</Repeat>
                              <TimeToEvent>0</TimeToEvent>
                              <SetTimeMinutes>0</SetTimeMinutes>
                              <TimerEnabled>true</TimerEnabled>
                              <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                              <TimerType>Frame100</TimerType>
                              <FramesFromLastTrigger>0</FramesFromLastTrigger>
                              <TimerTickInFrames>100</TimerTickInFrames>
                              <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle Large Flat Atmo Thruster Sb 06</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>7</NumberInGrid>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ReflectorLight">
                      <SubtypeName>SmallBlockFrontLight</SubtypeName>
                      <EntityId>102094236906460661</EntityId>
                      <Name>102094236906460661</Name>
                      <Min x="-3" y="-1" z="1" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <CustomName>Cle Spotlight Po 1</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>4</NumberInGrid>
                      <Enabled>false</Enabled>
                      <Radius>10</Radius>
                      <ReflectorRadius>120</ReflectorRadius>
                      <Falloff>1.5</Falloff>
                      <Intensity>3</Intensity>
                      <BlinkIntervalSeconds>0</BlinkIntervalSeconds>
                      <BlinkLenght>10</BlinkLenght>
                      <BlinkOffset>0</BlinkOffset>
                      <Offset>0.5</Offset>
                      <RotationSpeed>0.08</RotationSpeed>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ReflectorLight">
                      <SubtypeName>SmallBlockFrontLight</SubtypeName>
                      <EntityId>89628262949282928</EntityId>
                      <Name>89628262949282928</Name>
                      <Min x="3" y="-1" z="1" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <CustomName>Cle Spotlight Sb 2</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>5</NumberInGrid>
                      <Enabled>false</Enabled>
                      <Radius>10</Radius>
                      <ReflectorRadius>120</ReflectorRadius>
                      <Falloff>1.5</Falloff>
                      <Intensity>3</Intensity>
                      <BlinkIntervalSeconds>0</BlinkIntervalSeconds>
                      <BlinkLenght>10</BlinkLenght>
                      <BlinkOffset>0</BlinkOffset>
                      <Offset>0.5</Offset>
                      <RotationSpeed>0.08</RotationSpeed>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MyProgrammableBlock">
                      <SubtypeName>SmallProgrammableBlockReskin</SubtypeName>
                      <EntityId>127092542879941577</EntityId>
                      <Name>127092542879941577</Name>
                      <Min x="0" y="3" z="10" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyMultiTextPanelComponent</TypeId>
                            <Component xsi:type="MyObjectBuilder_MultiTextPanelComponent">
                              <TextPanelsContents>
                                <MySerializedTextPanelData>
                                  <ChangeInterval>0</ChangeInterval>
                                  <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
                                  <FontSize>1</FontSize>
                                  <ShowText>NONE</ShowText>
                                  <FontColor>
                                    <PackedValue>4294967295</PackedValue>
                                    <X>255</X>
                                    <Y>255</Y>
                                    <Z>255</Z>
                                    <R>255</R>
                                    <G>255</G>
                                    <B>255</B>
                                    <A>255</A>
                                  </FontColor>
                                  <BackgroundColor>
                                    <PackedValue>4278190080</PackedValue>
                                    <X>0</X>
                                    <Y>0</Y>
                                    <Z>0</Z>
                                    <R>0</R>
                                    <G>0</G>
                                    <B>0</B>
                                    <A>255</A>
                                  </BackgroundColor>
                                  <CurrentShownTexture>0</CurrentShownTexture>
                                  <SelectedScript />
                                  <TextPadding>2</TextPadding>
                                  <ScriptBackgroundColor>
                                    <PackedValue>4288108544</PackedValue>
                                    <X>0</X>
                                    <Y>88</Y>
                                    <Z>151</Z>
                                    <R>0</R>
                                    <G>88</G>
                                    <B>151</B>
                                    <A>255</A>
                                  </ScriptBackgroundColor>
                                  <ScriptForegroundColor>
                                    <PackedValue>4294962611</PackedValue>
                                    <X>179</X>
                                    <Y>237</Y>
                                    <Z>255</Z>
                                    <R>179</R>
                                    <G>237</G>
                                    <B>255</B>
                                    <A>255</A>
                                  </ScriptForegroundColor>
                                  <Sprites>
                                    <Length>0</Length>
                                  </Sprites>
                                </MySerializedTextPanelData>
                                <MySerializedTextPanelData>
                                  <ChangeInterval>0</ChangeInterval>
                                  <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
                                  <FontSize>1</FontSize>
                                  <ShowText>NONE</ShowText>
                                  <FontColor>
                                    <PackedValue>4294967295</PackedValue>
                                    <X>255</X>
                                    <Y>255</Y>
                                    <Z>255</Z>
                                    <R>255</R>
                                    <G>255</G>
                                    <B>255</B>
                                    <A>255</A>
                                  </FontColor>
                                  <BackgroundColor>
                                    <PackedValue>4278190080</PackedValue>
                                    <X>0</X>
                                    <Y>0</Y>
                                    <Z>0</Z>
                                    <R>0</R>
                                    <G>0</G>
                                    <B>0</B>
                                    <A>255</A>
                                  </BackgroundColor>
                                  <CurrentShownTexture>0</CurrentShownTexture>
                                  <SelectedScript />
                                  <TextPadding>2</TextPadding>
                                  <ScriptBackgroundColor>
                                    <PackedValue>4288108544</PackedValue>
                                    <X>0</X>
                                    <Y>88</Y>
                                    <Z>151</Z>
                                    <R>0</R>
                                    <G>88</G>
                                    <B>151</B>
                                    <A>255</A>
                                  </ScriptBackgroundColor>
                                  <ScriptForegroundColor>
                                    <PackedValue>4294962611</PackedValue>
                                    <X>179</X>
                                    <Y>237</Y>
                                    <Z>255</Z>
                                    <R>179</R>
                                    <G>237</G>
                                    <B>255</B>
                                    <A>255</A>
                                  </ScriptForegroundColor>
                                  <Sprites>
                                    <Length>0</Length>
                                  </Sprites>
                                </MySerializedTextPanelData>
                              </TextPanelsContents>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle Automaton PB 3 [adventure]</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>1</NumberInGrid>
                      <Enabled>true</Enabled>
                      <Program>/*
 * R e a d m e
 * -----------
 * 
 * Underworld Adventurer
 */

readonly ProgramCore pc;
DisplayUI dui;
DisplayService display;

public Program()
{
    double timestep = 6.0 * 1.0 / 60.0;

    Echo($"Booting Core...");
    //Program Core and Primitives
    pc = new ProgramCore(Runtime, IGC, GridTerminalSystem, Me);
    List&lt;IMyRemoteControl&gt; rcs = new List&lt;IMyRemoteControl&gt;();
    GridTerminalSystem.GetBlocksOfType(rcs, x =&gt; x.IsSameConstructAs(Me));
    var rc = rcs.FirstOrDefault();

    dui = new DisplayUI(pc, GridTerminalSystem, "BMC");
    display = new DisplayService(pc, GridTerminalSystem, Me, "BMCAux");

    Echo($"Booting Gyros...");
    //Primary Systems
    var gyros = new GyroControl(timestep, GridTerminalSystem, rc);
    Propulsion prop = MakePropulsion(rc, display);

    //Cruise
    Echo($"Booting Cruise Control Systems...");
    BasicNavigation rtu = new BasicNavigation(pc, GridTerminalSystem, rc, gyros, prop, display);
    var navUI = new NavigationUIText(rtu, dui);

    //Life Support
    Echo($"Booting Life Support...");
    var lsm = new LifeSupportManager(pc, GridTerminalSystem, Me);
    var lsmui = new LifeSupportUIText(lsm, dui);

    //Missile Counter
    Echo("Booting Logistics...");
    {
        try
        {
            RecipeCounter reco = new RecipeCounter(GridTerminalSystem, Me, Echo);
            var rct = new RecipeUIText(reco, dui, display);
        }
        catch (ArgumentException)
        {
            Echo("Failed.");
        }
    }

    //Ship Diagnostic Systems
    Echo($"Creating Diagnostic Systems...");
    {
        var st = new SpinTest(pc, rc, display, gyros);
        var at = new AccelTest(pc, GridTerminalSystem, rc, display, prop);
        var da = new DamageAssessment(GridTerminalSystem, Me);
        var pidT = new YawPID(rc, display, gyros);
        var diagT = new DiagnosticText(dui, display, rtu, st, pidT, at, da);
    }
    Echo($"Online.");
}

private Propulsion MakePropulsion(IMyRemoteControl rc, DisplayService ds = null)
{
    string bmc = "BMC.BDU";
    string mxspeed = "maxSpeed";
    const double timeStep = 1.0 / 10.0;

    MyIni ini = new MyIni();
    ini.TryParse(Me.CustomData);
    double myMaxSpeed = defaultMaxSpeed;
    myMaxSpeed = ini.Get(bmc, mxspeed).ToDouble(myMaxSpeed);
    var pid = new PID(1, 0, 0, timeStep);
    var prop = new Propulsion(rc, VirtualThruster.MakeThrusters(rc, GridTerminalSystem), myMaxSpeed, pid, 5.0, 0.5, ds);
    return prop;
}

public void Main(string argument, UpdateType updateSource)
{
    try
    {
        pc.Main(argument, updateSource);
    }
    catch(Exception ex)
    {
        dui.BlueScreen(ex.Message);
        display.BlueScreen(ex.StackTrace);
        throw ex;
    }
}

public class AbstractDisplay
{
    protected List&lt;IMyTextSurface&gt; Surfaces { get; private set; }

    private readonly string tag;
    public AbstractDisplay(string tag)
    {
        this.tag = tag;
        Surfaces = new List&lt;IMyTextSurface&gt;();
    }
    public void UpdateBlocks(IMyGridTerminalSystem gts, IMyProgrammableBlock me)
    {
        Surfaces.Clear();
        gts.GetBlocksOfType&lt;IMyTerminalBlock&gt;(null, (p) =&gt;
        {
            if (p.CustomName.Contains($"[{tag}]") || p.CustomName.Contains($"[{tag}:"))
            {
                int num = 0;
                string text = p.CustomName;
                num = FetchSurfaceNum(text, tag);
                IMyTextSurfaceProvider sp = p as IMyTextSurfaceProvider;
                if (sp != null) Surfaces.Add(sp.GetSurface(num));
                else if (p is IMyTextSurface) Surfaces.Add(p as IMyTextSurface);
            }
            return false;
        });
        foreach (var s in Surfaces)
        {
            s.Alignment = TextAlignment.LEFT;
            s.ContentType = ContentType.TEXT_AND_IMAGE;
        }
    }
    public static int FetchSurfaceNum(string text, string tag)
    {
        int num = 0;
        text = text.Substring(text.LastIndexOf($"[{tag}") + tag.Length + 1);
        if (text[0] == ':' &amp;&amp; text[2] == ']') int.TryParse(text[1].ToString(), out num);
        return num;
    }

    public void BlueScreen(string ex)
    {
        foreach(var s in Surfaces)
        {
            s.BackgroundColor = Color.Blue;
            s.FontColor = Color.Yellow;
            s.WriteText("Blue Screen of Death\n");
            s.WriteText(ex, true);
        }
    }
}

public class AssemblerManager : IUpdateBlocks
{
    readonly List&lt;IMyAssembler&gt; assms = new List&lt;IMyAssembler&gt;();
    IMyAssembler leadAssembler;
    readonly Action&lt;string&gt; Echo;

    public AssemblerManager(IMyGridTerminalSystem gts, IMyProgrammableBlock me, Action&lt;string&gt; echo)
    {
        this.Echo = echo;
        assms = new List&lt;IMyAssembler&gt;();
        UpdateBlocks(gts, me);
    }

    public void UpdateBlocks(IMyGridTerminalSystem gts, IMyProgrammableBlock me)
    {
        assms.Clear();
        gts.GetBlocksOfType(assms, x=&gt;x.IsSameConstructAs(me));
        leadAssembler = assms.FirstOrDefault(x =&gt; x.CooperativeMode == false &amp;&amp; x.BlockDefinition.SubtypeId =="LargeAssembler");
        if (leadAssembler == null) leadAssembler = assms.FirstOrDefault();
        if (leadAssembler != null) leadAssembler.CooperativeMode = false;
        foreach (var asm in assms)
        {
            if (asm != leadAssembler) asm.CooperativeMode = true;
        }
    }

    public bool Working
    {
        get
        {
            return leadAssembler.IsProducing;
        }
    }

    public void Assemble(List&lt;MyTuple&lt;MyItemType, double&gt;&gt; difference)
    {
        foreach (var assm in assms)
        {
            assm.Mode = MyAssemblerMode.Assembly;
            assm.ClearQueue();
        }

        foreach (var item in difference)
        {
            //E($"{item.Item1.SubtypeId}");
            double amount = item.Item2;
            if (amount &gt; 0.0) // Different
            {
                try
                {
                    var def = TypeToBlueprint(item.Item1);
                    leadAssembler.AddQueueItem(def, Math.Abs(amount));
                }
                catch(Exception)
                {
                    Echo(item.Item1.ToString());
                }
            }
        }
    }

    public void Disassemble(List&lt;MyTuple&lt;MyItemType, double&gt;&gt; difference)
    {
        foreach (var assm in assms)
        {
            assm.Mode = MyAssemblerMode.Disassembly;
            assm.ClearQueue();
        }

        foreach (var item in difference)
        {
            double amount = item.Item2;
            if (amount &lt; 0.0) // Different
            {
                MyDefinitionId def = TypeToBlueprint(item.Item1);
                foreach (var asm in assms)
                {
                    asm.AddQueueItem(def, Math.Abs(amount) / assms.Count);
                }
                leadAssembler?.AddQueueItem(def, Math.Abs(amount) % assms.Count);
            }
        }
    }

    private MyDefinitionId TypeToBlueprint(MyItemType item)
    {
        //Just works
        /*Interior Plate
                Steel Plate
                Bulletproof Glass
                Canvas
                Large Steel Tube
                Display
                Metal Grid
                Power Cell
                Small Steel Tube
                Solar Cell
                Superconductor Component
                Thruster Components
                Zone Chip*/
        //Needs fix
        /*Computer / ComputerComponent
                Construction/Construction Component
                Detector/Component
                Explosives/Component
                Girder/Component
                GravityGenerator/Component
                Medical/Component
                Motor/Component
                Radio Communication/Component
                Reactor/Component*/
        //MyDefinitionId id;
        //id = MyDefinitionId.Parse(item.TypeId+"/"+item.SubtypeId);
        switch(item.SubtypeId)
        {
            case "Computer":
            case "Construction":
            case "Detector":
            case "Explosives":
            case "Girder":
            case "GravityGenerator":
            case "Medical":
            case "Motor":
            case "RadioCommunication":
            case "Reactor":
            case "Thrust":
                return MyDefinitionId.Parse(blueprintDef + item.SubtypeId + "Component");
            default:
            return MyDefinitionId.Parse(blueprintDef + item.SubtypeId);
        }
    }
}

public interface IFlightStrategy
{
    bool Start();
    void Stop();
    bool Update6(double elapsedTime);
}

public class BasicNavigation : IUpdateBlocks
{
    readonly IProgramCore pc;
    private readonly IMyRemoteControl rc;
    IFlightStrategy strategy;
    readonly List&lt;IMyCockpit&gt; cockpits = new List&lt;IMyCockpit&gt;();
    readonly List&lt;IMyCameraBlock&gt; cameraBlocks;

    readonly IFlightStrategy cruise, dock, up;

    public bool SetStrategy(IFlightStrategy newStrat)
    {
        if (strategy == newStrat)
        {
            if (!newStrat?.Start() ?? false)
            {
                strategy.Stop();
                strategy = null;
            }
        }
        else
        {
            strategy?.Stop();
            pc.RemoveUpdate6(CruiseUpdate);
            if (newStrat?.Start() ?? false)
            {
                strategy = newStrat;
                pc.AddUpdate6(CruiseUpdate);
            }
            else strategy = null;
        }
        return (strategy == newStrat);
    }

    public BasicNavigation(ProgramCore pc, IMyGridTerminalSystem gts, IMyRemoteControl rc, GyroControl gyros, Propulsion propulsion, DisplayService ds)
    {
        this.pc = pc;
        this.rc = rc;
        cameraBlocks = new List&lt;IMyCameraBlock&gt;();

        cruise = new LevelOut(rc, gyros, propulsion, cockpits);
        dock = new LandAt(rc, gyros, propulsion, ds, cameraBlocks, cockpits);
        up = new RotateToGrav(rc, gyros);

        pc.AddCommand("escape500", Add500);
        pc.AddCommand("escape-500", Drop500);
        pc.AddCommand("cruiseon", () =&gt; SetStrategy(cruise));
        pc.AddCommand("cruiseoff", Stop);
        pc.AddCommand("aheadhalf", AheadHalf);
        pc.AddCommand("align", Align);
        pc.AddCommand("docklase", ()=&gt;Dock());
        pc.Add(this);
    }

    public bool Dock()
    {
        return SetStrategy(dock);
    }

    public double TargetElevation
    {
        get { return ((LevelOut)cruise).TargetElevation; }
    }

    public double TargetSpeed
    {
        get
        {
            return ((LevelOut)cruise).TargetSpeed;
        }
        set
        {
            SetStrategy(cruise);
            ((LevelOut)cruise).TargetSpeed = value;
        }
    }

    public void Stop()
    {
        SetStrategy(null);
    }

    public void Align()
    {
        SetStrategy(up);
    }

    public void AheadHalf()
    {
        SetStrategy(cruise); ((LevelOut)cruise).AheadHalf();
    }

    public void Add500()
    {
        SetStrategy(cruise); ((LevelOut)cruise).Add500();
    }

    public void Drop500()
    {
        SetStrategy(cruise); ((LevelOut)cruise).Drop500();
    }

    private void CruiseUpdate(double elapsedTime)
    {
        if (!strategy.Update6(elapsedTime))
        {
            SetStrategy(null);
        }
    }

    public void UpdateBlocks(IMyGridTerminalSystem gts, IMyProgrammableBlock me)
    {
        gts.GetBlocksOfType(cameraBlocks, x =&gt; x.IsSameConstructAs(me) &amp;&amp; x.CustomName.Contains("[dockcam]"));

        gts.GetBlocksOfType(cockpits, x =&gt; rc.IsSameConstructAs(x) &amp;&amp; x.CanControlShip);
        if (cockpits.Any(x =&gt; x.IsMainCockpit)) cockpits.RemoveAll(x =&gt; !x.IsMainCockpit);
    }

    public class RotateToGrav : IFlightStrategy
    {
        readonly IMyRemoteControl rc;
        readonly GyroControl gyros;
        Vector3D initialDir;

        public RotateToGrav(IMyRemoteControl rc, GyroControl gyros)
        {
            this.rc = rc;
            this.gyros = gyros;
        }

        public bool Start()
        {
            var up = -rc.GetNaturalGravity();
            if (!up.IsZero())
            {
                up.Normalize();
                initialDir = Vector3D.Reject(rc.WorldMatrix.Forward, up).Normalized();
                if (initialDir.IsZero()) { up.CalculatePerpendicularVector(out initialDir); }
                return true;
            }
            return false;
        }

        public void Stop()
        {
            gyros.Override = false;
        }

        public bool Update6(double elapsedTime)
        {
            var up = -rc.GetNaturalGravity();
            up.Normalize();
            if (up.LengthSquared() &lt;= double.Epsilon || (rc.WorldMatrix.Up.Dot(up) &gt; 0.9995 &amp;&amp; rc.GetShipVelocities().AngularVelocity.LengthSquared() &lt;= 0.0005))
            {
                gyros.Override = false;
                return false;
            }
            else
            {
                gyros.Rotate(initialDir, up);
                return true;
            }
        }
    }

    public class LevelOut : IFlightStrategy
    {
        readonly IMyRemoteControl rc;
        readonly GyroControl gc;
        readonly Propulsion prop;
        readonly List&lt;IMyCockpit&gt; cockpits;
        //IMyCockpit ck;
        public double TargetElevation { get; private set; }
        public double TargetSpeed { get; set; }

        public LevelOut(IMyRemoteControl rc, GyroControl gc, Propulsion prop, List&lt;IMyCockpit&gt; cockpits)
        {
            this.rc = rc;
            this.gc = gc;
            this.prop = prop;
            this.cockpits = cockpits;

            double elev;
            if (rc.TryGetPlanetElevation(MyPlanetElevation.Sealevel, out elev))
            {
                TargetElevation = elev;
            }
            else
            {
                TargetElevation = 2000.0;
            }
            TargetSpeed = 0.0;
        }

        public void Add500()
        {
            TargetElevation += 500.0;
        }

        public void Drop500()
        {
            TargetElevation -= 500.0;
        }

        public void AheadHalf()
        {
            TargetSpeed = 50.0;
        }

        public bool Update6(double elapsedTime)
        {
            double elev;
            if (rc.TryGetPlanetElevation(MyPlanetElevation.Sealevel, out elev))
            {
                var grav = rc.GetNaturalGravity();
                var fwd = rc.WorldMatrix.Forward;
                var up = -rc.GetNaturalGravity();
                var gravMag = up.Normalize();
                {
                    var ck = cockpits.FirstOrDefault(x =&gt; x.IsUnderControl);
                    var yawChange = ck?.RotationIndicator.Y ?? 0.0f;
                    fwd = fwd.Rotate(up, -Math.Sign(yawChange) * 0.6);
                    fwd = Vector3D.ProjectOnPlane(ref fwd, ref up);
                    fwd.Normalize();
                }
                prop.Thrust(rc.GetPosition() + up * (TargetElevation - elev), fwd * TargetSpeed, grav);
                //Execute(rc, prop, fwd, targetSpeed, TargetElevation, elev, up, gravMag);
                gc.Rotate(fwd, up);
                //displayService.WriteText($"{up.Dot(prop.NeededThrustDir):F2}\n",false);
                //prop.Thrust(hp, Vector3D.Zero, grav);
                return true;
            }
            return false;
        }

        public bool Start()
        {
            double elev;
            if (rc.TryGetPlanetElevation(MyPlanetElevation.Sealevel, out elev))
            {
                //This occurs if cruise is already running.
                if (!gc.Override)
                {
                    TargetSpeed = 0;
                    TargetElevation = elev;
                }
                return true;
            }
            return false;
        }

        public void Stop()
        {
            TargetSpeed = 0;
            gc.Override = false;
            prop.Stop();
        }
    }

    public class LandAt : IFlightStrategy
    {
        readonly List&lt;IMyCameraBlock&gt; dockCameras;
        readonly IMyRemoteControl rc;
        readonly GyroControl gyros;
        readonly Propulsion prop;
        readonly DisplayService displayService;
        readonly List&lt;IMyCockpit&gt; cockpits;
        Vector3D hp;

        public LandAt(IMyRemoteControl rc, GyroControl gyros, Propulsion prop, DisplayService displayService, List&lt;IMyCameraBlock&gt; dockCamera, List&lt;IMyCockpit&gt; cockpits)
        {
            this.dockCameras = dockCamera;
            this.rc = rc;
            this.gyros = gyros;
            this.prop = prop;
            this.displayService = displayService;
            this.cockpits = cockpits;
        }

        public bool Update6(double elapsedTime)
        {
            double elev;
            if (rc.TryGetPlanetElevation(MyPlanetElevation.Sealevel, out elev))
            {
                var grav = rc.GetNaturalGravity();
                var fwd = rc.WorldMatrix.Forward;
                var up = -rc.GetNaturalGravity();
                var gravMag = up.Normalize();
                var yawChange = cockpits.Sum(x =&gt; x.IsUnderControl &amp;&amp; x.CanControlShip ? x.RotationIndicator.Y : 0.0f);
                //var yawChange = ck?.RotationIndicator.Y ?? 0.0f;
                fwd = fwd.Rotate(up, -Math.Sign(yawChange) * 0.6);
                fwd = Vector3D.ProjectOnPlane(ref fwd, ref up);
                fwd.Normalize();
                gyros.Rotate(fwd, up);
                prop.Thrust(hp, Vector3D.Zero, grav);
                if ((rc.GetPosition() - hp).LengthSquared() &gt; 0.001 || rc.GetShipVelocities().LinearVelocity.LengthSquared() &gt; 0.001) return true;
            }
            return false;
        }

        public bool Start()
        {
            var dockCamera = dockCameras.FirstOrDefault();
            if (dockCamera != null)
            {
                dockCamera.EnableRaycast = true;
                displayService.WriteText($"Di: {dockCamera.RaycastDistanceLimit}\n", false);
                var r = dockCamera.Raycast(15000);
                if (r.HitPosition != null)
                {
                    const double offset = 250;
                    const double tooClose = 5;
                    hp = r.HitPosition ?? Vector3D.Zero;
                    var d2 = (rc.GetPosition() - hp).LengthSquared();
                    double d;
                    if (d2 &gt; offset * offset || d2 &lt; tooClose * tooClose)
                    {
                        d = offset;
                    }
                    else
                    {
                        d = tooClose;
                    }
                    hp += -d * rc.GetNaturalGravity().Normalized();
                    MyWaypointInfo wp = new MyWaypointInfo("Autopilot", hp);
                    displayService.WriteText(wp.ToString());
                    prop.On();
                    return true;
                }
                displayService.WriteText("Failed to find target.\n");
                displayService.WriteText($"{r.Type}\n");
            }
            return false;
        }

        public void Stop()
        {
            dockCameras.ForEach(x =&gt; x.EnableRaycast = false);
            gyros.Override = false;
            prop.Stop();
        }
    }
}

public class DiagnosticText
{
    public DiagnosticText(DisplayUI dui, DisplayService display, BasicNavigation bn, IFlightStrategy st, IFlightStrategy yp, ISimpleRender at, DamageAssessment da)
    {
        var dMenu = new Menu(dui, "Diagnostics");
        dui.Add(dMenu);
        dMenu.Add(dui.Back);
        DamageReportText drt = new DamageReportText(da, display);
        dMenu.Add(new MenuItem("Ship Damage", () =&gt; drt.Render()));
        dMenu.Add(new MenuItem("Acceleration Test", () =&gt; at.Render()));
        dMenu.Add(new MenuItem("Gyro Test (avoid in gravity)", ()=&gt;bn.SetStrategy(st)));
        dMenu.Add(new MenuItem("YawPID Test", () =&gt;bn.SetStrategy(yp)));
    }
}

public interface ISimpleRender
{
    void Render();
}

public class DamageReportText : ISimpleRender
{
    readonly DamageAssessment da;
    readonly DisplayService ds;
    readonly List&lt;IMyTerminalBlock&gt; list = new List&lt;IMyTerminalBlock&gt;();
    public DamageReportText(DamageAssessment da, DisplayService ds)
    {
        this.da = da;
        this.ds = ds;
    }

    public void Render()
    {
        da.AssessDamage(list);
        if (list.Count &gt; 0)
        {
            ds.WriteText("Damaged Blocks:\n", false);
            ds.WriteText("===============\n\n");
            foreach (IMyTerminalBlock block in list)
            {
                ds.WriteText($"{block.CustomName}\n");
            }
        }
        else
        {
            ds.WriteText("No damaged blocks.", false);
        }
    }
}

internal class Diff
{
    readonly List&lt;MyTuple&lt;MyItemType, double&gt;&gt; difference;

    public Diff(List&lt;MyTuple&lt;MyItemType, double&gt;&gt; difference)
    {
        this.difference = new List&lt;MyTuple&lt;MyItemType, double&gt;&gt;(difference);
    }

    public void Assemble(AssemblerManager assembler)
    {
        assembler.Assemble(difference);
    }

    public void Disassemble(AssemblerManager assembler)
    {
        assembler.Disassemble(difference);
    }

    public override string ToString()
    {
        string s = "";
        foreach (var item in difference)
        {
            s += $"{item.Item1} {item.Item2}\n";
        }
        return s;
    }
}

public class DisplayService : AbstractDisplay, IUpdateBlocks
{
    public DisplayService(ProgramCore pc, IMyGridTerminalSystem gts, IMyProgrammableBlock me, string tag) : base(tag)
    {
        UpdateBlocks(gts, me);
        pc.Add(this);
    }

    internal void WriteText(string text, bool append=true)
    {
        foreach (var s in Surfaces)
        {
            s.WriteText(text, append);
        }
    }

    public static string TimeFormat(double seconds)
    {
        if (seconds &lt; 1.0) return $"{seconds * 1000:F0}ms";
        if (seconds &lt; 10.0) return $"{seconds:F1}s";
        if (seconds &lt; 100) return $"{seconds:F0}s";
        if (seconds &lt; 90*60) return $"{(seconds/60.0):F0}m";
        if (seconds &lt; 3600*36) return $"{(seconds / 3600.0):F0}h";
        return $"{(seconds / (3600.0*24)):F0}d";
    }
}

public interface IMenuItem
{
    void Apply();
    void Draw(IMySurfaceWrapper surface);
}

public interface IMySurfaceWrapper
{
    void Write(string text);
    void Clear();
}

public class TextImpl : IMySurfaceWrapper
{
    readonly List&lt;IMyTextSurface&gt; surfaces;// = new List&lt;IMyTextSurface&gt;();
    public TextImpl(List&lt;IMyTextSurface&gt; surfaces)
    {
        this.surfaces = surfaces;
    }

    //public TextImpl(IMyTextSurface surface)
    //{
    //    this.surfaces.Add(surface);
    //}

    public void Clear()
    {
        foreach (var s in surfaces)
        {
            s.WriteText(string.Empty, false);
        }
    }

    public void Write(string text)
    {
        foreach (var s in surfaces)
        {
            s.WriteText(text, true);
        }
    }
}

public class StatusMenuItem : IMenuItem
{
    readonly Action action;
    readonly Func&lt;string&gt; text;

    public StatusMenuItem(Func&lt;string&gt; textAction, Action action)
    {
        this.text = textAction;
        this.action = action;
    }

    public void Apply()
    {
        action();
    }

    public void Draw(IMySurfaceWrapper surface)
    {
        surface.Write(text());
    }
}

public class ToggleNumberMenuItem&lt;T&gt; : IMenuItem
{
    T[] tList;
    int index;
    Action&lt;T&gt; setAction;
    Func&lt;T&gt; getFunc;
    string propertyName;

    public ToggleNumberMenuItem(string propertyName, T[] tList, Func&lt;T&gt; getFunc, Action&lt;T&gt; setAction)
    {
        this.tList = tList;
        index = 0;
        this.setAction = setAction;
        this.propertyName = propertyName;
        this.getFunc = getFunc;
    }
    public void Apply()
    {
        if (tList[index].Equals(getFunc()))
        {
            index = (index + 1) % tList.Length;
        }
        else
        {
            index = 1;
        }
        setAction(tList[index]);
    }

    public void Draw(IMySurfaceWrapper surface)
    {
        surface.Write($"{propertyName}: {getFunc()}");
    }
}

public class MenuItem : IMenuItem
{
    readonly Action action;
    readonly string text;

    public MenuItem(string text, Action action)
    {
        this.text = text;
        this.action = action;
    }

    public void Apply()
    {
        action();
    }

    public void Draw(IMySurfaceWrapper surface)
    {
        surface.Write(text);
    }
}

public interface IDisplayUI
{
    void Push(Menu menu);
    void Pop();
}

public class Menu : IMenuItem
{
    protected readonly List&lt;IMenuItem&gt; choices = new List&lt;IMenuItem&gt;();
    protected int caretIndex = 0;
    readonly string title = "&lt;Menu&gt;";
    readonly IDisplayUI parent;

    public Menu(IDisplayUI parent, string name)
    {
        this.parent = parent;
        title = name;
    }

    public virtual void Render(IMySurfaceWrapper surface)
    {
        int i = 0;
        foreach (var c in choices)
        {
            if (caretIndex == i)
            {
                surface.Write("&gt;");
            }
            else surface.Write(" ");
            WriteEntry(i++, surface);
            surface.Write("\n");
        }
        while (i &lt; 9)
        {
            surface.Write("\n");
            ++i;
        }
    }

    protected virtual void WriteEntry(int i, IMySurfaceWrapper surface)
    {
        choices[i].Draw(surface);
    }

    public void Add(IMenuItem item)
    {
        choices.Add(item);
    }

    public void Apply()
    {
        //choices[caretIndex].Apply();
        parent.Push(this);
    }

    public void Up()
    {
        --caretIndex;
        if (caretIndex &lt; 0) caretIndex = 0;
    }
    public void Down()
    {
        ++caretIndex;
        if (caretIndex &gt;= choices.Count) caretIndex = choices.Count-1;
    }

    public void Action()
    {
        choices[caretIndex].Apply();
    }

    public void Draw(IMySurfaceWrapper surface)
    {
        surface.Write(title);
    }
}

public class DisplayUI : AbstractDisplay, IDisplayUI
{
    readonly Stack&lt;Menu&gt; menuStack = new Stack&lt;Menu&gt;();
    readonly IMySurfaceWrapper surface;
    public string Status { get; set; }
    public string Message { get; set; }

    public IMenuItem Back
    {
        get; private set;
    }

    public DisplayUI(ProgramCore pc, IMyGridTerminalSystem gts, string tag) : base(tag)
    {
        Status = "Status";
        Message = "";
        Back = new MenuItem("Back", () =&gt; { this.Pop(); });
        UpdateBlocks(gts, null);
        surface = new TextImpl(Surfaces);
        pc.AddCommand("up", Up);
        pc.AddCommand("down", Down);
        pc.AddCommand("apply", Apply);
        var root = new Menu(this, "&lt;Root Menu&gt;");
        Push(root);
        Render();
    }

    public void Render()
    {
        surface.Clear();
        surface.Write($"{Status}\n");
        surface.Write("====\n");
        //Write the status.
        //Loop to write the choices; add the caret where it belongs.
        //Write the message.
        menuStack.Peek().Render(surface);
        surface.Write("====\n");
        surface.Write($"{Message}\n");
    }

    public void Up()
    {
        menuStack.Peek().Up();
        Render();
    }

    public void Down()
    {
        menuStack.Peek().Down();
        Render();
    }

    public void Apply()
    {
        Message = "";
        try
        {
            menuStack.Peek().Action();
        }
        catch (NullReferenceException)
        {
            Message = "Can't act. Null Reference Caught.";
        }
        Render();
    }

    public void Push(Menu menu)
    {
        menuStack.Push(menu);
    }

    public void Pop()
    {
        menuStack.Pop();
    }

    public void Add(IMenuItem item)
    {
        menuStack.Peek().Add(item);
        Render();
    }
}

public class GyroControl : IUpdateBlocks
{
    const double maxAngular = 6.2;
    //const double gyroProportionalGain = 10;
    //const double gyroDerivativeGain = 2.0;
    //const double gyroProportionalGain = 9.00;
    //const double gyroDerivativeGain = 4.80;
    //const double gyroProportionalGain = 7.25;
    //const double gyroDerivativeGain = 4.40;
    const double gyroProportionalGain = 1.00;
    const double gyroDerivativeGain = 0.0;
    const double gyroIntegralGain = 0.0;
    readonly PID pitchPID;
    public PID yawPID;
    readonly PID rollPID;
    private readonly string groupName;
    readonly IMyShipController rc;

    private readonly List&lt;IMyGyro&gt; gyros = new List&lt;IMyGyro&gt;();

    public bool Override
    {
        get
        {
            return gyros.First().GyroOverride;
        }
        internal set
        {
            foreach (var g in gyros) g.GyroOverride = value;
        }

    }

    public GyroControl(double timestep, IMyGridTerminalSystem gts, IMyRemoteControl rc, string groupName = null)
    {
        if (rc == null) throw new ArgumentNullException("rc");
        this.rc = rc;
        pitchPID = new PID(gyroProportionalGain, gyroIntegralGain, gyroDerivativeGain, timestep);
        yawPID = new PID(gyroProportionalGain, gyroIntegralGain, gyroDerivativeGain, timestep);
        rollPID = new PID(gyroProportionalGain, gyroIntegralGain, gyroDerivativeGain, timestep);
        this.groupName = groupName;
        UpdateBlocks(gts);
        foreach (var g in gyros)
        {
            g.Pitch = 0.0f;
            g.Yaw = 0.0f;
            g.Roll = 0.0f;
        }
    }

    public void UpdateBlocks(IMyGridTerminalSystem gts, IMyProgrammableBlock me = null)
    {
        gyros.Clear();
        if (groupName == null) gts.GetBlocksOfType(gyros, x =&gt; x.IsSameConstructAs(rc));
        else
        {
            var group = gts.GetBlockGroupWithName(groupName);
            group.GetBlocksOfType(gyros, x =&gt; x.IsSameConstructAs(rc));
        }
    }

    internal bool IsWorking()
    {
        return gyros.FirstOrDefault(x =&gt; x.IsWorking) != null;
    }

    internal void Rotate(Vector3D desiredGlobalFwdNormalized, Vector3D desiredGlobalUpDenormalized, Vector3D w)
    {
        double gp;
        double gy;
        double gr;
        //Rotate Toward forward
        if (rc.WorldMatrix.Forward.Dot(desiredGlobalFwdNormalized) &lt; 0.999999)
        {
            var waxis = Vector3D.Cross(rc.WorldMatrix.Forward, desiredGlobalFwdNormalized);
            Vector3D axis = Vector3D.TransformNormal(waxis, MatrixD.Transpose(rc.WorldMatrix));
            gp = (float)MathHelper.Clamp(pitchPID.Control(-axis.X), -maxAngular, maxAngular);
            gy = (float)MathHelper.Clamp(yawPID.Control(-axis.Y), -maxAngular, maxAngular);
        }
        else
        {
            gp = 0.0;
            gy = 0.0;
        }
        //Roll to up
        {
            var desiredUp = Vector3D.Normalize(desiredGlobalUpDenormalized);

            var waxis = Vector3D.Cross(rc.WorldMatrix.Up, desiredUp);
            Vector3D axis = Vector3D.TransformNormal(waxis, MatrixD.Transpose(rc.WorldMatrix));
            gr = (float)MathHelper.Clamp(rollPID.Control(-axis.Z), -maxAngular, maxAngular);
        }
        const double sigma = 0.00009;
        if (Math.Abs(gp) &lt; sigma) gp = 0;
        if (Math.Abs(gy) &lt; sigma) gy = 0;
        if (Math.Abs(gr) &lt; sigma * 100) gr = 0;
        w = Vector3D.TransformNormal(w, MatrixD.Transpose(rc.WorldMatrix));
        ApplyGyroOverride(gp + w.X, gy + w.Y, gr + w.Z, gyros, rc.WorldMatrix);
    }

    internal void Rotate(Vector3D desiredGlobalFwdNormalized, Vector3D desiredGlobalUpDenormalized)
    {
        double gp;
        double gy;
        double gr;
        //Rotate Toward forward
        if (rc.WorldMatrix.Forward.Dot(desiredGlobalFwdNormalized) &lt; 0.9999)
        {
            var waxis = Vector3D.Cross(rc.WorldMatrix.Forward, desiredGlobalFwdNormalized);
            Vector3D axis = Vector3D.TransformNormal(waxis, MatrixD.Transpose(rc.WorldMatrix));
            gp = (float)MathHelper.Clamp(pitchPID.Control(-axis.X), -maxAngular, maxAngular);
            gy = (float)MathHelper.Clamp(yawPID.Control(-axis.Y), -maxAngular, maxAngular);
        }
        else
        {
            gp = 0.0;
            gy = 0.0;
        }
        //Roll to up
        {
            var desiredUp = Vector3D.Normalize(desiredGlobalUpDenormalized);

            var waxis = Vector3D.Cross(rc.WorldMatrix.Up, desiredUp);
            Vector3D axis = Vector3D.TransformNormal(waxis, MatrixD.Transpose(rc.WorldMatrix));
            gr = (float)MathHelper.Clamp(rollPID.Control(-axis.Z), -maxAngular, maxAngular);
        }
        const double sigma = 0.0009;
        if (Math.Abs(gp) &lt; sigma) gp = 0;
        if (Math.Abs(gy) &lt; sigma) gy = 0;
        if (Math.Abs(gr) &lt; sigma*100) gr = 0;
        ApplyGyroOverride(gp, gy, gr, gyros, rc.WorldMatrix);
    }

    public void Rotate(double yaw, double pitch, double roll)
    {
        ApplyGyroOverride(pitch, yaw, roll, gyros, rc.WorldMatrix);
    }

    /*
            Whip's ApplyGyroOverride - Last modified: 2020/08/27
            Takes pitch, yaw, and roll speeds relative to the gyro's backwards
            ass rotation axes.
            */
    static private void ApplyGyroOverride(double pitchSpeed, double yawSpeed, double rollSpeed, List&lt;IMyGyro&gt; gyroList, MatrixD worldMatrix)
    {
        var rotationVec = new Vector3D(pitchSpeed, yawSpeed, rollSpeed);
        var relativeRotationVec = Vector3D.TransformNormal(rotationVec, worldMatrix);

        foreach (var thisGyro in gyroList)
        {
            var transformedRotationVec = Vector3D.TransformNormal(relativeRotationVec, Matrix.Transpose(thisGyro.WorldMatrix));

            thisGyro.Pitch = (float)transformedRotationVec.X;
            thisGyro.Yaw = (float)transformedRotationVec.Y;
            thisGyro.Roll = (float)transformedRotationVec.Z;
            thisGyro.GyroOverride = true;
        }
    }
}

public static readonly string BROADCAST_TAG = "IGCDATALINK";
public static readonly string UNICAST_TAG = "UNICAST_TAG";
public static readonly string PAIR_REQUEST = "PAIR";

public static readonly string FIRE_MSG = "FIREMSG";
public static readonly string READY_MSG = "RDY";

public struct InterceptComputer
{
    public Vector3D ApproachDir;
    private Vector3D slipDir;
    public Vector3D SlipDir { get { return slipDir; } }

    private Vector3D relVel;
    readonly double slipMag;
    private readonly double distance;
    public InterceptComputer(Vector3D relPos, Vector3D relVel)
    {
        this.relVel = relVel;
        this.ApproachDir = Vector3D.Normalize(relPos);
        var approachTerm = relPos * relVel.Dot(relPos) / relPos.Dot(relPos);

        slipDir = relVel - approachTerm;
        distance = relPos.Normalize();
        if (!slipDir.IsZero())
        {
            slipMag = slipDir.Normalize();
        }
        else slipMag = 0.0;
    }

    public Vector3D Intercept(double maxVel2)
    {
        var desiredApproachMag = Math.Sqrt(maxVel2 - slipMag * slipMag);

        var travelDir = slipDir * slipMag + ApproachDir * desiredApproachMag;
        //travelMag =
        travelDir.Normalize();
        return travelDir;
    }

    public Vector3D ComputeSlipAccel(double n, double accelN, Vector3D gravity, Vector3D targetAccel = new Vector3D())
    {
        var rangeVector = ApproachDir * distance;

        var rangeVectorNormal = ApproachDir;

        //HACK: Convince yourself that 1 is correct at the end.
        Vector3D rotationVector = Vector3D.Cross(ApproachDir * distance, relVel) / Math.Max((ApproachDir * distance).LengthSquared(), 1);
        Vector3D compensateVector = Vector3D.Cross(rotationVector, rangeVectorNormal) * relVel.Length();

        //TODO: Add this in later
        //Vector3D targetANVector = targetInfo.GuessAcceleration - (targetInfo.GuessAcceleration.Dot(ref rangeVectorNormal) * rangeVectorNormal);
        var targetAnV = Vector3D.ProjectOnPlane(ref targetAccel, ref rangeVectorNormal);
        targetAnV *= accelN *0.5;

        var gravSlip = gravity - (rangeVector * gravity.Dot(rangeVector) / rangeVector.LengthSquared());

        return n * compensateVector - gravity + targetAnV;
    }
}

public class InventoryContainer
{
    readonly static List&lt;MyInventoryItem&gt; inventoryItemsTemporaryStorage = new List&lt;MyInventoryItem&gt;();
    readonly static List&lt;MyItemType&gt; typesTemporaryStorage = new List&lt;MyItemType&gt;();
    readonly IMyEntity entity;
    readonly IMyTerminalBlock tb;
    readonly string INVQUOTA = "BMCInv";
    readonly string SPECIAL = "[special]";
    readonly public Dictionary&lt;MyItemType, MyFixedPoint&gt; needs = new Dictionary&lt;MyItemType, MyFixedPoint&gt;();

    public InventoryContainer(IMyEntity entity)
    {
        tb = (IMyTerminalBlock)entity;
        this.entity = entity;
        if (tb.CustomName.Contains(SPECIAL))
        {
            var ini = new MyIni();
            if (ini.TryParse(tb.CustomData, INVQUOTA))
            {
                List&lt;MyItemType&gt; types = new List&lt;MyItemType&gt;();
                entity.GetInventory().GetAcceptedItems(types);
                foreach (var quotaItem in types)
                {
                    var amt = ini.Get(INVQUOTA, quotaItem.SubtypeId).ToDouble();
                    if (amt &gt; 0)
                    {
                        needs.Add(quotaItem, (MyFixedPoint)amt);
                    }
                }
            }
        }
    }

    public override string ToString()
    {
        return entity.DisplayName;
    }

    public void GetSupplyAndDemand(Dictionary&lt;string, List&lt;MyTuple&lt;IMyInventory, MyInventoryItem&gt;&gt;&gt; surplus, Dictionary&lt;MyItemType, List&lt;MyTuple&lt;IMyInventory, MyFixedPoint&gt;&gt;&gt; demand)
    {
        ConsolidateContainer();
        string allowedType = GetAllowedType();
        for (int i = 0; i &lt; entity.InventoryCount; ++i)
        {
            var inventory = entity.GetInventory(i);
            inventoryItemsTemporaryStorage.Clear();
            inventory.GetItems(inventoryItemsTemporaryStorage);
            foreach (var invItem in inventoryItemsTemporaryStorage)
            {
                if (i &gt; 0 || (allowedType != "" &amp;&amp; invItem.Type.TypeId != allowedType))
                {
                    surplus[invItem.Type.TypeId].Add(new MyTuple&lt;IMyInventory, MyInventoryItem&gt;(inventory, invItem));
                }
            }
            //Some blocks have multiple inventories. For now, we only use the needs for the first one.
            if (i == 0)
            {
                if (needs.Count &gt; 0)
                {
                    foreach (var need in needs)
                    {
                        MyFixedPoint vl = need.Value;
                        var item = inventory.FindItem(need.Key);
                        if (item != null)
                        {
                            vl -= ((MyInventoryItem)item).Amount;
                        }
                        if (vl &gt; 0)
                        {
                            List&lt;MyTuple&lt;IMyInventory, MyFixedPoint&gt;&gt; result;
                            if (!demand.TryGetValue(need.Key, out result))
                            {
                                result = new List&lt;MyTuple&lt;IMyInventory, MyFixedPoint&gt;&gt;();
                                demand[need.Key] = result;
                            }
                            result.Add(new MyTuple&lt;IMyInventory, MyFixedPoint&gt;(inventory, vl));
                        }
                    }
                }
            }
        }
    }
    public void FillSurplus(Dictionary&lt;string, List&lt;MyTuple&lt;IMyInventory, MyInventoryItem&gt;&gt;&gt; surplus, Dictionary&lt;MyItemType, List&lt;MyTuple&lt;IMyInventory, MyFixedPoint&gt;&gt;&gt; demand)
    {
        string allowedType = GetAllowedType();
        var inventory = entity.GetInventory();
        if (inventory.IsFull) return;
        //Fill empties from surplus
        foreach (var itemType in surplus.Keys)
        {
            if (allowedType == itemType || allowedType == "")
                foreach (var surplusItem in surplus[itemType])
                {
                    inventory.TransferItemFrom(surplusItem.Item1, surplusItem.Item2);
                }
        }
        //Give excess to needs
        foreach (var d in demand)
        {
            var findItem = inventory.FindItem(d.Key);
            if (findItem != null)
            {
                for(int i = d.Value.Count-1; i&gt;=0; --i)
                {
                    var want = d.Value[i];
                    var srcAmt = ((MyInventoryItem)findItem).Amount;
                    //Assume the transfer will work.
                    if (inventory.TransferItemTo(want.Item1, (MyInventoryItem)findItem, want.Item2))
                    {
                        //E($"Supplying: {srcAmt} {((MyInventoryItem)findItem).Type.SubtypeId}");
                        if (want.Item2 &lt;= srcAmt)
                        {
                            d.Value.RemoveAtFast(i);
                        }
                        else
                        {
                            d.Value[i] = new MyTuple&lt;IMyInventory, MyFixedPoint&gt;(want.Item1, want.Item2-srcAmt);
                        }
                    }
                }
            }
        }
    }

    public IMyInventory Inventory
    {
        get { return entity.GetInventory(); }
    }

    public void RefreshInventory(Dictionary&lt;MyItemType, double&gt; count)
    {
        for (int i = 0; i &lt; entity.InventoryCount; ++i)
        {
            var inventory = entity.GetInventory(i);
            inventoryItemsTemporaryStorage.Clear();
            inventory.GetItems(inventoryItemsTemporaryStorage);
            foreach (var inventoryItem in inventoryItemsTemporaryStorage)
            {
                if (count.ContainsKey(inventoryItem.Type)) count[inventoryItem.Type] += (double)inventoryItem.Amount;
                else count.Add(inventoryItem.Type, (double)inventoryItem.Amount);
            }
        }
    }

    private void ConsolidateContainer()
    {
        for (int i = 0; i &lt; entity.InventoryCount; ++i)
        {
            var inventory = entity.GetInventory(i);
            inventoryItemsTemporaryStorage.Clear();
            inventory.GetItems(inventoryItemsTemporaryStorage);
            typesTemporaryStorage.Clear();
            foreach (var inventoryItem in inventoryItemsTemporaryStorage)
            {
                if (typesTemporaryStorage.Contains(inventoryItem.Type))
                    inventory.TransferItemTo(inventory, inventoryItem);
                else
                    typesTemporaryStorage.Add(inventoryItem.Type);
            }
        }
    }

    private string GetAllowedType()
    {
        string allowedType = "";
        var terminalBlock = tb;
        if (terminalBlock.CustomName.Contains("[ore]")) allowedType = "MyObjectBuilder_Ore";
        else if (terminalBlock.CustomName.Contains("[ingot]")) allowedType = "MyObjectBuilder_Ingot";
        else if (terminalBlock.CustomName.Contains("[component]")) allowedType = "MyObjectBuilder_Component";
        else if (terminalBlock.CustomName.Contains("[ammo]")) allowedType = "MyObjectBuilder_Ammo";
        else if (terminalBlock.CustomName.Contains("[tool]")) allowedType = "MyObjectBuilder_Tool";
        return allowedType;
    }
}

public class InventoryManager : IUpdateBlocks
{
    readonly List&lt;InventoryContainer&gt; cargo = new List&lt;InventoryContainer&gt;();
    readonly Dictionary&lt;MyItemType, double&gt; count = new Dictionary&lt;MyItemType, double&gt;();
    readonly Quota quota;
    readonly AssemblerManager assembler;
    readonly Dictionary&lt;string, List&lt;MyTuple&lt;IMyInventory, MyInventoryItem&gt;&gt;&gt; surplus = new Dictionary&lt;string, List&lt;MyTuple&lt;IMyInventory, MyInventoryItem&gt;&gt;&gt;();
    readonly Dictionary&lt;MyItemType, List&lt;MyTuple&lt;IMyInventory, MyFixedPoint&gt;&gt;&gt; demand = new Dictionary&lt;MyItemType, List&lt;MyTuple&lt;IMyInventory, MyFixedPoint&gt;&gt;&gt;();
    readonly Action&lt;string&gt; Echo;
    const string quotaHdr = "BMCQuota";
    readonly List&lt;MyItemType&gt; allowedTypes = new List&lt;MyItemType&gt;();

    public InventoryManager(IMyGridTerminalSystem gts, IMyProgrammableBlock me, Action&lt;string&gt; echo)
    {
        var data = me.CustomData;
        {
            surplus.Add("MyObjectBuilder_Ore", new List&lt;MyTuple&lt;IMyInventory, MyInventoryItem&gt;&gt;());
            surplus.Add("MyObjectBuilder_Ingot", new List&lt;MyTuple&lt;IMyInventory, MyInventoryItem&gt;&gt;());
            surplus.Add("MyObjectBuilder_Component", new List&lt;MyTuple&lt;IMyInventory, MyInventoryItem&gt;&gt;());
            surplus.Add("MyObjectBuilder_Ammo", new List&lt;MyTuple&lt;IMyInventory, MyInventoryItem&gt;&gt;());
            surplus.Add("MyObjectBuilder_Tool", new List&lt;MyTuple&lt;IMyInventory, MyInventoryItem&gt;&gt;());
        }

        assembler = new AssemblerManager(gts, me, echo);

        var c = new List&lt;IMyCubeBlock&gt;();
        gts.GetBlocksOfType(c, x=&gt;x.HasInventory);
        foreach (var e in c)
        {
            cargo.Add(new InventoryContainer(e));
        }
        {
            allowedTypes = new List&lt;MyItemType&gt;();
            var max = c.FirstOrDefault(x =&gt; x.BlockDefinition.SubtypeId.Contains("Container"));
            max?.GetInventory().GetAcceptedItems(allowedTypes);
            quota = MakeQuota(data, quotaHdr);
            echo($"Quota count: {quota.Keys.Count()}\nChoices: {c.Count}\nUsed: {max?.DisplayNameText}");
        }
        Echo = echo;
    }

    public Quota MakeQuota(string data, string quotaHdr)
    {
        return new Quota(data, quotaHdr, allowedTypes);
    }

    public void UpdateBlocks(IMyGridTerminalSystem gts, IMyProgrammableBlock me)
    {
        assembler.UpdateBlocks(gts, me);
    }

    public Quota Quota
    {
        get { return quota; }
    }

    public Dictionary&lt;MyItemType, double&gt; GetInventory()
    {
        count.Clear();
        foreach (var c in cargo)
        {
            c.RefreshInventory(count);
        }
        return count;
    }

    public void AutoBuild()
    {
        GetInventory();
        //if (count.Count == 0) RunQuota();
        Diff diff = quota.Diff(count);

        diff.Assemble(assembler);
        //Predict finish time.
        //Wake up at finish time.
    }

    public void AutoDissassemble()
    {
        GetInventory();

        //if (count.Count == 0) RunQuota();
        Diff diff = quota.Diff(count);

        diff.Disassemble(assembler);
    }

    public void Refine()
    {
        GetInventory();

        //If there are high priority ores, set the filters for those, and set a wakeup to run Refine again.
        //If there are not high priority ores, set the filters for low and high.
    }

    public void SortContainers()
    {
        foreach (var entry in surplus.Values)
        {
            entry.Clear();
        }
        demand.Clear();
        //In pass #1 we merely look at everything to take a second, action pass.
        foreach (var container in cargo)
        {
            container.GetSupplyAndDemand(surplus, demand);
        }
        foreach (var container in cargo)
        {
            container.FillSurplus(surplus, demand);
        }
    }

    internal IMyInventory MostSpace()
    {
        Echo("IM119");
        foreach (var container in cargo)
        {
            Echo($"IM122 '{container}'");
            if (container != null)
            {
                Echo("IM125");
                double avail = (double)(container.Inventory.MaxVolume - container.Inventory.CurrentVolume);
                if (avail &gt; 7.5010) return container.Inventory;
                Echo($"IM127 {avail}");
            }
        }
        return null;
    }
}

public delegate void IUpdate(double elapsedTime);

public interface IUpdateBlocks
{
    void UpdateBlocks(IMyGridTerminalSystem gts, IMyProgrammableBlock me);
}

public class LifeSupportManager : IUpdateBlocks
{
    readonly List&lt;IMyGasGenerator&gt; H2O2gens = new List&lt;IMyGasGenerator&gt;();
    readonly List&lt;IMyOxygenFarm&gt; oxyFarms = new List&lt;IMyOxygenFarm&gt;();
    readonly List&lt;IMyGasTank&gt; oxyTanks = new List&lt;IMyGasTank&gt;();
    readonly List&lt;IMyGasTank&gt; hydroTanks = new List&lt;IMyGasTank&gt;();

    //optional: Airlock doors during hydro only upcycle. May not need it?

    //readonly double oxygenFull = 95.0;
    //readonly double oxygenLow = 50.0;

    public LifeSupportManager(ProgramCore pc, IMyGridTerminalSystem gts, IMyProgrammableBlock me)
    {
        UpdateBlocks(gts, me);
        pc.AddCommand("toggleH2",ToggleH2);
        pc.AddCommand("toggleH2stock", ToggleH2Tanks);
    }

    public void ToggleH2()
    {
        bool allOn = true;
        foreach (var h2 in H2O2gens)
        {
            allOn &amp;= h2.Enabled;
        }

        foreach (var h2 in H2O2gens)
        {
            h2.Enabled = !allOn;
        }
    }

    public void ToggleBatteries()
    {
        bool allOn = true;
    }

    public void ToggleH2Tanks()
    {
        bool allOn = true;
        foreach (var h2 in hydroTanks)
        {
            allOn &amp;= h2.Stockpile;
        }

        foreach (var h2 in hydroTanks)
        {
            h2.Stockpile = !allOn;
        }
    }

    public string ToggleH2Status()
    {
        int on = 0;
        int off = 0;
        foreach (var h2 in H2O2gens)
        {
            if (h2.Enabled) ++on;
            else ++off;
        }
        string offStr = $"; {off} off";
        return $"Toggle H2O2 to {(off==0?"off":"on")} ({on} on{(off &gt; 0 ? offStr : string.Empty)})";
    }

    public string ToggleH2Stockpile()
    {
        int on = 0;
        int off = 0;
        foreach (var h2 in hydroTanks)
        {
            if (h2.Stockpile) ++on;
            else ++off;
        }
        string offStr = $"; {off} off";
        return $"Toggle H2 Stockpile to {(off == 0 ? "off" : "on")} ({on} on{(off &gt; 0 ? offStr : string.Empty)})";
    }

    public void UpdateBlocks(IMyGridTerminalSystem gts, IMyProgrammableBlock me)
    {
        gts.GetBlocksOfType(oxyTanks, x =&gt; x.IsSameConstructAs(me) &amp;&amp; !IsHydrogenTank(x));
        gts.GetBlocksOfType(hydroTanks, x =&gt; x.IsSameConstructAs(me) &amp;&amp; IsHydrogenTank(x));
        gts.GetBlocksOfType(oxyFarms, x =&gt; x.IsSameConstructAs(me));
        gts.GetBlocksOfType(H2O2gens, x =&gt; x.IsSameConstructAs(me));
        foreach (var gen in H2O2gens)
        {
            gen.AutoRefill = true;
            gen.Enabled = false;
        }
    }

    bool IsHydrogenTank(IMyGasTank block)
    {
        if (block.BlockDefinition.TypeId != oxygenTankId.TypeId)
            return false;

        var resourceSink = block.Components.Get&lt;MyResourceSinkComponent&gt;();
        return resourceSink != null &amp;&amp; resourceSink.AcceptedResources.Contains(hydrogenGasId);
    }

    public void DoBoost()
    {
        bool boostOxy = false;
        bool boostHydro = true;
        GenerateGas(boostHydro, boostOxy);
        if (!boostOxy)
        {
            //Set time for 30 secs. You are hosing airlocks during this time.
        }
        else
        {
            //If both... set timer for first of either to be done.
        }
    }

    public void GenerateGas(bool hydroOn, bool oxyOn)
    {
        foreach (var farm in oxyFarms)
        {
            //It's OK to have the farms going if the ice is off.
            farm.Enabled = oxyOn | !hydroOn;
        }
        foreach (var tank in oxyTanks)
        {
            tank.Enabled = oxyOn;
        }
        foreach (var tank in hydroTanks)
        {
            tank.Enabled = hydroOn;
        }
        foreach (var gen in H2O2gens)
        {
            gen.Enabled = hydroOn | oxyOn;
        }
    }
}

public class LifeSupportUIText
{
    public LifeSupportUIText(LifeSupportManager lsm, DisplayUI dui)
    {
        var lsMenu = new Menu(dui, "Life Support &amp; Power");
        dui.Add(lsMenu);
        lsMenu.Add(dui.Back);
        lsMenu.Add(new StatusMenuItem(() =&gt; lsm.ToggleH2Status(), () =&gt; lsm.ToggleH2()));
        lsMenu.Add(new StatusMenuItem(() =&gt; lsm.ToggleH2Stockpile(), () =&gt; lsm.ToggleH2Tanks()));
    }
}

public class NavigationUIText
{
    public NavigationUIText(BasicNavigation rtu, DisplayUI dui)
    {
        var ccMenu = new Menu(dui, "Navigation");
        dui.Add(ccMenu);
        ccMenu.Add(dui.Back);

        ccMenu.Add(new MenuItem("Stop", () =&gt; { rtu.Stop(); }));
        ccMenu.Add(new ToggleNumberMenuItem&lt;double&gt;("Ahead", new double[] { 0, 25, 50, 75, 99 }, () =&gt; rtu.TargetSpeed, (x) =&gt; { rtu.TargetSpeed = x; }));
        ccMenu.Add(new MenuItem("Altitude +500", () =&gt; { rtu.Add500(); dui.Message = $"Alt: {rtu.TargetElevation:F0}"; }));
        ccMenu.Add(new MenuItem("Altitude -500", () =&gt; { rtu.Drop500(); dui.Message = $"Alt: {rtu.TargetElevation:F0}"; }));
        ccMenu.Add(new MenuItem("Dock Lase", () =&gt; { if (rtu.Dock()) dui.Message = $"On route to target."; }));
        ccMenu.Add(new MenuItem("Align to Gravity", rtu.Align));

        //var ascent = new Menu(dui, "Ascend to Orbit");
        //ccMenu.Add(ascent);
        //ascent.Add(dui.Back);
        //ascent.Add(new MenuItem("On", () =&gt;
        //{
        //    IMyProgrammableBlock pb = (IMyProgrammableBlock)GridTerminalSystem.GetBlockWithName("Ascent");
        //    pb.TryRun("on");
        //}));
        //ascent.Add(new MenuItem("Off", () =&gt;
        //{
        //    IMyProgrammableBlock pb = (IMyProgrammableBlock)GridTerminalSystem.GetBlockWithName("Ascent");
        //    pb.TryRun("off");
        //}));
    }
}


/// &lt;summary&gt;
        /// Discrete time PID controller class.
        /// (Whiplash141 - 11/22/2018)
        /// &lt;/summary&gt;
public class PID
{
    readonly double _kP = 0;
    readonly double _kI = 0;
    readonly double _kD = 0;

    double _timeStep = 0;
    public double InverseTimeStep { get; protected set; }
    double _errorSum = 0;
    double _lastError = 0;
    bool _firstRun = true;

    public double Value { get; private set; }

    public PID(double kP, double kI, double kD, double timeStep)
    {
        _kP = kP;
        _kI = kI;
        _kD = kD;
        _timeStep = timeStep;
        InverseTimeStep = 1 / _timeStep;
    }

    protected virtual double GetIntegral(double currentError, double errorSum, double timeStep)
    {
        return errorSum + currentError * timeStep;
    }

    public double Control(double error)
    {
        //Compute derivative term
        var errorDerivative = (error - _lastError) * InverseTimeStep;

        if (_firstRun)
        {
            errorDerivative = 0;
            _firstRun = false;
        }

        //Get error sum
        _errorSum = GetIntegral(error, _errorSum, _timeStep);

        //Store this error as last error
        _lastError = error;

        //Construct output
        this.Value = _kP * error + _kI * _errorSum + _kD * errorDerivative;
        return this.Value;
    }

    public double Control(double error, double timeStep)
    {
        if (timeStep != _timeStep)
        {
            _timeStep = timeStep;
            InverseTimeStep = 1 / _timeStep;
        }
        return Control(error);
    }

    public void Reset()
    {
        _errorSum = 0;
        _lastError = 0;
        _firstRun = true;
    }
}

public interface IProgramCore
{
    void AddUpdate10(IUpdate update10);
    void AddUpdate6(IUpdate update6);
    bool RemoveUpdate6(IUpdate update);
    void AddUpdate1(IUpdate update1);
    void AddUpdate100(IUpdate update100);
    void Add(IUpdateBlocks update);
}

public class ProgramCore : IProgramCore
{
    public delegate void Callback(MyIGCMessage msg);
    readonly List&lt;MyTuple&lt;IMyBroadcastListener, Callback&gt;&gt; broadcastListeners;
    readonly List&lt;IUpdate&gt; updates1;
    readonly List&lt;IUpdate&gt; updates6;
    readonly List&lt;IUpdate&gt; updates10;
    readonly List&lt;IUpdate&gt; updates100;
    readonly List&lt;IUpdateBlocks&gt; updateBlocks = new List&lt;IUpdateBlocks&gt;();
    readonly IMyGridProgramRuntimeInfo runtime;
    readonly Dictionary&lt;string, Action&gt; commands = new Dictionary&lt;string, Action&gt;();
    readonly Dictionary&lt;string, Action&lt;MyCommandLine.ItemCollection&gt;&gt; argCommands= new Dictionary&lt;string, Action&lt;MyCommandLine.ItemCollection&gt;&gt;();
    int frame = 0;
    int frame100 = 0;
    private Callback unicastCallback;
    private readonly IMyGridTerminalSystem gts;
    readonly IMyIntergridCommunicationSystem IGC;
    private readonly IMyProgrammableBlock me;
    //readonly Action&lt;string&gt; Echo;

    /// &lt;summary&gt;
            /// This runs like a clock since the PB has been running.
            /// &lt;/summary&gt;
    public double ElapsedTime { get; private set; }
    public bool On
    {
        get
        {
            return (runtime.UpdateFrequency &amp; (UpdateFrequency.Update1 | UpdateFrequency.Update10 | UpdateFrequency.Update100)) &gt; 0;
        }
        set
        {
            if (value == true)
            {
                runtime.UpdateFrequency = ((updates6.Count &gt; 0 || updates1.Count &gt; 0) ? UpdateFrequency.Update1 : 0) |
                    ((updates10.Count &gt; 0) ? UpdateFrequency.Update10 : 0) |
                    ((updates100.Count &gt; 0)  || (updateBlocks.Count &gt; 0) ? UpdateFrequency.Update100 : 0);
            }
            else
            {
                runtime.UpdateFrequency = UpdateFrequency.None;
            }
        }
    }

    public ProgramCore(IMyGridProgramRuntimeInfo runtime, IMyIntergridCommunicationSystem IGC, IMyGridTerminalSystem gts = null, IMyProgrammableBlock me = null)
    {
        //this.Echo = Echo;
        this.IGC = IGC;

        updates1 = new List&lt;IUpdate&gt;();
        updates6 = new List&lt;IUpdate&gt;();
        updates10 = new List&lt;IUpdate&gt;();
        updates100 = new List&lt;IUpdate&gt;();

        this.runtime = runtime;

        broadcastListeners = new List&lt;MyTuple&lt;IMyBroadcastListener, Callback&gt;&gt;();
        IGC.UnicastListener.SetMessageCallback(UNICAST_TAG);
        unicastCallback = null;
        this.gts = gts;
        this.me = me;
    }

    internal void Save()
    {
    }

    internal void Main(string argument, UpdateType updateSource)
    {
        ElapsedTime += (double)runtime.TimeSinceLastRun.TotalSeconds;
        if ((updateSource &amp; UpdateType.IGC) &gt; 0)
        {
            foreach (var bl in broadcastListeners)
            {
                while (bl.Item1.HasPendingMessage)
                {
                    MyIGCMessage msg = bl.Item1.AcceptMessage();
                    bl.Item2(msg);
                }
            }
            while (unicastCallback != null &amp;&amp; IGC.UnicastListener.HasPendingMessage)
            {
                MyIGCMessage msg = IGC.UnicastListener.AcceptMessage();
                unicastCallback(msg);
            }
        }
        if ((updateSource &amp; UpdateType.Update1) &gt; 0)
        {
            frame++;
            if (frame % 6 == 0)
            {
                var listSize = updates6.Count;
                for(int i = 0; i &lt; listSize; ++i)
                {
                    updates6[i](ElapsedTime);
                }
            }
            {
                var listSize = updates1.Count;
                for (int i = listSize-1; i&gt;=0; --i)
                {
                    updates1[i](ElapsedTime);
                }
            }
        }
        if ((updateSource &amp; UpdateType.Update10) &gt; 0)
        {
            var listSize = updates10.Count;
            for (int i = 0; i &lt; listSize; ++i)
            {
                updates10[i](ElapsedTime);
            }
        }
        if ((updateSource &amp; UpdateType.Update100) &gt; 0)
        {
            var listSize = updates100.Count;
            for (int i = 0; i &lt; listSize; ++i)
            {
                updates100[i](ElapsedTime);
            }
            frame100++;
            if (frame100 % 3 == 0)
            {
                foreach (var u in updateBlocks)
                {
                    u.UpdateBlocks(gts, me);
                }
            }
        }
        if ((updateSource &amp; (UpdateType.Terminal | UpdateType.Trigger| UpdateType.Script)) &gt; 0)
        {
            RunTextCommand(argument);
        }
    }

    internal void RunTextCommand(string argument)
    {
        MyCommandLine commandLine = new MyCommandLine();
        if (commandLine.TryParse(argument))
        {
            if (commandLine.ArgumentCount == 1)
            {
                Action v;
                if (commands.TryGetValue(argument.ToLower(), out v)) v();
            }
            else
            {
                Action&lt;MyCommandLine.ItemCollection&gt; v;
                if (argCommands.TryGetValue(commandLine.Argument(0).ToLower(), out v)) v(commandLine.Items);
            }
        }
    }
    public bool RemoveUpdate6(IUpdate update)
    {
        if (update == null) throw new ArgumentNullException("update");
        var result = updates6.Remove(update);
        if (updates1.Count + updates6.Count == 0) runtime.UpdateFrequency &amp;= ~UpdateFrequency.Update1;
        return result;
    }
    internal bool RemoveUpdate1(IUpdate update)
    {
        if (update == null) throw new ArgumentNullException("update");
        var result = updates1.Remove(update);
        if (updates1.Count + updates6.Count == 0) runtime.UpdateFrequency &amp;= ~UpdateFrequency.Update1;
        return result;
    }

    public void AddUpdate1(IUpdate update)
    {
        if (update == null) throw new ArgumentNullException("update");
        updates1.Add(update);
        runtime.UpdateFrequency |= UpdateFrequency.Update1;
    }
    public void AddUpdate6(IUpdate update)
    {
        if (update == null) throw new ArgumentNullException("update");
        updates6.Add(update);
        runtime.UpdateFrequency |= UpdateFrequency.Update1;
    }
    public void AddUpdate10(IUpdate update)
    {
        if (update == null) throw new ArgumentNullException("update");
        updates10.Add(update);
        runtime.UpdateFrequency |= UpdateFrequency.Update10;
    }

    public void AddUpdate100(IUpdate update)
    {
        if (update == null) throw new ArgumentNullException("update");
        updates100.Add(update);
        runtime.UpdateFrequency |= UpdateFrequency.Update100;
    }

    public void Add(IUpdateBlocks update)
    {
        if (update == null) throw new ArgumentNullException("update");
        updateBlocks.Add(update);
        runtime.UpdateFrequency |= UpdateFrequency.Update100;
    }

    internal void Add(string BROADCAST_TAG, Callback callback)
    {
        var listener = IGC.RegisterBroadcastListener(BROADCAST_TAG);
        listener.SetMessageCallback(BROADCAST_TAG);
        broadcastListeners.Add(new MyTuple&lt;IMyBroadcastListener, Callback&gt;(listener, callback));
    }

    internal void Add(Callback callback)
    {
        unicastCallback = callback;
    }

    internal void AddCommand(string v, Action p)
    {
        commands.Add(v.ToLower(), p);
    }

    internal void AddCommand(string v, Action&lt;MyCommandLine.ItemCollection&gt; p)
    {
        argCommands.Add(v.ToLower(), p);
    }
}

public class Propulsion
{
    readonly double propNavConstant = 3.0;
    readonly double propNavAccelConstant = 3.0;

    readonly PID thrustPID;
    double mass = 100000.0;
    double invMass = 0;
    double neededThrustMag;
    readonly List&lt;IVirtualThruster&gt; thrusters = new List&lt;IVirtualThruster&gt;(6);
    readonly IMyRemoteControl rc;
    readonly DisplayService ds;

    public Propulsion(IMyRemoteControl rc, IList&lt;IVirtualThruster&gt; thrusters, double myMaxSpeed, PID pid, double propNavConstant = 5.0, double propNavAccelConstant = 0.5, DisplayService ds = null)
    {
        this.ds = ds;
        this.propNavConstant = propNavConstant;
        this.propNavAccelConstant = propNavAccelConstant;
        this.rc = rc;
        this.thrusters.AddRange(thrusters);
        this.MaxSpeed = myMaxSpeed;
        thrustPID = pid;
        UpdateMass();
    }

    public Vector3D NeededThrustDir { get; private set; }
    public double MaxSpeed { get; internal set; }

    public void Stop()
    {
        rc.DampenersOverride = true;
        foreach (var thruster in thrusters)
        {
            thruster.ThrustOverridePercentage = 0;
            thruster.Enabled = true;
        }
    }

    public void On()
    {
        foreach (var thruster in thrusters)
        {
            thruster.Enabled = true;
        }
        rc.DampenersOverride = false;
    }

    public void Off()
    {
        rc.DampenersOverride = true;
        foreach (var thruster in thrusters)
        {
            thruster.ThrustOverridePercentage = 0;
            thruster.Enabled = false;
        }
    }

    public double MaxThrust(Vector3D directionVector)
    {
        return thrusters.Sum(x =&gt; Math.Max(0.0, x.MaxEffectiveThrust(directionVector)));
    }

    public double MaxAccel(Vector3D directionVector)
    {
        return thrusters.Sum(x =&gt; Math.Max(0.0, x.MaxEffectiveThrust(directionVector))) * invMass;
    }

    /// &lt;summary&gt;
            /// Pass through a stationary point. Possibly a waypoint.
            /// &lt;/summary&gt;
            /// &lt;param name="desiredWorldPosition"&gt;&lt;/param&gt;
            /// &lt;param name="worldGravity"&gt;&lt;/param&gt;
    public void Impact(Vector3D desiredWorldPosition, Vector3D worldGravity)
    {
        var lv = rc.GetShipVelocities().LinearVelocity;
        var travelDir = desiredWorldPosition - rc.GetPosition();
        var distance = travelDir.Normalize();

        Vector3D velError = travelDir * MaxSpeed - lv;
        Vector3D accelError = velError * thrustPID.InverseTimeStep;

        ActionThrust(mass * (accelError - worldGravity));
    }

    /// &lt;summary&gt;
            /// Intercept something moving at target velocity at WorldPosition. No worries about velocity when you pass it.
            /// &lt;/summary&gt;
            /// &lt;param name="desiredWorldPosition"&gt;&lt;/param&gt;
            /// &lt;param name="targetVelocity"&gt;&lt;/param&gt;
            /// &lt;param name="worldGravity"&gt;&lt;/param&gt;
    public void Impact(Vector3D desiredWorldPosition, Vector3D targetVelocity, Vector3D worldGravity, Vector3D targetAccel = new Vector3D())
    {
        var lv = rc.GetShipVelocities().LinearVelocity;
        InterceptComputer intercept = new InterceptComputer(desiredWorldPosition - rc.GetPosition(), targetVelocity - lv);
        var slipT = mass * intercept.ComputeSlipAccel(propNavConstant, propNavAccelConstant, worldGravity, targetAccel);

        var maxFwdThrust = thrusters[(int)Base6Directions.Direction.Forward].MaxEffectiveThrust();
        maxFwdThrust *= maxFwdThrust;
        var slipL2 = slipT.LengthSquared();
        Vector3D approachThrust;

        //Apply any leftover acceleration to approach thrust (up to maximum velocity)
        if (maxFwdThrust &gt; slipL2)
        {
            approachThrust = Math.Sqrt(maxFwdThrust - slipL2) * intercept.ApproachDir;
        }
        else approachThrust = Vector3D.Zero;

        ActionThrust(slipT + approachThrust);
    }

    /// &lt;summary&gt;
            /// Travel in a certain direction and velocity without worrying about position.
            /// &lt;/summary&gt;
            /// &lt;param name="desiredWorldVelocity"&gt;&lt;/param&gt;
            /// &lt;param name="worldGravity"&gt;&lt;/param&gt;
    public void Thrust(Vector3D desiredWorldVelocity, Vector3D worldGravity)
    {
        var velocityError = desiredWorldVelocity - rc.GetShipVelocities().LinearVelocity;
        Vector3D accelError = velocityError * thrustPID.InverseTimeStep;

        if (velocityError.LengthSquared() &lt; 0.001)
        {
            accelError = Vector3D.Zero;
        }
        ActionThrust(mass * (accelError - worldGravity));
    }

    /// &lt;summary&gt;
            /// Move to a position that is moving, but plan to match velocity exactly as you arrive.
            /// &lt;/summary&gt;
            /// &lt;param name="desiredWorldPosition"&gt;&lt;/param&gt;
            /// &lt;param name="desiredWorldVelocity"&gt;&lt;/param&gt;
            /// &lt;param name="worldGravity"&gt;&lt;/param&gt;
    public void Thrust(Vector3D desiredWorldPosition, Vector3D desiredWorldVelocity, Vector3D worldGravity)
    {
        //ds?.WriteText("V\n",false);
        var velocityError = desiredWorldVelocity - rc.GetShipVelocities().LinearVelocity;
        var positionError = desiredWorldPosition - rc.GetPosition();
        var dist = positionError.IsZero() ? 0.0 : positionError.Normalize();
        if (dist &gt; 0.001 || velocityError.LengthSquared() &gt; 0.001)
        {
            var aF = MaxAccel(positionError) + positionError.Dot(worldGravity);
            var aR = MaxAccel(-positionError) - positionError.Dot(worldGravity);

            var velInDir = velocityError.Dot(positionError);
            double x1;
            if (aF &gt; 0)
            {
                var theoreticalStartPos = velInDir * velInDir;
                theoreticalStartPos /= 2 * aF;
                var term2 = 1 + aR / aF;
                x1 = (dist + theoreticalStartPos) / term2;
            }
            else
            {
                if (aR &gt; 0)
                    x1 = velInDir * velInDir / (2 * aR);
                else x1 = 0.0;
            }

            double timeStep = 1.0 / thrustPID.InverseTimeStep;
            Vector3D posVelError;
            if (Math.Abs(dist) &lt;= Math.Abs(x1))
            {
                //ds?.WriteText("Brake\n");
                posVelError = positionError * velInDir;
            }
            else
            {
                var r = dist - x1;
                double a;
                if (dist &gt;= 0)
                {
                    a = MathHelper.Clamp(2 * (r + velInDir * timeStep) / (timeStep * timeStep), -aR, aF);
                    if (-aR &gt; 0 || aF &lt; 0) throw new Exception($"Bad clamp 1 {aR} {aF}");
                }
                else
                {
                    a = MathHelper.Clamp(2 * (r + velInDir * timeStep) / (timeStep * timeStep), -aF, aR);
                    if (aR &lt; 0 || -aF &gt; 0) throw new Exception($"Bad clamp 2 {aR} {aF}");
                }
                posVelError = (a * timeStep) * positionError;
                //ds?.WriteText($"PVE: {posVelError.Length():F2} TS: {timeStep:F2}\n");
                //ds?.WriteText($"D: {dist:F2} X1:{x1:F2}\n");
                //ds?.WriteText($"AF: {aF:F2} AR:{aR:F2}\n");
                //ds?.WriteText($"VU: {velUp:F2} AA:{a:F2}\n");
            }

            Vector3D finalVelError = posVelError + Vector3D.Reject(velocityError, positionError.IsZero() ? Vector3D.CalculatePerpendicularVector(velocityError) : positionError);
            double thrusterGain;
            if (!finalVelError.IsZero())
            {
                thrusterGain = mass * finalVelError.Normalize() * thrustPID.InverseTimeStep;
                //ds?.WriteText($"TG: {thrusterGain:F2} MASS:{mass:F0}\n");
            }
            else
            {
                thrusterGain = 0.0;
            }
            ActionThrust(finalVelError * thrusterGain - mass * worldGravity);
        }
        else
        {
            Thrust(desiredWorldVelocity, worldGravity);
        }
    }

    public void UpdateMass()
    {
        mass = rc.CalculateShipMass().PhysicalMass;
        invMass = 1.0 / (mass == 0.0 ? 1.0 : mass);
    }

    private void ActionThrust(Vector3D neededThrust)
    {
        neededThrustMag = neededThrust.Normalize();
        if (neededThrustMag &gt; 0.0)
        {
            NeededThrustDir = neededThrust;
            foreach (var thruster in thrusters)
            {
                thruster.Thrust(neededThrust, neededThrustMag);
            }
        }
        else
        {
            foreach (var thruster in thrusters)
            {
                thruster.ThrustOverridePercentage = 0.0f;
            }
        }
    }
}

public class Quota
{
    readonly Dictionary&lt;MyItemType, double&gt; quota = new Dictionary&lt;MyItemType, double&gt;();

    public Quota(string data, string quotaHdr, List&lt;MyItemType&gt; typeNames)
    {
        if (typeNames.Count == 0) { throw new ArgumentException("Unexpected: typeNames is empty.", "typeNames"); }
        // Call the TryParse method on the custom data. This method will
        // return false if the source wasn't compatible with the parser.
        MyIni ini = new MyIni();
        MyIniParseResult result;
        if (!ini.TryParse(data, out result))
            throw new Exception(result.ToString());
        foreach (var t in typeNames)
        {
            if (!t.TypeId.Contains("_Ore") || t.SubtypeId == "Ice") quota.Add(t, ini.Get(quotaHdr, t.SubtypeId).ToDouble(-1));
        }
    }

    public IEnumerable&lt;MyItemType&gt; Keys { get { return quota.Keys.Where(x=&gt;quota[x] &gt; 0); } }

    public double this[MyItemType indx]
    {
        get
        {
            double val;
            if (quota.TryGetValue(indx, out val)) return val;
            return -1;
        }
    }


    internal Diff Diff(Dictionary&lt;MyItemType, double&gt; count)
    {
        List&lt;MyTuple&lt;MyItemType, double&gt;&gt; result = new List&lt;MyTuple&lt;MyItemType, double&gt;&gt;();
        foreach (var q in quota)
        {
            double val;
            count.TryGetValue(q.Key, out val);
            {
                //If you don't have a quota for it, don't worry about it.
                if (q.Value &gt;= 0) result.Add(new MyTuple&lt;MyItemType, double&gt;(q.Key, q.Value-val));
            }
        }
        return new Diff(result);
    }
}

public class RecipeCounter
{
    readonly InventoryManager im;
    readonly List&lt;KeyValuePair&lt;string, Quota&gt;&gt; recipes = new List&lt;KeyValuePair&lt;string, Quota&gt;&gt;();

    public RecipeCounter(IMyGridTerminalSystem gts, IMyProgrammableBlock me, Action&lt;string&gt; echo)
    {
        //Read all the quotas from the CustomData
        im = new InventoryManager(gts, me, echo);
        var data = me.CustomData;
        MyIni ini = new MyIni();
        MyIniParseResult result;
        if (!ini.TryParse(data, out result))
            throw new Exception(result.ToString());
        List&lt;string&gt; sectionHeaders = new List&lt;string&gt;();
        ini.GetSections(sectionHeaders);
        foreach (var r in sectionHeaders)
        {
            if (r.Contains("BMC.Recipe."))
            {
                var item = new KeyValuePair&lt;string, Quota&gt;(r.Replace("BMC.Recipe.", ""), im.MakeQuota(me.CustomData, r));
                recipes.Add(item);
            }
        }
    }

    /// &lt;summary&gt;
            /// Say how many times this recipe could be made from the current information.
            /// &lt;/summary&gt;
            /// &lt;param name="recipe"&gt;&lt;/param&gt;
            /// &lt;returns&gt;&lt;/returns&gt;
    public void CountRecipe(List&lt;KeyValuePair&lt;string, int&gt;&gt; returnRecipes)
    {
        returnRecipes.Clear();
        var inv = im.GetInventory();

        foreach (var missileRecipe in recipes)
        {
            int result = int.MaxValue;
            foreach (var entry in missileRecipe.Value.Keys)
            {
                double value = 0.0;
                if (inv.ContainsKey(entry)) { value = inv[entry]; }
                result = Math.Min(result, (int)(value / missileRecipe.Value[entry]));
            }
            returnRecipes.Add(new KeyValuePair&lt;string, int&gt;(missileRecipe.Key, result));
        }
    }
}

public class RecipeUIText
{
    public RecipeUIText(RecipeCounter reco, DisplayUI dui, DisplayService display)
    {
        dui.Add(new MenuItem("Recipes Available", () =&gt;
        {
            List&lt;KeyValuePair&lt;string, int&gt;&gt; recipes = new List&lt;KeyValuePair&lt;string, int&gt;&gt;();
            reco.CountRecipe(recipes);
            display.WriteText($"Buildable Recipes:\n", false);
            foreach (var recipe in recipes)
            {
                display.WriteText($"{recipe.Key,-25} {recipe.Value,5}\n");
            }
        }));
    }
}

public class SpinTest : IFlightStrategy
{
    enum TestSequence { None, Yaw, Pitch, Roll };
    TestSequence state;
    bool testOn = false;
    readonly IMyRemoteControl rc;
    //readonly ProgramCore pc;
    readonly GyroControl gc;
    readonly DisplayService display;
    Vector3D startAng;
    Vector3D startFwd;
    dir nowFwd;
    double startCross;
    double startTime;
    double angularAccel;
    int tickCount;

    public SpinTest(ProgramCore pc, IMyRemoteControl rc, DisplayService display, GyroControl gc)
    {
        this.gc = gc;
        this.display = display;
        this.rc = rc;
        //this.pc = pc;
        pc.AddCommand("stop", x =&gt; StopTest());
        pc.AddCommand("start", ()=&gt;Start());
    }
    public bool Start()
    {
        if (!testOn)
        {
            display.WriteText("Test starting...\n", false);
            state = TestSequence.None;
        }
        return true;
    }

    public void Stop()
    {
        state = TestSequence.None;
        display.WriteText("Done.\n");
    }

    private void StopTest()
    {
        display.WriteText("Stopping...\n", true);
        gc.Rotate(0, 0, 0);
        gc.Override = false;
        testOn = false;
    }

    public bool Update6(double elapsedTime)
    {
        if (!testOn)
        {
            startAng = rc.GetShipVelocities().AngularVelocity;
            if (startAng.LengthSquared() &lt;= 0.00001)
            {
                startTime = elapsedTime;
                if (state == TestSequence.Roll)
                {
                    return false;
                }
                else
                {
                    gc.Override = true;
                    ++state;
                    SetRotFromArg(state);
                    testOn = true;
                    display.WriteText($"{state,5} ", true);
                    angularAccel = 0.0;
                    tickCount = 0;
                }
            }
            else
            {
                gc.Override = false;
            }
        }
        if (testOn)
        {
            {
                tickCount++;
                if (tickCount == 5) angularAccel = rc.GetShipVelocities().AngularVelocity.Length() / (elapsedTime - startTime);
            }
            //this.startTime += elapsedTime;
            double dot = nowFwd().Dot(startFwd);
            if (startCross - dot &lt; -0.000001)
            {
                //display.WriteText($"α:{angularAccel/Math.PI*180.0:F0}°/s² ω:{30.0 * rc.GetShipVelocities().AngularVelocity.Length() / Math.PI:F2}rpm ", true);
                display.WriteText($"α:{angularAccel / Math.PI * 180.0:F0}°/s² 180° ", true);
                display.WriteText($"in {elapsedTime - this.startTime:N1}s\n", true);
                StopTest();
            }
            else
            {
                startCross = dot;
            }
        }
        return true;
    }

    private Vector3D Fwd() =&gt; rc.WorldMatrix.Forward;
    private Vector3D Up() =&gt; rc.WorldMatrix.Up;
    delegate Vector3D dir();

    private void SetRotFromArg(TestSequence request)
    {
        //startFwd = rc.WorldMatrix.Forward;
        if (request == TestSequence.None) return;
        nowFwd = Fwd;
        if (request == TestSequence.Yaw)
        {
            gc.Rotate(6, 0, 0);
        }

        if (request == TestSequence.Pitch) gc.Rotate(0, 6, 0);
        if (request == TestSequence.Roll)
        {
            gc.Rotate(0, 0, 6);
            nowFwd = Up;
        }
        startFwd = nowFwd();
        startCross = 1.01;
    }
}

public class YawPID : IFlightStrategy
{
    readonly IMyRemoteControl rc;
    //readonly ProgramCore pc;
    readonly GyroControl gc;
    readonly DisplayService display;
    double lastProp;
    double clockStart;
    Vector3D targetDirection;
    bool testOn;
    readonly double oscilate = 60.0;
    double propStep;
    double lastDer;
    double derStep;
    private double bestTime;
    readonly double rotAmt = 1.0;
    const double verySmall = 0.0001;
    int count = 0;
    IUpdate thingToDo;

    public YawPID(IMyRemoteControl rc, DisplayService display, GyroControl gc)
    {
        //this.pc = pc;
        this.rc = rc;
        this.display = display;
        this.gc = gc;
        thingToDo = null;
    }

    public bool Start()
    {
        if (!gc.Override)
        {
            targetDirection = rc.WorldMatrix.Forward.Rotate(rc.WorldMatrix.Up, rotAmt);
            testOn = false;
            thingToDo = RunningProp;
            display.WriteText("Starting.\n", false);
            bestTime = double.MaxValue;
            lastProp = 1.0;
            lastDer = 0.0;
            derStep = 0.2;
            propStep = 0.5;
            gc.yawPID = new PID(lastProp, 0, 0, 0.1);
            return true;
        }
        return false;
    }

    private void RunningProp(double elapsedTime)
    {
        if (!testOn) { clockStart = elapsedTime; testOn = true; }
        if (elapsedTime - clockStart &lt; oscilate)
        {
            if (Good()) TryAgain(elapsedTime);
            else
            {
                gc.Rotate(targetDirection, rc.WorldMatrix.Up);
            }
        }
        else
        {
            NextTest();
        }
    }

    private bool Good()
    {
        return (rc.WorldMatrix.Forward.Dot(targetDirection) &gt; (1.0 - verySmall)) &amp;&amp; rc.GetShipVelocities().AngularVelocity.LengthSquared() &lt; verySmall;
    }

    private void TryAgain(double elapsedTime)
    {
        lastProp += propStep;
        gc.yawPID = new PID(lastProp, 0, 0, 0.1);
        testOn = false;
        targetDirection = rc.WorldMatrix.Forward.Rotate(rc.WorldMatrix.Up, rotAmt);
        display.WriteText($"{elapsedTime - clockStart:F2}\n{lastProp:F1} ");
        //if (++output % 6 == 0) display.WriteText("\n");
    }

    /// &lt;summary&gt;
            /// Found Oscilation, Tune Derivative
            /// &lt;/summary&gt;
    private void NextTest()
    {
        display.WriteText("\nProp found. ");
        gc.Override = false;
        //output = 0;
        lastProp /= 2.0;
        thingToDo = WaitForStop;
        count = 0;
    }

    /// &lt;summary&gt;
            /// Wait to stop in between tests
            /// &lt;/summary&gt;
            /// &lt;param name="elapsedTime"&gt;&lt;/param&gt;
    private void WaitForStop(double elapsedTime)
    {
        if (rc.GetShipVelocities().AngularVelocity.LengthSquared() &lt; verySmall)
        {
            if (count &gt; 4)
            {
                display.WriteText("Stopped.\n");
                thingToDo = RunningDerivative;
                testOn = false;
                targetDirection = rc.WorldMatrix.Forward.Rotate(rc.WorldMatrix.Up, rotAmt);
                gc.yawPID = new PID(lastProp, 0, lastDer, 0.1);
                display.WriteText($"{lastDer:F3} ");
            }
            else count++;
        }
    }

    private void RunningDerivative(double elapsedTime)
    {
        if (!testOn) { clockStart = elapsedTime; testOn = true; }
        if (elapsedTime - clockStart &lt; oscilate)
        {
            if (Good())
            {
                if (CheckForBest(elapsedTime)) Stop(elapsedTime);
                else TryDAgain(elapsedTime);
            }
            else
            {
                gc.Rotate(targetDirection, rc.WorldMatrix.Up);
            }
        }
        else
        {
            TryDAgain(elapsedTime);
        }
    }

    private void TryDAgain(double elapsedTime)
    {
        lastDer += derStep;
        gc.yawPID = new PID(lastProp, 0, lastDer, 0.1);
        testOn = false;
        targetDirection = rc.WorldMatrix.Forward.Rotate(rc.WorldMatrix.Up, rotAmt);
        display.WriteText($"{elapsedTime - clockStart:F4}\n{lastDer:F3} ");
        //if (++output % 6 == 0) display.WriteText("\n");
    }

    private void Stop(double elapsedTime)
    {
        display.WriteText($"{elapsedTime - clockStart:F4}\nDone.\nBest time: {bestTime:F4}\nP:{lastProp:F3} D:{lastDer - derStep:F4}");
        thingToDo = null;
    }

    private bool CheckForBest(double elapsedTime)
    {
        double newTime = elapsedTime - clockStart;
        if (newTime &lt; bestTime) { bestTime = newTime; }
        if (newTime &lt; bestTime * 2) return false;
        return true;
    }

    public void Stop()
    {
        thingToDo = null;
        gc.Override = false;
    }

    public bool Update6(double elapsedTime)
    {
        if (thingToDo != null)
        {
            thingToDo(elapsedTime);
            return true;
        }
        return false;
    }
}

public class AccelTest : ISimpleRender
{
    readonly Propulsion prop;
    readonly DisplayService display;
    readonly IMyRemoteControl rc;
    readonly IMyGridTerminalSystem gts;
    public AccelTest(ProgramCore pc, IMyGridTerminalSystem gts, IMyRemoteControl rc, DisplayService display, Propulsion prop)
    {
        this.display = display;
        this.rc = rc;
        this.prop = prop;
        this.gts = gts;
        pc.AddCommand("accel", Render);
    }

    public void Render()
    {
        var mass = rc.CalculateShipMass();
        double physMass = mass.PhysicalMass;
        double emptyMass = mass.BaseMass;
        double terminalBlockMass = 0.0;
        gts.GetBlocksOfType&lt;IMyTerminalBlock&gt;(null, (x) =&gt; { terminalBlockMass += x.Mass; return false; });
        double nonTermMass = emptyMass - terminalBlockMass;
        display.WriteText($"Totl Mass: {physMass,12:#,#}kg\nInvn Mass: {physMass - emptyMass,12:#,#}kg\nTerm Mass: {terminalBlockMass,12:#,#}kg\nNTer Mass: {emptyMass - terminalBlockMass,12:#,#}kg\n\n", false);

        var foreThrust = prop.MaxThrust(rc.WorldMatrix.Forward) / physMass;
        display.WriteText($"FW: {foreThrust:F2}m/s²\n");
        var backThrust = prop.MaxThrust(rc.WorldMatrix.Backward) / physMass;
        display.WriteText($"BW: {backThrust:F2}m/s²\n");
        display.WriteText($"LT: {prop.MaxThrust(rc.WorldMatrix.Left) / physMass:F2}m/s²\n");
        display.WriteText($"RT: {prop.MaxThrust(rc.WorldMatrix.Right) / physMass:F2}m/s²\n");

        var upThrust = prop.MaxThrust(rc.WorldMatrix.Up) / physMass;
        var downThrust = prop.MaxThrust(rc.WorldMatrix.Down) / physMass;
        var downGrav = rc.GetNaturalGravity().Length();
        display.WriteText($"UP: {upThrust - downGrav:F2}m/s² ({upThrust:F2}m/s² - {downGrav:F2}m/s²)\n");
        display.WriteText($"DN: {downThrust + downGrav:F2}m/s² ({downThrust:F2}m/s² + {downGrav:F2}m/s²)\n\n");

        display.WriteText($"Suicide Burn (up) @ 100m/s: {100 * 100 / (2 * (upThrust - downGrav)):F0}m\n");
        display.WriteText($"Stopping Dist(bw) @ 100m/s: {100 * 100 / (2 * (backThrust)):F0}m\n");
        display.WriteText($"Centrip. Max (fw) @ 100m/s: {100 * 100 / (foreThrust):F0}m\n");
    }
}

public class DamageAssessment
{
    private readonly IMyGridTerminalSystem gts;
    private readonly IMyProgrammableBlock me;

    public DamageAssessment(IMyGridTerminalSystem gts, IMyProgrammableBlock me)
    {
        this.gts = gts;
        //blocks = new List&lt;IMyTerminalBlock&gt;();
        this.me = me;

    }

    public void AssessDamage(List&lt;IMyTerminalBlock&gt; blocks)
    {
        gts.GetBlocksOfType(blocks, x =&gt; !x.IsFunctional &amp;&amp; x.IsSameConstructAs(me));
    }
}

//Inventory; Thanks Vox Serico
public static readonly MyDefinitionId
    hydrogenEngineId = MyDefinitionId.Parse("MyObjectBuilder_HydrogenEngine/"),
    hydrogenGasId = MyDefinitionId.Parse("MyObjectBuilder_GasProperties/Hydrogen"),
    oxygenTankId = MyDefinitionId.Parse("MyObjectBuilder_OxygenTank/");

public static readonly string blueprintDef = "MyObjectBuilder_BlueprintDefinition/";

//Groups
public static readonly string DOCKINGCONNECTOR_GRP = "BMC Drone Connectors";

//Camera and Laser
public const double COS45 = 0.707107;
public const double defaultMaxSpeed = 145.0;
public const double extraDistance = 250.0; //meters
public const double syncRange = 7000.0;

//Time
public const double ONE_TICK = 1 / 60.0;

//Ini Files
public const string missileIniHeader = "BMC.Missile";

public interface IVirtualThruster
{
    bool Enabled { set; }
    float ThrustOverridePercentage { set; }
    float MaxEffectiveThrust();
    float MaxEffectiveThrust(Vector3D directionVector);
    void Thrust(Vector3D neededThrust, double neededThrustMag);
}

public class VirtualThruster : IVirtualThruster
{
    readonly List&lt;IMyThrust&gt; thrusters = new List&lt;IMyThrust&gt;();

    public bool Enabled { set { foreach (var thr in thrusters) { thr.Enabled = value; } } }
    public float MaxEffectiveThrust()
    {
        float sum = 0.0f;
        foreach (var thr in thrusters)
        {
            if (thr.IsWorking)
            {
                sum += thr.MaxEffectiveThrust;
            }
        }
        return sum;
    }
    public float ThrustOverridePercentage
    {
        set
        {
            foreach (var thruster in thrusters)
            {
                thruster.ThrustOverridePercentage = value;
            }
        }
    }

    public void Merge(IMyThrust realThruster)
    {
        thrusters.Add(realThruster);
    }

    public float MaxEffectiveThrust(Vector3D directionVector)
    {
        if (thrusters.Count &gt; 0)
        {
            return (float)(thrusters[0].WorldMatrix.Backward.Dot(directionVector) * MaxEffectiveThrust());
        }
        return 0.0f;
    }

    public void Thrust(Vector3D neededThrust, double neededThrustMag)
    {
        int thrustC = thrusters.Count;
        if (thrustC &gt; 0)
        {
            float itc = 1.0f / thrustC;
            var thrustDirection = thrusters[0].WorldMatrix.Backward;
            float scale = (float)thrustDirection.Dot(neededThrust);
            float amt = (float)(scale * neededThrustMag);
            float thrustFrac = (amt &lt; 0.1) ? 0.0f : MathHelper.Clamp(amt / MaxEffectiveThrust(), 0.0f, 1.0f);
            foreach (var thruster in thrusters)
            {
                thruster.ThrustOverridePercentage = thrustFrac;// Math.Min(1.0f, Math.Max(0.0f, (amt / thruster.MaxEffectiveThrust) * itc));
            }
        }
    }

    public static IVirtualThruster[] MakeThrusters(IMyRemoteControl rc, IMyGridTerminalSystem gts)
    {
        List&lt;IMyThrust&gt; realThrusters = new List&lt;IMyThrust&gt;();
        IVirtualThruster[] thrusters = new IVirtualThruster[6];
        gts.GetBlocksOfType(realThrusters, x =&gt; x.IsSameConstructAs(rc));
        for (int i = 0; i &lt; 6; ++i)
        {
            thrusters[i] = new VirtualThruster();
        }
        foreach (var realThruster in realThrusters)
        {
            int dir = (int)rc.Orientation.TransformDirectionInverse(Base6Directions.GetOppositeDirection(realThruster.Orientation.Forward));
            ((VirtualThruster)thrusters[dir]).Merge(realThruster);
        }
        return thrusters;
    }
}</Program>
                      <Storage />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorHalfSlopeInverted</SubtypeName>
                      <Min x="-2" y="3" z="17" />
                      <BlockOrientation Forward="Up" Up="Left" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="2" y="3" z="16" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="-2" y="3" z="15" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="-2" y="3" z="11" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="2" y="3" z="11" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="-2" y="3" z="12" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="2" y="3" z="12" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="-2" y="3" z="13" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="2" y="3" z="13" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
                      <SubtypeName>SmallBlockBatteryBlock</SubtypeName>
                      <EntityId>124800603376686112</EntityId>
                      <Name>124800603376686112</Name>
                      <Min x="-3" y="3" z="8" />
                      <BlockOrientation Forward="Backward" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <CustomName>Cle Battery Po 1</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>4</NumberInGrid>
                      <Enabled>true</Enabled>
                      <CurrentStoredPower>0</CurrentStoredPower>
                      <ProducerEnabled>true</ProducerEnabled>
                      <MaxStoredPower>0</MaxStoredPower>
                      <SemiautoEnabled>false</SemiautoEnabled>
                      <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
                      <ChargeMode>0</ChargeMode>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="-2" y="3" z="16" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="2" y="3" z="7" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="-2" y="3" z="7" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="2" y="3" z="6" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="-2" y="3" z="6" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="2" y="3" z="5" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="-2" y="3" z="5" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="2" y="3" z="4" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="-2" y="3" z="4" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="2" y="3" z="3" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="-2" y="3" z="3" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="2" y="3" z="2" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="-2" y="3" z="2" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope</SubtypeName>
                      <Min x="-2" y="3" z="1" />
                      <BlockOrientation Forward="Down" Up="Forward" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope</SubtypeName>
                      <Min x="2" y="3" z="1" />
                      <BlockOrientation Forward="Down" Up="Forward" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="1" y="3" z="3" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="-2" y="4" z="11" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="-1" y="4" z="11" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="0" y="4" z="11" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="1" y="4" z="11" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="2" y="4" z="11" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="-1" y="3" z="17" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="0" y="3" z="17" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="1" y="3" z="17" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
                      <Min x="2" y="4" z="7" />
                      <BlockOrientation Forward="Left" Up="Up" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
                      <Min x="-2" y="4" z="7" />
                      <BlockOrientation Forward="Right" Up="Up" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="1" y="4" z="7" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="0" y="4" z="7" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="-1" y="4" z="7" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Gyro">
                      <SubtypeName>SmallBlockGyro</SubtypeName>
                      <EntityId>143852048037260861</EntityId>
                      <Name>143852048037260861</Name>
                      <Min x="0" y="4" z="10" />
                      <BlockOrientation Forward="Backward" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <CustomName>Cle Gyroscope 5</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>4</NumberInGrid>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Gyro">
                      <SubtypeName>SmallBlockGyro</SubtypeName>
                      <EntityId>130663834771308798</EntityId>
                      <Name>130663834771308798</Name>
                      <Min x="0" y="0" z="7" />
                      <BlockOrientation Forward="Forward" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <CustomName>Cle Gyroscope 1</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>5</NumberInGrid>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="0" y="-1" z="7" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CameraBlock">
                      <SubtypeName>SmallCameraBlock</SubtypeName>
                      <EntityId>125557213618267360</EntityId>
                      <Name>125557213618267360</Name>
                      <Min x="0" y="-2" z="7" />
                      <BlockOrientation Forward="Down" Up="Forward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <CustomName>Cle Camera</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>1</NumberInGrid>
                      <Enabled>true</Enabled>
                      <IsActive>false</IsActive>
                      <Fov>1.04719758</Fov>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MyProgrammableBlock">
                      <SubtypeName>SmallProgrammableBlockReskin</SubtypeName>
                      <EntityId>91981550692720764</EntityId>
                      <Name>91981550692720764</Name>
                      <Min x="1" y="3" z="7" />
                      <BlockOrientation Forward="Down" Up="Forward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyMultiTextPanelComponent</TypeId>
                            <Component xsi:type="MyObjectBuilder_MultiTextPanelComponent">
                              <TextPanelsContents>
                                <MySerializedTextPanelData>
                                  <ChangeInterval>0</ChangeInterval>
                                  <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
                                  <FontSize>1</FontSize>
                                  <ShowText>NONE</ShowText>
                                  <FontColor>
                                    <PackedValue>4294967295</PackedValue>
                                    <X>255</X>
                                    <Y>255</Y>
                                    <Z>255</Z>
                                    <R>255</R>
                                    <G>255</G>
                                    <B>255</B>
                                    <A>255</A>
                                  </FontColor>
                                  <BackgroundColor>
                                    <PackedValue>4278190080</PackedValue>
                                    <X>0</X>
                                    <Y>0</Y>
                                    <Z>0</Z>
                                    <R>0</R>
                                    <G>0</G>
                                    <B>0</B>
                                    <A>255</A>
                                  </BackgroundColor>
                                  <CurrentShownTexture>0</CurrentShownTexture>
                                  <SelectedScript />
                                  <TextPadding>2</TextPadding>
                                  <ScriptBackgroundColor>
                                    <PackedValue>4288108544</PackedValue>
                                    <X>0</X>
                                    <Y>88</Y>
                                    <Z>151</Z>
                                    <R>0</R>
                                    <G>88</G>
                                    <B>151</B>
                                    <A>255</A>
                                  </ScriptBackgroundColor>
                                  <ScriptForegroundColor>
                                    <PackedValue>4294962611</PackedValue>
                                    <X>179</X>
                                    <Y>237</Y>
                                    <Z>255</Z>
                                    <R>179</R>
                                    <G>237</G>
                                    <B>255</B>
                                    <A>255</A>
                                  </ScriptForegroundColor>
                                  <Sprites>
                                    <Length>0</Length>
                                  </Sprites>
                                </MySerializedTextPanelData>
                                <MySerializedTextPanelData>
                                  <ChangeInterval>0</ChangeInterval>
                                  <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
                                  <FontSize>1</FontSize>
                                  <ShowText>NONE</ShowText>
                                  <FontColor>
                                    <PackedValue>4294967295</PackedValue>
                                    <X>255</X>
                                    <Y>255</Y>
                                    <Z>255</Z>
                                    <R>255</R>
                                    <G>255</G>
                                    <B>255</B>
                                    <A>255</A>
                                  </FontColor>
                                  <BackgroundColor>
                                    <PackedValue>4278190080</PackedValue>
                                    <X>0</X>
                                    <Y>0</Y>
                                    <Z>0</Z>
                                    <R>0</R>
                                    <G>0</G>
                                    <B>0</B>
                                    <A>255</A>
                                  </BackgroundColor>
                                  <CurrentShownTexture>0</CurrentShownTexture>
                                  <SelectedScript />
                                  <TextPadding>2</TextPadding>
                                  <ScriptBackgroundColor>
                                    <PackedValue>4288108544</PackedValue>
                                    <X>0</X>
                                    <Y>88</Y>
                                    <Z>151</Z>
                                    <R>0</R>
                                    <G>88</G>
                                    <B>151</B>
                                    <A>255</A>
                                  </ScriptBackgroundColor>
                                  <ScriptForegroundColor>
                                    <PackedValue>4294962611</PackedValue>
                                    <X>179</X>
                                    <Y>237</Y>
                                    <Z>255</Z>
                                    <R>179</R>
                                    <G>237</G>
                                    <B>255</B>
                                    <A>255</A>
                                  </ScriptForegroundColor>
                                  <Sprites>
                                    <Length>0</Length>
                                  </Sprites>
                                </MySerializedTextPanelData>
                              </TextPanelsContents>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle Automaton PB Sb 1 [rename]</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>2</NumberInGrid>
                      <Enabled>true</Enabled>
                      <Program>/*
 * R e a d m e
 * -----------
 * 
 * In this file you can include any instructions or other comments you want to have injected onto the 
 * top of your final script. You can safely delete this file if you do not want any such comments.
 */

readonly SensibleNamer sn;
readonly ProjectorManager pm;

public Program()
{
    sn = new SensibleNamer(GridTerminalSystem, Me, Echo);
    pm = new ProjectorManager(GridTerminalSystem, Me, Echo);
}

public void Save()
{
}

public void Main(string argument, UpdateType updateSource)
{
    if (argument == "align proj")
    {
        pm.Main();
    }
    else if (string.IsNullOrEmpty(argument))
    {
        sn.Main(argument, updateSource);
    }
    else
    {
        Echo("Unrecognized command.\n");
    }
}

}
internal class ProjectorManager
{
    readonly List&lt;IMyProjector&gt; projectors = new List&lt;IMyProjector&gt;();
    readonly List&lt;IMyTerminalBlock&gt; blocks = new List&lt;IMyTerminalBlock&gt;();
    IMyGridTerminalSystem GridTerminalSystem { get; set; }
    readonly IMyTerminalBlock Me;
    readonly Action&lt;string&gt; Echo;

    public ProjectorManager(IMyGridTerminalSystem gridTerminalSystem, IMyTerminalBlock Me, Action&lt;string&gt; E)
    {
        GridTerminalSystem = gridTerminalSystem;
        this.Me = Me;
        Echo = E;
    }

    internal void Main()
    {
        blocks.Clear();
        GridTerminalSystem.GetBlocksOfType(blocks, x =&gt; Me.IsSameConstructAs(x));
        Vector3I lowDim = blocks[0].Position; //A Pb means Block 0 exists
        GridTerminalSystem.GetBlocksOfType(projectors);
        if (projectors.Count == 0)
        {
            Echo("No projector found.\n");
        }
        if (projectors.Count &gt; 1)
        {
            Echo("Too many projectors found.\n");
        }
        else
        {
            Echo("Aligning projection...");
            AutoAlign(lowDim);
            Echo("Complete.");
        }
    }

    private void AutoAlign(Vector3I lowDim)
    {
        var pr = projectors[0];

        var vi = pr.Position - lowDim;
        MatrixI rot = MatrixI.CreateRotation(projectors[0].Orientation.Forward, projectors[0].Orientation.Up, Base6Directions.Direction.Forward, Base6Directions.Direction.Up);
        pr.ProjectionOffset = Vector3I.Transform(vi, rot);

        var prot = new Vector3I(0, 0, 0);
        if (pr.Orientation.Forward == Base6Directions.Direction.Right)
        {
            prot.X = 1;
            if (pr.Orientation.Up == Base6Directions.Direction.Up)
            {
                prot.Z = 0;
            }
            else if (pr.Orientation.Up == Base6Directions.Direction.Forward)
            {
                prot.Z = -1;
            }
            else if (pr.Orientation.Up == Base6Directions.Direction.Down)
            {
                prot.Z = 2;
            }
            else if (pr.Orientation.Up == Base6Directions.Direction.Backward)
            {
                prot.Z = 1;
            }
        }
        else if (pr.Orientation.Forward == Base6Directions.Direction.Backward)
        {
            prot.X = 2;
            if (pr.Orientation.Up == Base6Directions.Direction.Up)
            {
                prot.Z = 0;
            }
            else if (pr.Orientation.Up == Base6Directions.Direction.Left)
            {
                prot.Z = 1;
            }
            else if (pr.Orientation.Up == Base6Directions.Direction.Down)
            {
                prot.Z = 2;
            }
            else if (pr.Orientation.Up == Base6Directions.Direction.Right)
            {
                prot.Z = -1;
            }
        }
        else if (pr.Orientation.Forward == Base6Directions.Direction.Left)
        {
            prot.X = -1;
            if (pr.Orientation.Up == Base6Directions.Direction.Up)
            {
                prot.Z = 0;
            }
            else if (pr.Orientation.Up == Base6Directions.Direction.Forward)
            {
                prot.Z = 1;
            }
            else if (pr.Orientation.Up == Base6Directions.Direction.Down)
            {
                prot.Z = 2;
            }
            else if (pr.Orientation.Up == Base6Directions.Direction.Backward)
            {
                prot.Z = -1;
            }
        }
        else if (pr.Orientation.Forward == Base6Directions.Direction.Forward)
        {
            //prot.X = 0;
            if (pr.Orientation.Up == Base6Directions.Direction.Up)
            {
                prot.Z = 0;
            }
            else if (pr.Orientation.Up == Base6Directions.Direction.Left)
            {
                prot.Z = -1;
            }
            else if (pr.Orientation.Up == Base6Directions.Direction.Down)
            {
                prot.Z = 2;
            }
            else if (pr.Orientation.Up == Base6Directions.Direction.Right)
            {
                prot.Z = 1;
            }
        }
        else if (pr.Orientation.Forward == Base6Directions.Direction.Up)
        {
            //prot.X = 0;
            prot.Y = 1;
            if (pr.Orientation.Up == Base6Directions.Direction.Forward)
            {
                prot.Z = 2;
            }
            else if (pr.Orientation.Up == Base6Directions.Direction.Left)
            {
                prot.Z = -1;
            }
            else if (pr.Orientation.Up == Base6Directions.Direction.Backward)
            {
                prot.Z = 0;
            }
            else if (pr.Orientation.Up == Base6Directions.Direction.Right)
            {
                prot.Z = 1;
            }
        }
        else if (pr.Orientation.Forward == Base6Directions.Direction.Down)
        {
            //prot.X = 0;
            prot.Y = -1;
            if (pr.Orientation.Up == Base6Directions.Direction.Forward)
            {
                prot.Z = 0;
            }
            else if (pr.Orientation.Up == Base6Directions.Direction.Left)
            {
                prot.Z = -1;
            }
            else if (pr.Orientation.Up == Base6Directions.Direction.Backward)
            {
                prot.Z = 2;
            }
            else if (pr.Orientation.Up == Base6Directions.Direction.Right)
            {
                prot.Z = 1;
            }
        }
        pr.ProjectionRotation = prot;

        pr.UpdateOffsetAndRotation();
    }
}

public class RenameStrategy
{
    readonly List&lt;IMyTerminalBlock&gt; blocks = new List&lt;IMyTerminalBlock&gt;();
    readonly Dictionary&lt;string, List&lt;IMyTerminalBlock&gt;&gt; blockDict = new Dictionary&lt;string, List&lt;IMyTerminalBlock&gt;&gt;();
    readonly IMyTerminalBlock Me;

    IMyGridTerminalSystem GridTerminalSystem { get; set; }


    public RenameStrategy(IMyGridTerminalSystem gridTerminalSystem, IMyTerminalBlock Me, Action&lt;string&gt; E)
    {
        GridTerminalSystem = gridTerminalSystem;
        this.Me = Me;
    }

    public void NameEverything(string gridName)
    {
        blocks.Clear();
        blockDict.Clear();
        GridTerminalSystem.GetBlocksOfType(blocks, x =&gt; Me.IsSameConstructAs(x));

        var ps = new PortStar(GridTerminalSystem, Me);

        foreach (var block in blocks)
        {
            if (!blockDict.ContainsKey(block.DefinitionDisplayNameText))
            {
                blockDict.Add(block.DefinitionDisplayNameText, new List&lt;IMyTerminalBlock&gt;());
            }
            blockDict[block.DefinitionDisplayNameText].Add(block);
        }

        List&lt;string&gt; tags = new List&lt;string&gt;();
        List&lt;string&gt; nameTags = new List&lt;string&gt;();
        foreach (var pair in blockDict)
        {
            var list = pair.Value;

            ps.SortBlocks(list);

            int leadingZeros = list.Count.ToString().Length;
            var format = new string('0', leadingZeros);
            for (int i = 0; i &lt; list.Count; ++i)
            {
                var block = list[i];
                int count = list.Count;
                string customName = block.CustomName;
                string defDisplayName = block.DefinitionDisplayNameText;
                string side = ps.MakeSideAnnot(list, block);
                var formattedNum = $" {(i + 1).ToString(format)}";
                if (count == 1) formattedNum = "";
                block.CustomName = CreateName(gridName, formattedNum, customName, defDisplayName, side, tags, nameTags);
            }
        }
    }

    public static string CreateName(string gridName, string formattedNum, string oldName, string defDisplayName, string side, List&lt;string&gt; tags, List&lt;string&gt; nameTags)
    {
        tags.Clear();
        GetTags(oldName, ref tags);
        tags = tags.Distinct().ToList();

        nameTags.Clear();
        GetTags(defDisplayName, ref nameTags);
        tags = tags.Except(nameTags).ToList();
        var allTags = String.Join(" ", tags);
        if (!string.IsNullOrWhiteSpace(allTags)) allTags = " " + allTags;
        if (!string.IsNullOrWhiteSpace(side)) side= " " + side;
        if (!string.IsNullOrWhiteSpace(gridName)) gridName += " ";
        return $"{gridName}{Renamer(defDisplayName)}{side}{formattedNum}{allTags}";
    }

    internal class PortStar
    {
        readonly MatrixI rot;
        readonly Vector3I com;
        readonly List&lt;IMyRemoteControl&gt; controllers = new List&lt;IMyRemoteControl&gt;();
        readonly IMyRemoteControl front;

        public PortStar(IMyGridTerminalSystem GridTerminalSystem, IMyTerminalBlock Me)
        {
            GridTerminalSystem.GetBlocksOfType(controllers, x =&gt; Me.IsSameConstructAs(x));
            front = controllers[0];
            rot = MatrixI.CreateRotation(front.Orientation.Forward, front.Orientation.Up, Base6Directions.Direction.Forward, Base6Directions.Direction.Up);
            com = front.CubeGrid.WorldToGridInteger(front.CenterOfMass);
        }

        internal void SortBlocks(List&lt;IMyTerminalBlock&gt; list)
        {
            list.Sort((x, y) =&gt; Vector3I.Transform(x.Position - com, rot).Z.CompareTo(Vector3I.Transform(y.Position - com, rot).Z));
        }

        internal string MakeSideAnnot(List&lt;IMyTerminalBlock&gt; list, IMyTerminalBlock block)
        {
            int loc = Vector3I.Transform(block.Position - com, rot).X;
            string side = "";
            if (loc &lt; 0) side = "Po";
            else if (loc &gt; 0) side = "Sb";
            if (list.Count == 1) side = "";
            return side;
        }
    }

    private static string Renamer(string name)
    {
        var result = name;
        //result = result.Replace("[", "");
        //result = result.Replace("]", "");
        result = result.Replace("Programmable Block", "PB");
        result = result.Replace("Remote Control", "RC");
        result = result.Replace("Atmospheric", "Atmo");
        return result;
    }

    public static void GetTags(string text, ref List&lt;string&gt; tags)
    {
        //int ind = oldText.IndexOf('[');
        //while (ind &gt;= 0)
        //{
        //    var nextBrace = oldText.Substring(ind);
        //    int len = nextBrace.IndexOf(']');
        //    tags.Add(nextBrace.Substring(0, len + 1));
        //    if (len &lt; 0 || len + 1 == nextBrace.Length) break;
        //    oldText = nextBrace.Substring(len + 1);
        //    ind = oldText.IndexOf('[');
        //}

        //Regex regex = new Regex(@"\[[^\]]*\]");
        //var result = regex.Matches(oldText);
        //foreach (Match match in result)
        //{
        //    tags.Add(match.Value);
        //}

        int point = 0;
        int braceLeft;
        while ((braceLeft = text.IndexOf('[', point)) != -1)
        {
            point = braceLeft + 1;
            if (point &gt;= text.Length)
                break;

            int braceRight = text.IndexOf(']', point);
            if (braceRight != -1)
            {
                tags.Add(text.Substring(braceLeft, braceRight - braceLeft + 1));
                point = braceRight + 1;
                if (point &gt;= text.Length)
                    break;
            }
        }
    }

    /*public static string PreserveTags(string oldText)
        {
            string result = "";
            int ind = oldText.IndexOf('[');
            while (ind &gt;= 0)
            {
                var nextBrace = oldText.Substring(ind);
                int len = nextBrace.IndexOf(']');
                result += " " + nextBrace.Substring(0, len + 1);
                if (len &lt; 0 || len + 1 == nextBrace.Length) break;
                oldText = nextBrace.Substring(len + 1);
                ind = oldText.IndexOf('[');
            }
            result = result.TrimEnd(' ');
            return result;
        }*/
}

public class SensibleNamer
{
    // https://github.com/malware-dev/MDK-SE/wiki/Quick-Introduction-to-Space-Engineers-Ingame-Scripts
    readonly List&lt;IMyBlockGroup&gt; blockGroups = new List&lt;IMyBlockGroup&gt;();
    readonly List&lt;IMyTerminalBlock&gt; blocks = new List&lt;IMyTerminalBlock&gt;();
    readonly List&lt;IMyShipConnector&gt; connectors = new List&lt;IMyShipConnector&gt;();
    readonly List&lt;IMyShipController&gt; contr = new List&lt;IMyShipController&gt;();
    readonly RenameStrategy strategy;

    IMyGridTerminalSystem GridTerminalSystem { get; set; }
    readonly IMyTerminalBlock Me;
    readonly Action&lt;string&gt; Echo;

    public SensibleNamer(IMyGridTerminalSystem gridTerminalSystem, IMyTerminalBlock Me, Action&lt;string&gt; E)
    {
        GridTerminalSystem = gridTerminalSystem;
        this.Me = Me;
        Echo = E;
        GridTerminalSystem.GetBlockGroups(blockGroups);
        Echo("Run without any arguments to rename.\n" +
            "Run with 'align proj' to auto align repair projector.\n");
        strategy = new RenameStrategy(gridTerminalSystem, Me, E);
    }

    public void Main(string argument, UpdateType updateSource)
    {
        string gridName = "";
        gridName = GetGridAbbr(gridName);

        strategy.NameEverything(gridName);
        InitConnectors();
        HideStuff();
        HideEverythingInAGroup();
    }

    private void HideStuff()
    {
        blocks.Clear();
        GridTerminalSystem.GetBlocksOfType(blocks, x =&gt; Me.IsSameConstructAs(x));
        foreach (var block in blocks)
        {
            if (block.CustomName.Contains("Cargo")
                || block.CustomName.Contains("Gyro")
                 || block.CustomName.Contains("Thruster")
                 || block.CustomName.Contains("Armory")
                 || block.CustomName.Contains("Solar")
                 || block.CustomName.Contains("Turbine")
                 || block.CustomName.Contains("Locker")
                 || block.CustomName.Contains("Bed")
                 || block.CustomName.Contains("Desk")
                 || block.CustomName.Contains("Bathroom")
                 || block.CustomName.Contains("Battery")
                  || block.CustomName.Contains("Door"))
            {
                block.ShowInTerminal = false;
                block.ShowInToolbarConfig = false;
            }
        }

        foreach (var block in blocks)
        {
            if (block.CustomName.Contains("Light")
                || block.CustomName.Contains("LCD")
                )
            {
                block.ShowInToolbarConfig = false;
            }
        }
    }


    private void HideEverythingInAGroup()
    {
        foreach (var group in blockGroups)
        {
            blocks.Clear();
            group.GetBlocks(blocks, x =&gt; Me.IsSameConstructAs(x));
            foreach (var block in blocks)
            {
                if (!(block is IMyProgrammableBlock))
                {
                    block.ShowInTerminal = false;
                    block.ShowInToolbarConfig = false;
                }
            }
        }
    }

    private void InitConnectors()
    {
        blocks.Clear();
        GridTerminalSystem.GetBlocksOfType(connectors, x =&gt; Me.IsSameConstructAs(x));
        foreach (var connector in connectors)
        {
            connector.PullStrength = 0.0f;
        }
    }

    private string GetGridAbbr(string gridName)
    {
        GridTerminalSystem.GetBlocksOfType(contr, x =&gt; Me.IsSameConstructAs(x));
        if (contr.Count &gt; 0)
        {
            var cn = contr[0].CubeGrid.CustomName;
            if (cn.Contains(" "))
            {
                var results = cn.Split(' ');
                foreach (var c in results)
                {
                    if (char.IsLetter(c[0]))
                    {
                        gridName += c[0];
                    }
                }
            }
            else
            {
                if (cn.Length &gt; 2)
                {
                    gridName += $"{cn[0]}{cn[1]}{cn[cn.Length - 1]}";
                }
            }
        }

        return gridName;
    }</Program>
                      <Storage />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MyProgrammableBlock">
                      <SubtypeName>SmallProgrammableBlockReskin</SubtypeName>
                      <EntityId>93865569583309530</EntityId>
                      <Name>93865569583309530</Name>
                      <Min x="-1" y="3" z="7" />
                      <BlockOrientation Forward="Down" Up="Forward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyMultiTextPanelComponent</TypeId>
                            <Component xsi:type="MyObjectBuilder_MultiTextPanelComponent">
                              <TextPanelsContents>
                                <MySerializedTextPanelData>
                                  <ChangeInterval>0</ChangeInterval>
                                  <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
                                  <FontSize>1</FontSize>
                                  <ShowText>NONE</ShowText>
                                  <FontColor>
                                    <PackedValue>4294967295</PackedValue>
                                    <X>255</X>
                                    <Y>255</Y>
                                    <Z>255</Z>
                                    <R>255</R>
                                    <G>255</G>
                                    <B>255</B>
                                    <A>255</A>
                                  </FontColor>
                                  <BackgroundColor>
                                    <PackedValue>4278190080</PackedValue>
                                    <X>0</X>
                                    <Y>0</Y>
                                    <Z>0</Z>
                                    <R>0</R>
                                    <G>0</G>
                                    <B>0</B>
                                    <A>255</A>
                                  </BackgroundColor>
                                  <CurrentShownTexture>0</CurrentShownTexture>
                                  <SelectedScript />
                                  <TextPadding>2</TextPadding>
                                  <ScriptBackgroundColor>
                                    <PackedValue>4288108544</PackedValue>
                                    <X>0</X>
                                    <Y>88</Y>
                                    <Z>151</Z>
                                    <R>0</R>
                                    <G>88</G>
                                    <B>151</B>
                                    <A>255</A>
                                  </ScriptBackgroundColor>
                                  <ScriptForegroundColor>
                                    <PackedValue>4294962611</PackedValue>
                                    <X>179</X>
                                    <Y>237</Y>
                                    <Z>255</Z>
                                    <R>179</R>
                                    <G>237</G>
                                    <B>255</B>
                                    <A>255</A>
                                  </ScriptForegroundColor>
                                  <Sprites>
                                    <Length>0</Length>
                                  </Sprites>
                                </MySerializedTextPanelData>
                                <MySerializedTextPanelData>
                                  <ChangeInterval>0</ChangeInterval>
                                  <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
                                  <FontSize>1</FontSize>
                                  <ShowText>NONE</ShowText>
                                  <FontColor>
                                    <PackedValue>4294967295</PackedValue>
                                    <X>255</X>
                                    <Y>255</Y>
                                    <Z>255</Z>
                                    <R>255</R>
                                    <G>255</G>
                                    <B>255</B>
                                    <A>255</A>
                                  </FontColor>
                                  <BackgroundColor>
                                    <PackedValue>4278190080</PackedValue>
                                    <X>0</X>
                                    <Y>0</Y>
                                    <Z>0</Z>
                                    <R>0</R>
                                    <G>0</G>
                                    <B>0</B>
                                    <A>255</A>
                                  </BackgroundColor>
                                  <CurrentShownTexture>0</CurrentShownTexture>
                                  <SelectedScript />
                                  <TextPadding>2</TextPadding>
                                  <ScriptBackgroundColor>
                                    <PackedValue>4288108544</PackedValue>
                                    <X>0</X>
                                    <Y>88</Y>
                                    <Z>151</Z>
                                    <R>0</R>
                                    <G>88</G>
                                    <B>151</B>
                                    <A>255</A>
                                  </ScriptBackgroundColor>
                                  <ScriptForegroundColor>
                                    <PackedValue>4294962611</PackedValue>
                                    <X>179</X>
                                    <Y>237</Y>
                                    <Z>255</Z>
                                    <R>179</R>
                                    <G>237</G>
                                    <B>255</B>
                                    <A>255</A>
                                  </ScriptForegroundColor>
                                  <Sprites>
                                    <Length>0</Length>
                                  </Sprites>
                                </MySerializedTextPanelData>
                              </TextPanelsContents>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle Automaton PB Po 2</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>3</NumberInGrid>
                      <Enabled>true</Enabled>
                      <Storage />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
                      <SubtypeName>SmallBlockBatteryBlock</SubtypeName>
                      <EntityId>100626087308477541</EntityId>
                      <Name>100626087308477541</Name>
                      <Min x="1" y="4" z="12" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <CustomName>Cle Battery Sb 3</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>11</NumberInGrid>
                      <Enabled>true</Enabled>
                      <CurrentStoredPower>0</CurrentStoredPower>
                      <ProducerEnabled>true</ProducerEnabled>
                      <MaxStoredPower>0</MaxStoredPower>
                      <SemiautoEnabled>false</SemiautoEnabled>
                      <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
                      <ChargeMode>0</ChargeMode>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
                      <SubtypeName>SmallBlockBatteryBlock</SubtypeName>
                      <EntityId>120435749579450564</EntityId>
                      <Name>120435749579450564</Name>
                      <Min x="-3" y="4" z="12" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <CustomName>Cle Battery Po 4</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>12</NumberInGrid>
                      <Enabled>true</Enabled>
                      <CurrentStoredPower>0</CurrentStoredPower>
                      <ProducerEnabled>true</ProducerEnabled>
                      <MaxStoredPower>0</MaxStoredPower>
                      <SemiautoEnabled>false</SemiautoEnabled>
                      <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
                      <ChargeMode>0</ChargeMode>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
                      <EntityId>102835277276603504</EntityId>
                      <Name>102835277276603504</Name>
                      <Min x="-5" y="0" z="11" />
                      <BlockOrientation Forward="Down" Up="Right" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyTimerComponent</TypeId>
                            <Component xsi:type="MyObjectBuilder_TimerComponent">
                              <Repeat>true</Repeat>
                              <TimeToEvent>0</TimeToEvent>
                              <SetTimeMinutes>0</SetTimeMinutes>
                              <TimerEnabled>true</TimerEnabled>
                              <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                              <TimerType>Frame100</TimerType>
                              <FramesFromLastTrigger>0</FramesFromLastTrigger>
                              <TimerTickInFrames>100</TimerTickInFrames>
                              <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle Atmo Thruster Po 18</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>7</NumberInGrid>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
                      <EntityId>135341703457862778</EntityId>
                      <Name>135341703457862778</Name>
                      <Min x="5" y="0" z="11" />
                      <BlockOrientation Forward="Down" Up="Right" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyTimerComponent</TypeId>
                            <Component xsi:type="MyObjectBuilder_TimerComponent">
                              <Repeat>true</Repeat>
                              <TimeToEvent>0</TimeToEvent>
                              <SetTimeMinutes>0</SetTimeMinutes>
                              <TimerEnabled>true</TimerEnabled>
                              <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                              <TimerType>Frame100</TimerType>
                              <FramesFromLastTrigger>0</FramesFromLastTrigger>
                              <TimerTickInFrames>100</TimerTickInFrames>
                              <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle Atmo Thruster Sb 19</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>8</NumberInGrid>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
                      <EntityId>85588089010279447</EntityId>
                      <Name>85588089010279447</Name>
                      <Min x="-5" y="0" z="13" />
                      <BlockOrientation Forward="Down" Up="Right" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyTimerComponent</TypeId>
                            <Component xsi:type="MyObjectBuilder_TimerComponent">
                              <Repeat>true</Repeat>
                              <TimeToEvent>0</TimeToEvent>
                              <SetTimeMinutes>0</SetTimeMinutes>
                              <TimerEnabled>true</TimerEnabled>
                              <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                              <TimerType>Frame100</TimerType>
                              <FramesFromLastTrigger>0</FramesFromLastTrigger>
                              <TimerTickInFrames>100</TimerTickInFrames>
                              <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle Atmo Thruster Po 27</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>9</NumberInGrid>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
                      <EntityId>136848347483996795</EntityId>
                      <Name>136848347483996795</Name>
                      <Min x="5" y="0" z="13" />
                      <BlockOrientation Forward="Down" Up="Right" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyTimerComponent</TypeId>
                            <Component xsi:type="MyObjectBuilder_TimerComponent">
                              <Repeat>true</Repeat>
                              <TimeToEvent>0</TimeToEvent>
                              <SetTimeMinutes>0</SetTimeMinutes>
                              <TimerEnabled>true</TimerEnabled>
                              <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                              <TimerType>Frame100</TimerType>
                              <FramesFromLastTrigger>0</FramesFromLastTrigger>
                              <TimerTickInFrames>100</TimerTickInFrames>
                              <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle Atmo Thruster Sb 26</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>10</NumberInGrid>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
                      <EntityId>89087959043373943</EntityId>
                      <Name>89087959043373943</Name>
                      <Min x="-5" y="0" z="15" />
                      <BlockOrientation Forward="Down" Up="Right" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyTimerComponent</TypeId>
                            <Component xsi:type="MyObjectBuilder_TimerComponent">
                              <Repeat>true</Repeat>
                              <TimeToEvent>0</TimeToEvent>
                              <SetTimeMinutes>0</SetTimeMinutes>
                              <TimerEnabled>true</TimerEnabled>
                              <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                              <TimerType>Frame100</TimerType>
                              <FramesFromLastTrigger>0</FramesFromLastTrigger>
                              <TimerTickInFrames>100</TimerTickInFrames>
                              <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle Atmo Thruster Po 32</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>11</NumberInGrid>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
                      <EntityId>97521840690491990</EntityId>
                      <Name>97521840690491990</Name>
                      <Min x="5" y="0" z="15" />
                      <BlockOrientation Forward="Down" Up="Right" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyTimerComponent</TypeId>
                            <Component xsi:type="MyObjectBuilder_TimerComponent">
                              <Repeat>true</Repeat>
                              <TimeToEvent>0</TimeToEvent>
                              <SetTimeMinutes>0</SetTimeMinutes>
                              <TimerEnabled>true</TimerEnabled>
                              <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                              <TimerType>Frame100</TimerType>
                              <FramesFromLastTrigger>0</FramesFromLastTrigger>
                              <TimerTickInFrames>100</TimerTickInFrames>
                              <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle Atmo Thruster Sb 33</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>12</NumberInGrid>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
                      <EntityId>90582614095726855</EntityId>
                      <Name>90582614095726855</Name>
                      <Min x="-5" y="0" z="16" />
                      <BlockOrientation Forward="Down" Up="Right" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyTimerComponent</TypeId>
                            <Component xsi:type="MyObjectBuilder_TimerComponent">
                              <Repeat>true</Repeat>
                              <TimeToEvent>0</TimeToEvent>
                              <SetTimeMinutes>0</SetTimeMinutes>
                              <TimerEnabled>true</TimerEnabled>
                              <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                              <TimerType>Frame100</TimerType>
                              <FramesFromLastTrigger>0</FramesFromLastTrigger>
                              <TimerTickInFrames>100</TimerTickInFrames>
                              <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle Atmo Thruster Po 34</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>13</NumberInGrid>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
                      <EntityId>98404599011046708</EntityId>
                      <Name>98404599011046708</Name>
                      <Min x="5" y="0" z="16" />
                      <BlockOrientation Forward="Down" Up="Right" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyTimerComponent</TypeId>
                            <Component xsi:type="MyObjectBuilder_TimerComponent">
                              <Repeat>true</Repeat>
                              <TimeToEvent>0</TimeToEvent>
                              <SetTimeMinutes>0</SetTimeMinutes>
                              <TimerEnabled>true</TimerEnabled>
                              <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                              <TimerType>Frame100</TimerType>
                              <FramesFromLastTrigger>0</FramesFromLastTrigger>
                              <TimerTickInFrames>100</TimerTickInFrames>
                              <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle Atmo Thruster Sb 35</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>14</NumberInGrid>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
                      <EntityId>98806826777570062</EntityId>
                      <Name>98806826777570062</Name>
                      <Min x="-5" y="0" z="12" />
                      <BlockOrientation Forward="Down" Up="Right" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyTimerComponent</TypeId>
                            <Component xsi:type="MyObjectBuilder_TimerComponent">
                              <Repeat>true</Repeat>
                              <TimeToEvent>0</TimeToEvent>
                              <SetTimeMinutes>0</SetTimeMinutes>
                              <TimerEnabled>true</TimerEnabled>
                              <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                              <TimerType>Frame100</TimerType>
                              <FramesFromLastTrigger>0</FramesFromLastTrigger>
                              <TimerTickInFrames>100</TimerTickInFrames>
                              <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle Atmo Thruster Po 24</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>15</NumberInGrid>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
                      <EntityId>100557897360173592</EntityId>
                      <Name>100557897360173592</Name>
                      <Min x="5" y="0" z="12" />
                      <BlockOrientation Forward="Down" Up="Right" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyTimerComponent</TypeId>
                            <Component xsi:type="MyObjectBuilder_TimerComponent">
                              <Repeat>true</Repeat>
                              <TimeToEvent>0</TimeToEvent>
                              <SetTimeMinutes>0</SetTimeMinutes>
                              <TimerEnabled>true</TimerEnabled>
                              <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                              <TimerType>Frame100</TimerType>
                              <FramesFromLastTrigger>0</FramesFromLastTrigger>
                              <TimerTickInFrames>100</TimerTickInFrames>
                              <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle Atmo Thruster Sb 25</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>16</NumberInGrid>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
                      <EntityId>113308170667684775</EntityId>
                      <Name>113308170667684775</Name>
                      <Min x="-5" y="0" z="14" />
                      <BlockOrientation Forward="Down" Up="Right" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyTimerComponent</TypeId>
                            <Component xsi:type="MyObjectBuilder_TimerComponent">
                              <Repeat>true</Repeat>
                              <TimeToEvent>0</TimeToEvent>
                              <SetTimeMinutes>0</SetTimeMinutes>
                              <TimerEnabled>true</TimerEnabled>
                              <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                              <TimerType>Frame100</TimerType>
                              <FramesFromLastTrigger>0</FramesFromLastTrigger>
                              <TimerTickInFrames>100</TimerTickInFrames>
                              <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle Atmo Thruster Po 29</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>17</NumberInGrid>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
                      <EntityId>114309835455212601</EntityId>
                      <Name>114309835455212601</Name>
                      <Min x="5" y="0" z="14" />
                      <BlockOrientation Forward="Down" Up="Right" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyTimerComponent</TypeId>
                            <Component xsi:type="MyObjectBuilder_TimerComponent">
                              <Repeat>true</Repeat>
                              <TimeToEvent>0</TimeToEvent>
                              <SetTimeMinutes>0</SetTimeMinutes>
                              <TimerEnabled>true</TimerEnabled>
                              <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                              <TimerType>Frame100</TimerType>
                              <FramesFromLastTrigger>0</FramesFromLastTrigger>
                              <TimerTickInFrames>100</TimerTickInFrames>
                              <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle Atmo Thruster Sb 28</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>18</NumberInGrid>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
                      <EntityId>118579042027955860</EntityId>
                      <Name>118579042027955860</Name>
                      <Min x="5" y="0" z="7" />
                      <BlockOrientation Forward="Down" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyTimerComponent</TypeId>
                            <Component xsi:type="MyObjectBuilder_TimerComponent">
                              <Repeat>true</Repeat>
                              <TimeToEvent>0</TimeToEvent>
                              <SetTimeMinutes>0</SetTimeMinutes>
                              <TimerEnabled>true</TimerEnabled>
                              <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                              <TimerType>Frame100</TimerType>
                              <FramesFromLastTrigger>0</FramesFromLastTrigger>
                              <TimerTickInFrames>100</TimerTickInFrames>
                              <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle Atmo Thruster Sb 16</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>19</NumberInGrid>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
                      <EntityId>107886614918752810</EntityId>
                      <Name>107886614918752810</Name>
                      <Min x="-5" y="0" z="7" />
                      <BlockOrientation Forward="Down" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyTimerComponent</TypeId>
                            <Component xsi:type="MyObjectBuilder_TimerComponent">
                              <Repeat>true</Repeat>
                              <TimeToEvent>0</TimeToEvent>
                              <SetTimeMinutes>0</SetTimeMinutes>
                              <TimerEnabled>true</TimerEnabled>
                              <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                              <TimerType>Frame100</TimerType>
                              <FramesFromLastTrigger>0</FramesFromLastTrigger>
                              <TimerTickInFrames>100</TimerTickInFrames>
                              <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle Atmo Thruster Po 17</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>20</NumberInGrid>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
                      <EntityId>80237747989138704</EntityId>
                      <Name>80237747989138704</Name>
                      <Min x="5" y="0" z="6" />
                      <BlockOrientation Forward="Down" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyTimerComponent</TypeId>
                            <Component xsi:type="MyObjectBuilder_TimerComponent">
                              <Repeat>true</Repeat>
                              <TimeToEvent>0</TimeToEvent>
                              <SetTimeMinutes>0</SetTimeMinutes>
                              <TimerEnabled>true</TimerEnabled>
                              <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                              <TimerType>Frame100</TimerType>
                              <FramesFromLastTrigger>0</FramesFromLastTrigger>
                              <TimerTickInFrames>100</TimerTickInFrames>
                              <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle Atmo Thruster Sb 14</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>21</NumberInGrid>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
                      <EntityId>100714595590262360</EntityId>
                      <Name>100714595590262360</Name>
                      <Min x="-5" y="0" z="6" />
                      <BlockOrientation Forward="Down" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyTimerComponent</TypeId>
                            <Component xsi:type="MyObjectBuilder_TimerComponent">
                              <Repeat>true</Repeat>
                              <TimeToEvent>0</TimeToEvent>
                              <SetTimeMinutes>0</SetTimeMinutes>
                              <TimerEnabled>true</TimerEnabled>
                              <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                              <TimerType>Frame100</TimerType>
                              <FramesFromLastTrigger>0</FramesFromLastTrigger>
                              <TimerTickInFrames>100</TimerTickInFrames>
                              <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle Atmo Thruster Po 15</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>22</NumberInGrid>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
                      <EntityId>72541787048298451</EntityId>
                      <Name>72541787048298451</Name>
                      <Min x="5" y="0" z="5" />
                      <BlockOrientation Forward="Down" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyTimerComponent</TypeId>
                            <Component xsi:type="MyObjectBuilder_TimerComponent">
                              <Repeat>true</Repeat>
                              <TimeToEvent>0</TimeToEvent>
                              <SetTimeMinutes>0</SetTimeMinutes>
                              <TimerEnabled>true</TimerEnabled>
                              <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                              <TimerType>Frame100</TimerType>
                              <FramesFromLastTrigger>0</FramesFromLastTrigger>
                              <TimerTickInFrames>100</TimerTickInFrames>
                              <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle Atmo Thruster Sb 12</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>23</NumberInGrid>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
                      <EntityId>97271924377570381</EntityId>
                      <Name>97271924377570381</Name>
                      <Min x="-5" y="0" z="5" />
                      <BlockOrientation Forward="Down" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyTimerComponent</TypeId>
                            <Component xsi:type="MyObjectBuilder_TimerComponent">
                              <Repeat>true</Repeat>
                              <TimeToEvent>0</TimeToEvent>
                              <SetTimeMinutes>0</SetTimeMinutes>
                              <TimerEnabled>true</TimerEnabled>
                              <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                              <TimerType>Frame100</TimerType>
                              <FramesFromLastTrigger>0</FramesFromLastTrigger>
                              <TimerTickInFrames>100</TimerTickInFrames>
                              <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle Atmo Thruster Po 13</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>24</NumberInGrid>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
                      <EntityId>138788758119034796</EntityId>
                      <Name>138788758119034796</Name>
                      <Min x="5" y="0" z="4" />
                      <BlockOrientation Forward="Down" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyTimerComponent</TypeId>
                            <Component xsi:type="MyObjectBuilder_TimerComponent">
                              <Repeat>true</Repeat>
                              <TimeToEvent>0</TimeToEvent>
                              <SetTimeMinutes>0</SetTimeMinutes>
                              <TimerEnabled>true</TimerEnabled>
                              <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                              <TimerType>Frame100</TimerType>
                              <FramesFromLastTrigger>0</FramesFromLastTrigger>
                              <TimerTickInFrames>100</TimerTickInFrames>
                              <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle Atmo Thruster Sb 10</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>25</NumberInGrid>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
                      <EntityId>115554743045415368</EntityId>
                      <Name>115554743045415368</Name>
                      <Min x="-5" y="0" z="4" />
                      <BlockOrientation Forward="Down" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyTimerComponent</TypeId>
                            <Component xsi:type="MyObjectBuilder_TimerComponent">
                              <Repeat>true</Repeat>
                              <TimeToEvent>0</TimeToEvent>
                              <SetTimeMinutes>0</SetTimeMinutes>
                              <TimerEnabled>true</TimerEnabled>
                              <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                              <TimerType>Frame100</TimerType>
                              <FramesFromLastTrigger>0</FramesFromLastTrigger>
                              <TimerTickInFrames>100</TimerTickInFrames>
                              <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle Atmo Thruster Po 08</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>26</NumberInGrid>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
                      <EntityId>114145698809267204</EntityId>
                      <Name>114145698809267204</Name>
                      <Min x="5" y="0" z="3" />
                      <BlockOrientation Forward="Down" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyTimerComponent</TypeId>
                            <Component xsi:type="MyObjectBuilder_TimerComponent">
                              <Repeat>true</Repeat>
                              <TimeToEvent>0</TimeToEvent>
                              <SetTimeMinutes>0</SetTimeMinutes>
                              <TimerEnabled>true</TimerEnabled>
                              <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                              <TimerType>Frame100</TimerType>
                              <FramesFromLastTrigger>0</FramesFromLastTrigger>
                              <TimerTickInFrames>100</TimerTickInFrames>
                              <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle Atmo Thruster Sb 05</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>27</NumberInGrid>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
                      <EntityId>86511683739391820</EntityId>
                      <Name>86511683739391820</Name>
                      <Min x="-5" y="0" z="3" />
                      <BlockOrientation Forward="Down" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyTimerComponent</TypeId>
                            <Component xsi:type="MyObjectBuilder_TimerComponent">
                              <Repeat>true</Repeat>
                              <TimeToEvent>0</TimeToEvent>
                              <SetTimeMinutes>0</SetTimeMinutes>
                              <TimerEnabled>true</TimerEnabled>
                              <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                              <TimerType>Frame100</TimerType>
                              <FramesFromLastTrigger>0</FramesFromLastTrigger>
                              <TimerTickInFrames>100</TimerTickInFrames>
                              <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle Atmo Thruster Po 04</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>28</NumberInGrid>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
                      <EntityId>96971766046452597</EntityId>
                      <Name>96971766046452597</Name>
                      <Min x="5" y="0" z="2" />
                      <BlockOrientation Forward="Down" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyTimerComponent</TypeId>
                            <Component xsi:type="MyObjectBuilder_TimerComponent">
                              <Repeat>true</Repeat>
                              <TimeToEvent>0</TimeToEvent>
                              <SetTimeMinutes>0</SetTimeMinutes>
                              <TimerEnabled>true</TimerEnabled>
                              <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                              <TimerType>Frame100</TimerType>
                              <FramesFromLastTrigger>0</FramesFromLastTrigger>
                              <TimerTickInFrames>100</TimerTickInFrames>
                              <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle Atmo Thruster Sb 02</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>29</NumberInGrid>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
                      <EntityId>140681842711846362</EntityId>
                      <Name>140681842711846362</Name>
                      <Min x="-5" y="0" z="2" />
                      <BlockOrientation Forward="Down" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyTimerComponent</TypeId>
                            <Component xsi:type="MyObjectBuilder_TimerComponent">
                              <Repeat>true</Repeat>
                              <TimeToEvent>0</TimeToEvent>
                              <SetTimeMinutes>0</SetTimeMinutes>
                              <TimerEnabled>true</TimerEnabled>
                              <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                              <TimerType>Frame100</TimerType>
                              <FramesFromLastTrigger>0</FramesFromLastTrigger>
                              <TimerTickInFrames>100</TimerTickInFrames>
                              <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle Atmo Thruster Po 01</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>30</NumberInGrid>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
                      <EntityId>73978896264972594</EntityId>
                      <Name>73978896264972594</Name>
                      <Min x="1" y="4" z="15" />
                      <BlockOrientation Forward="Right" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyTimerComponent</TypeId>
                            <Component xsi:type="MyObjectBuilder_TimerComponent">
                              <Repeat>true</Repeat>
                              <TimeToEvent>0</TimeToEvent>
                              <SetTimeMinutes>0</SetTimeMinutes>
                              <TimerEnabled>true</TimerEnabled>
                              <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                              <TimerType>Frame100</TimerType>
                              <FramesFromLastTrigger>0</FramesFromLastTrigger>
                              <TimerTickInFrames>100</TimerTickInFrames>
                              <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle Atmo Thruster Sb 30</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>45</NumberInGrid>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
                      <EntityId>115382606531799066</EntityId>
                      <Name>115382606531799066</Name>
                      <Min x="-3" y="4" z="15" />
                      <BlockOrientation Forward="Left" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyTimerComponent</TypeId>
                            <Component xsi:type="MyObjectBuilder_TimerComponent">
                              <Repeat>true</Repeat>
                              <TimeToEvent>0</TimeToEvent>
                              <SetTimeMinutes>0</SetTimeMinutes>
                              <TimerEnabled>true</TimerEnabled>
                              <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                              <TimerType>Frame100</TimerType>
                              <FramesFromLastTrigger>0</FramesFromLastTrigger>
                              <TimerTickInFrames>100</TimerTickInFrames>
                              <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle Atmo Thruster Po 31</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>46</NumberInGrid>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
                      <EntityId>75688282393841965</EntityId>
                      <Name>75688282393841965</Name>
                      <Min x="-5" y="3" z="11" />
                      <BlockOrientation Forward="Left" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyTimerComponent</TypeId>
                            <Component xsi:type="MyObjectBuilder_TimerComponent">
                              <Repeat>true</Repeat>
                              <TimeToEvent>0</TimeToEvent>
                              <SetTimeMinutes>0</SetTimeMinutes>
                              <TimerEnabled>true</TimerEnabled>
                              <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                              <TimerType>Frame100</TimerType>
                              <FramesFromLastTrigger>0</FramesFromLastTrigger>
                              <TimerTickInFrames>100</TimerTickInFrames>
                              <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle Atmo Thruster Po 21</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>33</NumberInGrid>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
                      <EntityId>140623508709075692</EntityId>
                      <Name>140623508709075692</Name>
                      <Min x="3" y="3" z="11" />
                      <BlockOrientation Forward="Right" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyTimerComponent</TypeId>
                            <Component xsi:type="MyObjectBuilder_TimerComponent">
                              <Repeat>true</Repeat>
                              <TimeToEvent>0</TimeToEvent>
                              <SetTimeMinutes>0</SetTimeMinutes>
                              <TimerEnabled>true</TimerEnabled>
                              <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                              <TimerType>Frame100</TimerType>
                              <FramesFromLastTrigger>0</FramesFromLastTrigger>
                              <TimerTickInFrames>100</TimerTickInFrames>
                              <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle Atmo Thruster Sb 20</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>34</NumberInGrid>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
                      <EntityId>96875332997508900</EntityId>
                      <Name>96875332997508900</Name>
                      <Min x="-5" y="3" z="12" />
                      <BlockOrientation Forward="Left" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyTimerComponent</TypeId>
                            <Component xsi:type="MyObjectBuilder_TimerComponent">
                              <Repeat>true</Repeat>
                              <TimeToEvent>0</TimeToEvent>
                              <SetTimeMinutes>0</SetTimeMinutes>
                              <TimerEnabled>true</TimerEnabled>
                              <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                              <TimerType>Frame100</TimerType>
                              <FramesFromLastTrigger>0</FramesFromLastTrigger>
                              <TimerTickInFrames>100</TimerTickInFrames>
                              <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle Atmo Thruster Po 23</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>35</NumberInGrid>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
                      <EntityId>135615877924670180</EntityId>
                      <Name>135615877924670180</Name>
                      <Min x="3" y="3" z="12" />
                      <BlockOrientation Forward="Right" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyTimerComponent</TypeId>
                            <Component xsi:type="MyObjectBuilder_TimerComponent">
                              <Repeat>true</Repeat>
                              <TimeToEvent>0</TimeToEvent>
                              <SetTimeMinutes>0</SetTimeMinutes>
                              <TimerEnabled>true</TimerEnabled>
                              <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                              <TimerType>Frame100</TimerType>
                              <FramesFromLastTrigger>0</FramesFromLastTrigger>
                              <TimerTickInFrames>100</TimerTickInFrames>
                              <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle Atmo Thruster Sb 22</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>36</NumberInGrid>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
                      <EntityId>120877077767372867</EntityId>
                      <Name>120877077767372867</Name>
                      <Min x="-3" y="3" z="15" />
                      <BlockOrientation Forward="Backward" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyTimerComponent</TypeId>
                            <Component xsi:type="MyObjectBuilder_TimerComponent">
                              <Repeat>true</Repeat>
                              <TimeToEvent>0</TimeToEvent>
                              <SetTimeMinutes>0</SetTimeMinutes>
                              <TimerEnabled>true</TimerEnabled>
                              <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                              <TimerType>Frame100</TimerType>
                              <FramesFromLastTrigger>0</FramesFromLastTrigger>
                              <TimerTickInFrames>100</TimerTickInFrames>
                              <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle Atmo Thruster Po 36</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>37</NumberInGrid>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
                      <EntityId>130599059124403645</EntityId>
                      <Name>130599059124403645</Name>
                      <Min x="3" y="3" z="15" />
                      <BlockOrientation Forward="Backward" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyTimerComponent</TypeId>
                            <Component xsi:type="MyObjectBuilder_TimerComponent">
                              <Repeat>true</Repeat>
                              <TimeToEvent>0</TimeToEvent>
                              <SetTimeMinutes>0</SetTimeMinutes>
                              <TimerEnabled>true</TimerEnabled>
                              <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                              <TimerType>Frame100</TimerType>
                              <FramesFromLastTrigger>0</FramesFromLastTrigger>
                              <TimerTickInFrames>100</TimerTickInFrames>
                              <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle Atmo Thruster Sb 37</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>38</NumberInGrid>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
                      <EntityId>132142723777369909</EntityId>
                      <Name>132142723777369909</Name>
                      <Min x="-4" y="3" z="15" />
                      <BlockOrientation Forward="Backward" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyTimerComponent</TypeId>
                            <Component xsi:type="MyObjectBuilder_TimerComponent">
                              <Repeat>true</Repeat>
                              <TimeToEvent>0</TimeToEvent>
                              <SetTimeMinutes>0</SetTimeMinutes>
                              <TimerEnabled>true</TimerEnabled>
                              <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                              <TimerType>Frame100</TimerType>
                              <FramesFromLastTrigger>0</FramesFromLastTrigger>
                              <TimerTickInFrames>100</TimerTickInFrames>
                              <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle Atmo Thruster Po 38</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>39</NumberInGrid>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
                      <EntityId>113969108132633657</EntityId>
                      <Name>113969108132633657</Name>
                      <Min x="4" y="3" z="15" />
                      <BlockOrientation Forward="Backward" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyTimerComponent</TypeId>
                            <Component xsi:type="MyObjectBuilder_TimerComponent">
                              <Repeat>true</Repeat>
                              <TimeToEvent>0</TimeToEvent>
                              <SetTimeMinutes>0</SetTimeMinutes>
                              <TimerEnabled>true</TimerEnabled>
                              <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                              <TimerType>Frame100</TimerType>
                              <FramesFromLastTrigger>0</FramesFromLastTrigger>
                              <TimerTickInFrames>100</TimerTickInFrames>
                              <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle Atmo Thruster Sb 39</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>40</NumberInGrid>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
                      <EntityId>103339561371286921</EntityId>
                      <Name>103339561371286921</Name>
                      <Min x="4" y="3" z="3" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyTimerComponent</TypeId>
                            <Component xsi:type="MyObjectBuilder_TimerComponent">
                              <Repeat>true</Repeat>
                              <TimeToEvent>0</TimeToEvent>
                              <SetTimeMinutes>0</SetTimeMinutes>
                              <TimerEnabled>true</TimerEnabled>
                              <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                              <TimerType>Frame100</TimerType>
                              <FramesFromLastTrigger>0</FramesFromLastTrigger>
                              <TimerTickInFrames>100</TimerTickInFrames>
                              <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle Atmo Thruster Sb 07</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>49</NumberInGrid>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
                      <EntityId>106775839188026562</EntityId>
                      <Name>106775839188026562</Name>
                      <Min x="-4" y="3" z="3" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyTimerComponent</TypeId>
                            <Component xsi:type="MyObjectBuilder_TimerComponent">
                              <Repeat>true</Repeat>
                              <TimeToEvent>0</TimeToEvent>
                              <SetTimeMinutes>0</SetTimeMinutes>
                              <TimerEnabled>true</TimerEnabled>
                              <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                              <TimerType>Frame100</TimerType>
                              <FramesFromLastTrigger>0</FramesFromLastTrigger>
                              <TimerTickInFrames>100</TimerTickInFrames>
                              <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle Atmo Thruster Po 06</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>50</NumberInGrid>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
                      <EntityId>131574595830421627</EntityId>
                      <Name>131574595830421627</Name>
                      <Min x="3" y="3" z="3" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyTimerComponent</TypeId>
                            <Component xsi:type="MyObjectBuilder_TimerComponent">
                              <Repeat>true</Repeat>
                              <TimeToEvent>0</TimeToEvent>
                              <SetTimeMinutes>0</SetTimeMinutes>
                              <TimerEnabled>true</TimerEnabled>
                              <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                              <TimerType>Frame100</TimerType>
                              <FramesFromLastTrigger>0</FramesFromLastTrigger>
                              <TimerTickInFrames>100</TimerTickInFrames>
                              <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle Atmo Thruster Sb 09</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>47</NumberInGrid>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
                      <EntityId>144079818795306475</EntityId>
                      <Name>144079818795306475</Name>
                      <Min x="-3" y="3" z="3" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyTimerComponent</TypeId>
                            <Component xsi:type="MyObjectBuilder_TimerComponent">
                              <Repeat>true</Repeat>
                              <TimeToEvent>0</TimeToEvent>
                              <SetTimeMinutes>0</SetTimeMinutes>
                              <TimerEnabled>true</TimerEnabled>
                              <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                              <TimerType>Frame100</TimerType>
                              <FramesFromLastTrigger>0</FramesFromLastTrigger>
                              <TimerTickInFrames>100</TimerTickInFrames>
                              <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle Atmo Thruster Po 11</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>48</NumberInGrid>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="0" y="4" z="12" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="0" y="4" z="13" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="0" y="4" z="14" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="0" y="4" z="15" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope</SubtypeName>
                      <Min x="0" y="4" z="17" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="0" y="4" z="16" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
                      <Min x="-5" y="1" z="1" />
                      <BlockOrientation Forward="Right" Up="Forward" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
                      <Min x="5" y="1" z="1" />
                      <BlockOrientation Forward="Left" Up="Forward" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>HalfArmorBlock</SubtypeName>
                      <Min x="-6" y="1" z="2" />
                      <BlockOrientation Forward="Right" Up="Down" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>HalfArmorBlock</SubtypeName>
                      <Min x="-6" y="1" z="3" />
                      <BlockOrientation Forward="Right" Up="Down" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>HalfArmorBlock</SubtypeName>
                      <Min x="-6" y="1" z="4" />
                      <BlockOrientation Forward="Right" Up="Down" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>HalfArmorBlock</SubtypeName>
                      <Min x="-6" y="1" z="5" />
                      <BlockOrientation Forward="Right" Up="Down" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>HalfArmorBlock</SubtypeName>
                      <Min x="-6" y="1" z="6" />
                      <BlockOrientation Forward="Right" Up="Down" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>HalfArmorBlock</SubtypeName>
                      <Min x="-6" y="1" z="7" />
                      <BlockOrientation Forward="Right" Up="Down" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>HalfArmorBlock</SubtypeName>
                      <Min x="6" y="1" z="2" />
                      <BlockOrientation Forward="Left" Up="Up" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>HalfArmorBlock</SubtypeName>
                      <Min x="6" y="1" z="3" />
                      <BlockOrientation Forward="Left" Up="Up" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>HalfArmorBlock</SubtypeName>
                      <Min x="6" y="1" z="4" />
                      <BlockOrientation Forward="Left" Up="Up" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>HalfArmorBlock</SubtypeName>
                      <Min x="6" y="1" z="5" />
                      <BlockOrientation Forward="Left" Up="Up" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>HalfArmorBlock</SubtypeName>
                      <Min x="6" y="1" z="6" />
                      <BlockOrientation Forward="Left" Up="Up" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>HalfArmorBlock</SubtypeName>
                      <Min x="6" y="1" z="7" />
                      <BlockOrientation Forward="Left" Up="Up" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>HalfArmorBlock</SubtypeName>
                      <Min x="-6" y="1" z="11" />
                      <BlockOrientation Forward="Right" Up="Down" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>HalfArmorBlock</SubtypeName>
                      <Min x="-6" y="1" z="12" />
                      <BlockOrientation Forward="Right" Up="Down" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>HalfArmorBlock</SubtypeName>
                      <Min x="-6" y="1" z="13" />
                      <BlockOrientation Forward="Right" Up="Down" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>HalfArmorBlock</SubtypeName>
                      <Min x="-6" y="1" z="14" />
                      <BlockOrientation Forward="Right" Up="Down" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>HalfArmorBlock</SubtypeName>
                      <Min x="-6" y="1" z="15" />
                      <BlockOrientation Forward="Right" Up="Down" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>HalfArmorBlock</SubtypeName>
                      <Min x="-6" y="1" z="16" />
                      <BlockOrientation Forward="Right" Up="Down" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>HalfArmorBlock</SubtypeName>
                      <Min x="6" y="1" z="11" />
                      <BlockOrientation Forward="Left" Up="Up" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>HalfArmorBlock</SubtypeName>
                      <Min x="6" y="1" z="12" />
                      <BlockOrientation Forward="Left" Up="Up" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>HalfArmorBlock</SubtypeName>
                      <Min x="6" y="1" z="13" />
                      <BlockOrientation Forward="Left" Up="Up" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>HalfArmorBlock</SubtypeName>
                      <Min x="6" y="1" z="14" />
                      <BlockOrientation Forward="Left" Up="Up" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>HalfArmorBlock</SubtypeName>
                      <Min x="6" y="1" z="15" />
                      <BlockOrientation Forward="Left" Up="Up" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>HalfArmorBlock</SubtypeName>
                      <Min x="6" y="1" z="16" />
                      <BlockOrientation Forward="Left" Up="Up" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
                      <Min x="-5" y="1" z="17" />
                      <BlockOrientation Forward="Right" Up="Backward" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
                      <Min x="5" y="1" z="17" />
                      <BlockOrientation Forward="Left" Up="Backward" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>HalfSlopeArmorBlock</SubtypeName>
                      <Min x="-6" y="1" z="17" />
                      <BlockOrientation Forward="Right" Up="Backward" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>HalfSlopeArmorBlock</SubtypeName>
                      <Min x="6" y="1" z="17" />
                      <BlockOrientation Forward="Left" Up="Backward" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>HalfSlopeArmorBlock</SubtypeName>
                      <Min x="-6" y="1" z="1" />
                      <BlockOrientation Forward="Backward" Up="Left" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>HalfSlopeArmorBlock</SubtypeName>
                      <Min x="6" y="1" z="1" />
                      <BlockOrientation Forward="Backward" Up="Right" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
                      <Min x="0" y="4" z="8" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Gyro">
                      <SubtypeName>SmallBlockGyro</SubtypeName>
                      <EntityId>124192258193292712</EntityId>
                      <Name>124192258193292712</Name>
                      <Min x="1" y="1" z="7" />
                      <BlockOrientation Forward="Forward" Up="Right" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <CustomName>Cle Gyroscope Sb 2</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>7</NumberInGrid>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Gyro">
                      <SubtypeName>SmallBlockGyro</SubtypeName>
                      <EntityId>140305460122924200</EntityId>
                      <Name>140305460122924200</Name>
                      <Min x="-1" y="1" z="7" />
                      <BlockOrientation Forward="Forward" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <CustomName>Cle Gyroscope Po 3</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>8</NumberInGrid>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockLargeFlatAtmosphericThrust</SubtypeName>
                      <EntityId>124341524578349984</EntityId>
                      <Name>124341524578349984</Name>
                      <Min x="2" y="-2" z="3" />
                      <BlockOrientation Forward="Down" Up="Forward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyTimerComponent</TypeId>
                            <Component xsi:type="MyObjectBuilder_TimerComponent">
                              <Repeat>true</Repeat>
                              <TimeToEvent>0</TimeToEvent>
                              <SetTimeMinutes>0</SetTimeMinutes>
                              <TimerEnabled>true</TimerEnabled>
                              <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                              <TimerType>Frame100</TimerType>
                              <FramesFromLastTrigger>0</FramesFromLastTrigger>
                              <TimerTickInFrames>100</TimerTickInFrames>
                              <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle Large Flat Atmo Thruster Sb 03</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>5</NumberInGrid>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockLargeFlatAtmosphericThrust</SubtypeName>
                      <EntityId>134681970925632489</EntityId>
                      <Name>134681970925632489</Name>
                      <Min x="-4" y="-2" z="3" />
                      <BlockOrientation Forward="Down" Up="Forward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyTimerComponent</TypeId>
                            <Component xsi:type="MyObjectBuilder_TimerComponent">
                              <Repeat>true</Repeat>
                              <TimeToEvent>0</TimeToEvent>
                              <SetTimeMinutes>0</SetTimeMinutes>
                              <TimerEnabled>true</TimerEnabled>
                              <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                              <TimerType>Frame100</TimerType>
                              <FramesFromLastTrigger>0</FramesFromLastTrigger>
                              <TimerTickInFrames>100</TimerTickInFrames>
                              <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle Large Flat Atmo Thruster Po 04</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>6</NumberInGrid>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockLargeFlatAtmosphericThrust</SubtypeName>
                      <EntityId>123025326991511172</EntityId>
                      <Name>123025326991511172</Name>
                      <Min x="2" y="-2" z="13" />
                      <BlockOrientation Forward="Down" Up="Forward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyTimerComponent</TypeId>
                            <Component xsi:type="MyObjectBuilder_TimerComponent">
                              <Repeat>true</Repeat>
                              <TimeToEvent>0</TimeToEvent>
                              <SetTimeMinutes>0</SetTimeMinutes>
                              <TimerEnabled>true</TimerEnabled>
                              <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                              <TimerType>Frame100</TimerType>
                              <FramesFromLastTrigger>0</FramesFromLastTrigger>
                              <TimerTickInFrames>100</TimerTickInFrames>
                              <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle Large Flat Atmo Thruster Sb 07</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>9</NumberInGrid>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockLargeFlatAtmosphericThrust</SubtypeName>
                      <EntityId>124478759484841310</EntityId>
                      <Name>124478759484841310</Name>
                      <Min x="-4" y="-2" z="13" />
                      <BlockOrientation Forward="Down" Up="Forward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyTimerComponent</TypeId>
                            <Component xsi:type="MyObjectBuilder_TimerComponent">
                              <Repeat>true</Repeat>
                              <TimeToEvent>0</TimeToEvent>
                              <SetTimeMinutes>0</SetTimeMinutes>
                              <TimerEnabled>true</TimerEnabled>
                              <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                              <TimerType>Frame100</TimerType>
                              <FramesFromLastTrigger>0</FramesFromLastTrigger>
                              <TimerTickInFrames>100</TimerTickInFrames>
                              <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle Large Flat Atmo Thruster Po 08</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>10</NumberInGrid>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_LandingGear">
                      <SubtypeName>SmallBlockLandingGear</SubtypeName>
                      <EntityId>135614370319349723</EntityId>
                      <Name>135614370319349723</Name>
                      <Min x="3" y="-2" z="9" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <CustomName>Cle Landing Gear Sb 1</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>3</NumberInGrid>
                      <Enabled>true</Enabled>
                      <IsLocked>false</IsLocked>
                      <BrakeForce>-INF</BrakeForce>
                      <AutoLock>true</AutoLock>
                      <FirstLockAttempt>false</FirstLockAttempt>
                      <LockSound>ArcShipLandGearOn</LockSound>
                      <UnlockSound>ArcShipLandGearOff</UnlockSound>
                      <FailedAttachSound>ArcShipLandGearNothing01</FailedAttachSound>
                      <AttachedEntityId xsi:nil="true" />
                      <MasterToSlave xsi:nil="true" />
                      <GearPivotPosition xsi:nil="true" />
                      <OtherPivot xsi:nil="true" />
                      <LockMode>Unlocked</LockMode>
                      <IsParkingEnabled>true</IsParkingEnabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_LandingGear">
                      <SubtypeName>SmallBlockLandingGear</SubtypeName>
                      <EntityId>110548804129742916</EntityId>
                      <Name>110548804129742916</Name>
                      <Min x="-3" y="-2" z="9" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <CustomName>Cle Landing Gear Po 2</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>4</NumberInGrid>
                      <Enabled>true</Enabled>
                      <IsLocked>false</IsLocked>
                      <BrakeForce>-INF</BrakeForce>
                      <AutoLock>true</AutoLock>
                      <FirstLockAttempt>false</FirstLockAttempt>
                      <LockSound>ArcShipLandGearOn</LockSound>
                      <UnlockSound>ArcShipLandGearOff</UnlockSound>
                      <FailedAttachSound>ArcShipLandGearNothing01</FailedAttachSound>
                      <AttachedEntityId xsi:nil="true" />
                      <MasterToSlave xsi:nil="true" />
                      <GearPivotPosition xsi:nil="true" />
                      <OtherPivot xsi:nil="true" />
                      <LockMode>Unlocked</LockMode>
                      <IsParkingEnabled>true</IsParkingEnabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorHalfSlopeInverted</SubtypeName>
                      <Min x="-3" y="3" z="7" />
                      <BlockOrientation Forward="Backward" Up="Up" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorHalfSlopeInverted</SubtypeName>
                      <Min x="3" y="3" z="7" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>HalfArmorBlock</SubtypeName>
                      <Min x="4" y="3" z="7" />
                      <BlockOrientation Forward="Down" Up="Forward" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>HalfArmorBlock</SubtypeName>
                      <Min x="-4" y="3" z="7" />
                      <BlockOrientation Forward="Down" Up="Forward" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>HalfArmorBlock</SubtypeName>
                      <Min x="5" y="3" z="7" />
                      <BlockOrientation Forward="Down" Up="Forward" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>HalfArmorBlock</SubtypeName>
                      <Min x="-5" y="3" z="7" />
                      <BlockOrientation Forward="Down" Up="Forward" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>HalfArmorBlock</SubtypeName>
                      <Min x="6" y="2" z="7" />
                      <BlockOrientation Forward="Left" Up="Up" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>HalfArmorBlock</SubtypeName>
                      <Min x="-6" y="2" z="7" />
                      <BlockOrientation Forward="Right" Up="Down" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>HalfSlopeArmorBlock</SubtypeName>
                      <Min x="6" y="3" z="7" />
                      <BlockOrientation Forward="Left" Up="Up" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>HalfSlopeArmorBlock</SubtypeName>
                      <Min x="-6" y="3" z="7" />
                      <BlockOrientation Forward="Right" Up="Up" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>HalfSlopeArmorBlock</SubtypeName>
                      <Min x="3" y="4" z="7" />
                      <BlockOrientation Forward="Left" Up="Up" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>HalfSlopeArmorBlock</SubtypeName>
                      <Min x="-3" y="4" z="7" />
                      <BlockOrientation Forward="Right" Up="Up" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CameraBlock">
                      <SubtypeName>SmallCameraTopMounted</SubtypeName>
                      <EntityId>143799364166535894</EntityId>
                      <Name>143799364166535894</Name>
                      <Min x="0" y="4" z="3" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <CustomName>Cle Top Mounted Camera 1</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>1</NumberInGrid>
                      <Enabled>true</Enabled>
                      <IsActive>false</IsActive>
                      <Fov>1</Fov>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CameraBlock">
                      <SubtypeName>SmallCameraTopMounted</SubtypeName>
                      <EntityId>94585015732867069</EntityId>
                      <Name>94585015732867069</Name>
                      <Min x="5" y="3" z="9" />
                      <BlockOrientation Forward="Right" Up="Up" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <CustomName>Cle Top Mounted Camera Sb 2</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>2</NumberInGrid>
                      <Enabled>true</Enabled>
                      <IsActive>false</IsActive>
                      <Fov>1</Fov>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CameraBlock">
                      <SubtypeName>SmallCameraTopMounted</SubtypeName>
                      <EntityId>95909483693160257</EntityId>
                      <Name>95909483693160257</Name>
                      <Min x="-5" y="3" z="9" />
                      <BlockOrientation Forward="Left" Up="Up" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <CustomName>Cle Top Mounted Camera Po 3</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>3</NumberInGrid>
                      <Enabled>true</Enabled>
                      <IsActive>false</IsActive>
                      <Fov>1</Fov>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ReflectorLight">
                      <SubtypeName>SmallBlockFrontLight</SubtypeName>
                      <EntityId>123142633035779244</EntityId>
                      <Name>123142633035779244</Name>
                      <Min x="1" y="-1" z="7" />
                      <BlockOrientation Forward="Down" Up="Forward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <CustomName>Cle Spotlight Sb 3</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>3</NumberInGrid>
                      <Enabled>false</Enabled>
                      <Radius>10</Radius>
                      <ReflectorRadius>120</ReflectorRadius>
                      <Falloff>1.5</Falloff>
                      <Intensity>3</Intensity>
                      <BlinkIntervalSeconds>0</BlinkIntervalSeconds>
                      <BlinkLenght>10</BlinkLenght>
                      <BlinkOffset>0</BlinkOffset>
                      <Offset>0.5</Offset>
                      <RotationSpeed>0.08</RotationSpeed>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_InteriorLight">
                      <SubtypeName>SmallBlockSmallLight</SubtypeName>
                      <EntityId>121655648669270356</EntityId>
                      <Name>121655648669270356</Name>
                      <Min x="5" y="-1" z="9" />
                      <BlockOrientation Forward="Down" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <CustomName>Cle Interior Light Sb 1</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>1</NumberInGrid>
                      <Enabled>true</Enabled>
                      <Radius>3.6</Radius>
                      <ReflectorRadius>120</ReflectorRadius>
                      <Falloff>1.3</Falloff>
                      <Intensity>5</Intensity>
                      <BlinkIntervalSeconds>0</BlinkIntervalSeconds>
                      <BlinkLenght>10</BlinkLenght>
                      <BlinkOffset>0</BlinkOffset>
                      <Offset>0.5</Offset>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_InteriorLight">
                      <SubtypeName>SmallBlockSmallLight</SubtypeName>
                      <EntityId>96486502550455225</EntityId>
                      <Name>96486502550455225</Name>
                      <Min x="-5" y="-1" z="9" />
                      <BlockOrientation Forward="Down" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <CustomName>Cle Interior Light Po 2</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>2</NumberInGrid>
                      <Enabled>true</Enabled>
                      <Radius>3.6</Radius>
                      <ReflectorRadius>120</ReflectorRadius>
                      <Falloff>1.3</Falloff>
                      <Intensity>5</Intensity>
                      <BlinkIntervalSeconds>0</BlinkIntervalSeconds>
                      <BlinkLenght>10</BlinkLenght>
                      <BlinkOffset>0</BlinkOffset>
                      <Offset>0.5</Offset>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_TextPanel">
                      <SubtypeName>SmallTextPanel</SubtypeName>
                      <EntityId>72539864472998671</EntityId>
                      <Name>72539864472998671</Name>
                      <Min x="-4" y="4" z="9" />
                      <BlockOrientation Forward="Right" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyLcdSurfaceComponent</TypeId>
                            <Component xsi:type="MyObjectBuilder_LcdSurfaceComponent">
                              <SelectedRotationIndex>0</SelectedRotationIndex>
                              <TextPanelContent>
                                <ChangeInterval>0</ChangeInterval>
                                <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
                                <FontSize>1</FontSize>
                                <ShowText>NONE</ShowText>
                                <FontColor>
                                  <PackedValue>4294967295</PackedValue>
                                  <X>255</X>
                                  <Y>255</Y>
                                  <Z>255</Z>
                                  <R>255</R>
                                  <G>255</G>
                                  <B>255</B>
                                  <A>255</A>
                                </FontColor>
                                <BackgroundColor>
                                  <PackedValue>4278190080</PackedValue>
                                  <X>0</X>
                                  <Y>0</Y>
                                  <Z>0</Z>
                                  <R>0</R>
                                  <G>0</G>
                                  <B>0</B>
                                  <A>255</A>
                                </BackgroundColor>
                                <CurrentShownTexture>0</CurrentShownTexture>
                                <ContentType>SCRIPT</ContentType>
                                <SelectedScript>TSS_FactionIcon</SelectedScript>
                                <TextPadding>2</TextPadding>
                                <CustomizeScripts>true</CustomizeScripts>
                                <ScriptBackgroundColor>
                                  <PackedValue>4288108544</PackedValue>
                                  <X>0</X>
                                  <Y>88</Y>
                                  <Z>151</Z>
                                  <R>0</R>
                                  <G>88</G>
                                  <B>151</B>
                                  <A>255</A>
                                </ScriptBackgroundColor>
                                <ScriptForegroundColor>
                                  <PackedValue>4294962611</PackedValue>
                                  <X>179</X>
                                  <Y>237</Y>
                                  <Z>255</Z>
                                  <R>179</R>
                                  <G>237</G>
                                  <B>255</B>
                                  <A>255</A>
                                </ScriptForegroundColor>
                                <Sprites>
                                  <Length>0</Length>
                                </Sprites>
                              </TextPanelContent>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle Text Panel Po 1</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>1</NumberInGrid>
                      <Enabled>true</Enabled>
                      <Description />
                      <Title>Title</Title>
                      <AccessFlag>READ_AND_WRITE_FACTION</AccessFlag>
                      <ChangeInterval>0</ChangeInterval>
                      <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
                      <FontSize>1</FontSize>
                      <PublicDescription />
                      <PublicTitle>Public title</PublicTitle>
                      <ShowText>NONE</ShowText>
                      <FontColor>
                        <PackedValue>4294967295</PackedValue>
                        <X>255</X>
                        <Y>255</Y>
                        <Z>255</Z>
                        <R>255</R>
                        <G>255</G>
                        <B>255</B>
                        <A>255</A>
                      </FontColor>
                      <BackgroundColor>
                        <PackedValue>4278190080</PackedValue>
                        <X>0</X>
                        <Y>0</Y>
                        <Z>0</Z>
                        <R>0</R>
                        <G>0</G>
                        <B>0</B>
                        <A>255</A>
                      </BackgroundColor>
                      <CurrentShownTexture>0</CurrentShownTexture>
                      <TextPadding>2</TextPadding>
                      <Version>0</Version>
                      <ScriptBackgroundColor>
                        <PackedValue>4288108544</PackedValue>
                        <X>0</X>
                        <Y>88</Y>
                        <Z>151</Z>
                        <R>0</R>
                        <G>88</G>
                        <B>151</B>
                        <A>255</A>
                      </ScriptBackgroundColor>
                      <ScriptForegroundColor>
                        <PackedValue>4294962611</PackedValue>
                        <X>179</X>
                        <Y>237</Y>
                        <Z>255</Z>
                        <R>179</R>
                        <G>237</G>
                        <B>255</B>
                        <A>255</A>
                      </ScriptForegroundColor>
                      <Sprites>
                        <Length>0</Length>
                      </Sprites>
                      <SelectedRotationIndex xsi:nil="true" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_TextPanel">
                      <SubtypeName>SmallTextPanel</SubtypeName>
                      <EntityId>143125713356544629</EntityId>
                      <Name>143125713356544629</Name>
                      <Min x="4" y="4" z="9" />
                      <BlockOrientation Forward="Left" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyLcdSurfaceComponent</TypeId>
                            <Component xsi:type="MyObjectBuilder_LcdSurfaceComponent">
                              <SelectedRotationIndex>0</SelectedRotationIndex>
                              <TextPanelContent>
                                <ChangeInterval>0</ChangeInterval>
                                <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
                                <FontSize>1</FontSize>
                                <ShowText>NONE</ShowText>
                                <FontColor>
                                  <PackedValue>4294967295</PackedValue>
                                  <X>255</X>
                                  <Y>255</Y>
                                  <Z>255</Z>
                                  <R>255</R>
                                  <G>255</G>
                                  <B>255</B>
                                  <A>255</A>
                                </FontColor>
                                <BackgroundColor>
                                  <PackedValue>4278190080</PackedValue>
                                  <X>0</X>
                                  <Y>0</Y>
                                  <Z>0</Z>
                                  <R>0</R>
                                  <G>0</G>
                                  <B>0</B>
                                  <A>255</A>
                                </BackgroundColor>
                                <CurrentShownTexture>0</CurrentShownTexture>
                                <ContentType>SCRIPT</ContentType>
                                <SelectedScript>TSS_FactionIcon</SelectedScript>
                                <TextPadding>2</TextPadding>
                                <CustomizeScripts>true</CustomizeScripts>
                                <ScriptBackgroundColor>
                                  <PackedValue>4288108544</PackedValue>
                                  <X>0</X>
                                  <Y>88</Y>
                                  <Z>151</Z>
                                  <R>0</R>
                                  <G>88</G>
                                  <B>151</B>
                                  <A>255</A>
                                </ScriptBackgroundColor>
                                <ScriptForegroundColor>
                                  <PackedValue>4294962611</PackedValue>
                                  <X>179</X>
                                  <Y>237</Y>
                                  <Z>255</Z>
                                  <R>179</R>
                                  <G>237</G>
                                  <B>255</B>
                                  <A>255</A>
                                </ScriptForegroundColor>
                                <Sprites>
                                  <Length>0</Length>
                                </Sprites>
                              </TextPanelContent>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle Text Panel Sb 2</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>2</NumberInGrid>
                      <Enabled>true</Enabled>
                      <Description />
                      <Title>Title</Title>
                      <AccessFlag>READ_AND_WRITE_FACTION</AccessFlag>
                      <ChangeInterval>0</ChangeInterval>
                      <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
                      <FontSize>1</FontSize>
                      <PublicDescription />
                      <PublicTitle>Public title</PublicTitle>
                      <ShowText>NONE</ShowText>
                      <FontColor>
                        <PackedValue>4294967295</PackedValue>
                        <X>255</X>
                        <Y>255</Y>
                        <Z>255</Z>
                        <R>255</R>
                        <G>255</G>
                        <B>255</B>
                        <A>255</A>
                      </FontColor>
                      <BackgroundColor>
                        <PackedValue>4278190080</PackedValue>
                        <X>0</X>
                        <Y>0</Y>
                        <Z>0</Z>
                        <R>0</R>
                        <G>0</G>
                        <B>0</B>
                        <A>255</A>
                      </BackgroundColor>
                      <CurrentShownTexture>0</CurrentShownTexture>
                      <TextPadding>2</TextPadding>
                      <Version>0</Version>
                      <ScriptBackgroundColor>
                        <PackedValue>4288108544</PackedValue>
                        <X>0</X>
                        <Y>88</Y>
                        <Z>151</Z>
                        <R>0</R>
                        <G>88</G>
                        <B>151</B>
                        <A>255</A>
                      </ScriptBackgroundColor>
                      <ScriptForegroundColor>
                        <PackedValue>4294962611</PackedValue>
                        <X>179</X>
                        <Y>237</Y>
                        <Z>255</Z>
                        <R>179</R>
                        <G>237</G>
                        <B>255</B>
                        <A>255</A>
                      </ScriptForegroundColor>
                      <Sprites>
                        <Length>0</Length>
                      </Sprites>
                      <SelectedRotationIndex xsi:nil="true" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorSorter">
                      <SubtypeName>SmallBlockConveyorSorter</SubtypeName>
                      <EntityId>108742995217626457</EntityId>
                      <Name>108742995217626457</Name>
                      <Min x="-1" y="0" z="3" />
                      <BlockOrientation Forward="Down" Up="Backward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <CustomName>Cle Small Conveyor Sorter</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>1</NumberInGrid>
                      <Enabled>true</Enabled>
                      <IsWhiteList>false</IsWhiteList>
                      <DefinitionIds />
                      <DefinitionTypes />
                      <DrainAll>false</DrainAll>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ShipConnector">
                      <SubtypeName>ConnectorSmall</SubtypeName>
                      <EntityId>126617119362655622</EntityId>
                      <Name>126617119362655622</Name>
                      <Min x="-1" y="-1" z="3" />
                      <BlockOrientation Forward="Down" Up="Forward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <DeformationRatio>0.5</DeformationRatio>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyTimerComponent</TypeId>
                            <Component xsi:type="MyObjectBuilder_TimerComponent">
                              <Repeat>true</Repeat>
                              <TimeToEvent>0</TimeToEvent>
                              <SetTimeMinutes>0</SetTimeMinutes>
                              <TimerEnabled>true</TimerEnabled>
                              <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                              <TimerType>Frame10</TimerType>
                              <FramesFromLastTrigger>10</FramesFromLastTrigger>
                              <TimerTickInFrames>80</TimerTickInFrames>
                              <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cle Small Connector</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>1</NumberInGrid>
                      <Enabled>true</Enabled>
                      <MasterToSlaveTransform xsi:nil="true" />
                      <Strength>1E-06</Strength>
                      <MasterToSlaveGrid xsi:nil="true" />
                      <IsMaster>true</IsMaster>
                      <TradingEnabled>false</TradingEnabled>
                      <AutoUnlockTime>0</AutoUnlockTime>
                      <TimeOfConnection>0</TimeOfConnection>
                      <IsParkingEnabled>true</IsParkingEnabled>
                      <IsPowerTransferOverrideEnabled>false</IsPowerTransferOverrideEnabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
                      <SubtypeName>SmallBlockSmallBatteryBlock</SubtypeName>
                      <EntityId>143938741146390902</EntityId>
                      <Name>143938741146390902</Name>
                      <Min x="3" y="3" z="6" />
                      <BlockOrientation Forward="Forward" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <CustomName>Cle Small Battery Sb 01</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>1</NumberInGrid>
                      <Enabled>true</Enabled>
                      <CurrentStoredPower>0</CurrentStoredPower>
                      <ProducerEnabled>true</ProducerEnabled>
                      <MaxStoredPower>0</MaxStoredPower>
                      <SemiautoEnabled>false</SemiautoEnabled>
                      <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
                      <ChargeMode>0</ChargeMode>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
                      <SubtypeName>SmallBlockSmallBatteryBlock</SubtypeName>
                      <EntityId>137000655557870079</EntityId>
                      <Name>137000655557870079</Name>
                      <Min x="-3" y="3" z="6" />
                      <BlockOrientation Forward="Forward" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <CustomName>Cle Small Battery Po 02</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>2</NumberInGrid>
                      <Enabled>true</Enabled>
                      <CurrentStoredPower>0</CurrentStoredPower>
                      <ProducerEnabled>true</ProducerEnabled>
                      <MaxStoredPower>0</MaxStoredPower>
                      <SemiautoEnabled>false</SemiautoEnabled>
                      <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
                      <ChargeMode>0</ChargeMode>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
                      <SubtypeName>SmallBlockSmallBatteryBlock</SubtypeName>
                      <EntityId>76213777001128903</EntityId>
                      <Name>76213777001128903</Name>
                      <Min x="4" y="3" z="10" />
                      <BlockOrientation Forward="Forward" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <CustomName>Cle Small Battery Sb 03</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>3</NumberInGrid>
                      <Enabled>true</Enabled>
                      <CurrentStoredPower>0</CurrentStoredPower>
                      <ProducerEnabled>true</ProducerEnabled>
                      <MaxStoredPower>0</MaxStoredPower>
                      <SemiautoEnabled>false</SemiautoEnabled>
                      <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
                      <ChargeMode>0</ChargeMode>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
                      <SubtypeName>SmallBlockSmallBatteryBlock</SubtypeName>
                      <EntityId>107976021047700560</EntityId>
                      <Name>107976021047700560</Name>
                      <Min x="-4" y="3" z="10" />
                      <BlockOrientation Forward="Forward" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <CustomName>Cle Small Battery Po 04</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>4</NumberInGrid>
                      <Enabled>true</Enabled>
                      <CurrentStoredPower>0</CurrentStoredPower>
                      <ProducerEnabled>true</ProducerEnabled>
                      <MaxStoredPower>0</MaxStoredPower>
                      <SemiautoEnabled>false</SemiautoEnabled>
                      <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
                      <ChargeMode>0</ChargeMode>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
                      <SubtypeName>SmallBlockSmallBatteryBlock</SubtypeName>
                      <EntityId>142492349740675992</EntityId>
                      <Name>142492349740675992</Name>
                      <Min x="4" y="3" z="13" />
                      <BlockOrientation Forward="Forward" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <CustomName>Cle Small Battery Sb 05</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>5</NumberInGrid>
                      <Enabled>true</Enabled>
                      <CurrentStoredPower>0</CurrentStoredPower>
                      <ProducerEnabled>true</ProducerEnabled>
                      <MaxStoredPower>0</MaxStoredPower>
                      <SemiautoEnabled>false</SemiautoEnabled>
                      <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
                      <ChargeMode>0</ChargeMode>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
                      <SubtypeName>SmallBlockSmallBatteryBlock</SubtypeName>
                      <EntityId>120667893964875061</EntityId>
                      <Name>120667893964875061</Name>
                      <Min x="-4" y="3" z="13" />
                      <BlockOrientation Forward="Forward" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <CustomName>Cle Small Battery Po 06</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>6</NumberInGrid>
                      <Enabled>true</Enabled>
                      <CurrentStoredPower>0</CurrentStoredPower>
                      <ProducerEnabled>true</ProducerEnabled>
                      <MaxStoredPower>0</MaxStoredPower>
                      <SemiautoEnabled>false</SemiautoEnabled>
                      <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
                      <ChargeMode>0</ChargeMode>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
                      <SubtypeName>SmallBlockSmallBatteryBlock</SubtypeName>
                      <EntityId>133982853261155134</EntityId>
                      <Name>133982853261155134</Name>
                      <Min x="4" y="3" z="14" />
                      <BlockOrientation Forward="Forward" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <CustomName>Cle Small Battery Sb 07</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>7</NumberInGrid>
                      <Enabled>true</Enabled>
                      <CurrentStoredPower>0</CurrentStoredPower>
                      <ProducerEnabled>true</ProducerEnabled>
                      <MaxStoredPower>0</MaxStoredPower>
                      <SemiautoEnabled>false</SemiautoEnabled>
                      <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
                      <ChargeMode>0</ChargeMode>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
                      <SubtypeName>SmallBlockSmallBatteryBlock</SubtypeName>
                      <EntityId>143980569195100291</EntityId>
                      <Name>143980569195100291</Name>
                      <Min x="-4" y="3" z="14" />
                      <BlockOrientation Forward="Forward" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <CustomName>Cle Small Battery Po 08</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>8</NumberInGrid>
                      <Enabled>true</Enabled>
                      <CurrentStoredPower>0</CurrentStoredPower>
                      <ProducerEnabled>true</ProducerEnabled>
                      <MaxStoredPower>0</MaxStoredPower>
                      <SemiautoEnabled>false</SemiautoEnabled>
                      <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
                      <ChargeMode>0</ChargeMode>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
                      <SubtypeName>SmallBlockSmallBatteryBlock</SubtypeName>
                      <EntityId>86524110841570626</EntityId>
                      <Name>86524110841570626</Name>
                      <Min x="3" y="3" z="14" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <CustomName>Cle Small Battery Sb 09</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>9</NumberInGrid>
                      <Enabled>true</Enabled>
                      <CurrentStoredPower>0</CurrentStoredPower>
                      <ProducerEnabled>true</ProducerEnabled>
                      <MaxStoredPower>0</MaxStoredPower>
                      <SemiautoEnabled>false</SemiautoEnabled>
                      <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
                      <ChargeMode>0</ChargeMode>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
                      <SubtypeName>SmallBlockSmallBatteryBlock</SubtypeName>
                      <EntityId>138382552980990376</EntityId>
                      <Name>138382552980990376</Name>
                      <Min x="-3" y="3" z="14" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                      <CustomName>Cle Small Battery Po 10</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <NumberInGrid>10</NumberInGrid>
                      <Enabled>true</Enabled>
                      <CurrentStoredPower>0</CurrentStoredPower>
                      <ProducerEnabled>true</ProducerEnabled>
                      <MaxStoredPower>0</MaxStoredPower>
                      <SemiautoEnabled>false</SemiautoEnabled>
                      <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
                      <ChargeMode>0</ChargeMode>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>HalfArmorBlock</SubtypeName>
                      <Min x="6" y="2" z="14" />
                      <BlockOrientation Forward="Left" Up="Up" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>HalfArmorBlock</SubtypeName>
                      <Min x="-6" y="2" z="14" />
                      <BlockOrientation Forward="Right" Up="Down" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>HalfArmorBlock</SubtypeName>
                      <Min x="5" y="3" z="14" />
                      <BlockOrientation Forward="Down" Up="Forward" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>HalfArmorBlock</SubtypeName>
                      <Min x="-5" y="3" z="14" />
                      <BlockOrientation Forward="Down" Up="Forward" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>HalfSlopeArmorBlock</SubtypeName>
                      <Min x="6" y="3" z="14" />
                      <BlockOrientation Forward="Left" Up="Up" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>HalfSlopeArmorBlock</SubtypeName>
                      <Min x="-6" y="3" z="14" />
                      <BlockOrientation Forward="Right" Up="Up" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>HalfArmorBlock</SubtypeName>
                      <Min x="5" y="3" z="4" />
                      <BlockOrientation Forward="Down" Up="Forward" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>HalfArmorBlock</SubtypeName>
                      <Min x="-5" y="3" z="4" />
                      <BlockOrientation Forward="Down" Up="Forward" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>HalfArmorBlock</SubtypeName>
                      <Min x="6" y="2" z="4" />
                      <BlockOrientation Forward="Left" Up="Up" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>HalfArmorBlock</SubtypeName>
                      <Min x="-6" y="2" z="4" />
                      <BlockOrientation Forward="Right" Up="Down" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>HalfSlopeArmorBlock</SubtypeName>
                      <Min x="6" y="3" z="4" />
                      <BlockOrientation Forward="Left" Up="Up" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>HalfSlopeArmorBlock</SubtypeName>
                      <Min x="-6" y="3" z="4" />
                      <BlockOrientation Forward="Right" Up="Up" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
                      <Min x="3" y="4" z="11" />
                      <BlockOrientation Forward="Left" Up="Up" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
                      <Min x="-3" y="4" z="11" />
                      <BlockOrientation Forward="Right" Up="Up" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
                      <Min x="4" y="4" z="11" />
                      <BlockOrientation Forward="Left" Up="Up" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
                      <Min x="-4" y="4" z="11" />
                      <BlockOrientation Forward="Right" Up="Up" />
                      <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
                      <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
                    </MyObjectBuilder_CubeBlock>
                  </CubeBlocks>
                  <XMirroxPlane x="0" y="0" z="0" />
                  <ConveyorLines>
                    <MyObjectBuilder_ConveyorLine>
                      <StartPosition x="0" y="2" z="2" />
                      <StartDirection>Up</StartDirection>
                      <EndPosition x="0" y="3" z="2" />
                      <EndDirection>Down</EndDirection>
                      <Sections />
                      <ConveyorLineType>SMALL_LINE</ConveyorLineType>
                    </MyObjectBuilder_ConveyorLine>
                    <MyObjectBuilder_ConveyorLine>
                      <StartPosition x="1" y="2" z="2" />
                      <StartDirection>Backward</StartDirection>
                      <EndPosition x="1" y="2" z="3" />
                      <EndDirection>Forward</EndDirection>
                      <Sections />
                      <ConveyorLineType>SMALL_LINE</ConveyorLineType>
                    </MyObjectBuilder_ConveyorLine>
                    <MyObjectBuilder_ConveyorLine>
                      <StartPosition x="-1" y="2" z="2" />
                      <StartDirection>Backward</StartDirection>
                      <EndPosition x="-1" y="2" z="3" />
                      <EndDirection>Forward</EndDirection>
                      <Sections />
                      <ConveyorLineType>SMALL_LINE</ConveyorLineType>
                    </MyObjectBuilder_ConveyorLine>
                    <MyObjectBuilder_ConveyorLine>
                      <StartPosition x="1" y="2" z="3" />
                      <StartDirection>Down</StartDirection>
                      <EndPosition x="1" y="1" z="3" />
                      <EndDirection>Up</EndDirection>
                      <Sections />
                      <ConveyorLineType>SMALL_LINE</ConveyorLineType>
                    </MyObjectBuilder_ConveyorLine>
                    <MyObjectBuilder_ConveyorLine>
                      <StartPosition x="-1" y="2" z="3" />
                      <StartDirection>Down</StartDirection>
                      <EndPosition x="-1" y="1" z="3" />
                      <EndDirection>Up</EndDirection>
                      <Sections />
                      <ConveyorLineType>SMALL_LINE</ConveyorLineType>
                    </MyObjectBuilder_ConveyorLine>
                    <MyObjectBuilder_ConveyorLine>
                      <StartPosition x="-3" y="1" z="4" />
                      <StartDirection>Backward</StartDirection>
                      <EndPosition x="-3" y="1" z="5" />
                      <EndDirection>Forward</EndDirection>
                      <Sections />
                      <ConveyorLineType>LARGE_LINE</ConveyorLineType>
                    </MyObjectBuilder_ConveyorLine>
                    <MyObjectBuilder_ConveyorLine>
                      <StartPosition x="2" y="1" z="3" />
                      <StartDirection>Left</StartDirection>
                      <EndPosition x="1" y="1" z="3" />
                      <EndDirection>Right</EndDirection>
                      <Sections />
                      <ConveyorLineType>SMALL_LINE</ConveyorLineType>
                    </MyObjectBuilder_ConveyorLine>
                    <MyObjectBuilder_ConveyorLine>
                      <StartPosition x="3" y="1" z="4" />
                      <StartDirection>Backward</StartDirection>
                      <EndPosition x="3" y="1" z="5" />
                      <EndDirection>Forward</EndDirection>
                      <Sections />
                      <ConveyorLineType>LARGE_LINE</ConveyorLineType>
                    </MyObjectBuilder_ConveyorLine>
                    <MyObjectBuilder_ConveyorLine>
                      <StartPosition x="3" y="1" z="7" />
                      <StartDirection>Backward</StartDirection>
                      <EndPosition x="3" y="1" z="8" />
                      <EndDirection>Forward</EndDirection>
                      <Sections />
                      <ConveyorLineType>LARGE_LINE</ConveyorLineType>
                    </MyObjectBuilder_ConveyorLine>
                    <MyObjectBuilder_ConveyorLine>
                      <StartPosition x="-2" y="1" z="3" />
                      <StartDirection>Right</StartDirection>
                      <EndPosition x="-1" y="1" z="3" />
                      <EndDirection>Left</EndDirection>
                      <Sections />
                      <ConveyorLineType>SMALL_LINE</ConveyorLineType>
                    </MyObjectBuilder_ConveyorLine>
                    <MyObjectBuilder_ConveyorLine>
                      <StartPosition x="-3" y="1" z="7" />
                      <StartDirection>Backward</StartDirection>
                      <EndPosition x="-3" y="1" z="8" />
                      <EndDirection>Forward</EndDirection>
                      <Sections />
                      <ConveyorLineType>LARGE_LINE</ConveyorLineType>
                    </MyObjectBuilder_ConveyorLine>
                    <MyObjectBuilder_ConveyorLine>
                      <StartPosition x="3" y="1" z="10" />
                      <StartDirection>Backward</StartDirection>
                      <EndPosition x="3" y="1" z="11" />
                      <EndDirection>Forward</EndDirection>
                      <Sections />
                      <ConveyorLineType>LARGE_LINE</ConveyorLineType>
                    </MyObjectBuilder_ConveyorLine>
                    <MyObjectBuilder_ConveyorLine>
                      <StartPosition x="4" y="1" z="9" />
                      <StartDirection>Right</StartDirection>
                      <EndPosition x="5" y="1" z="9" />
                      <EndDirection>Left</EndDirection>
                      <Sections />
                      <ConveyorLineType>LARGE_LINE</ConveyorLineType>
                    </MyObjectBuilder_ConveyorLine>
                    <MyObjectBuilder_ConveyorLine>
                      <StartPosition x="2" y="1" z="9" />
                      <StartDirection>Left</StartDirection>
                      <EndPosition x="1" y="1" z="9" />
                      <EndDirection>Right</EndDirection>
                      <Sections />
                      <ConveyorLineType>LARGE_LINE</ConveyorLineType>
                    </MyObjectBuilder_ConveyorLine>
                    <MyObjectBuilder_ConveyorLine>
                      <StartPosition x="-3" y="1" z="10" />
                      <StartDirection>Backward</StartDirection>
                      <EndPosition x="-3" y="1" z="11" />
                      <EndDirection>Forward</EndDirection>
                      <Sections />
                      <ConveyorLineType>LARGE_LINE</ConveyorLineType>
                    </MyObjectBuilder_ConveyorLine>
                    <MyObjectBuilder_ConveyorLine>
                      <StartPosition x="-2" y="1" z="9" />
                      <StartDirection>Right</StartDirection>
                      <EndPosition x="-1" y="1" z="9" />
                      <EndDirection>Left</EndDirection>
                      <Sections />
                      <ConveyorLineType>LARGE_LINE</ConveyorLineType>
                    </MyObjectBuilder_ConveyorLine>
                    <MyObjectBuilder_ConveyorLine>
                      <StartPosition x="-4" y="1" z="9" />
                      <StartDirection>Left</StartDirection>
                      <EndPosition x="-5" y="1" z="9" />
                      <EndDirection>Right</EndDirection>
                      <Sections />
                      <ConveyorLineType>LARGE_LINE</ConveyorLineType>
                    </MyObjectBuilder_ConveyorLine>
                    <MyObjectBuilder_ConveyorLine>
                      <StartPosition x="0" y="0" z="9" />
                      <StartDirection>Down</StartDirection>
                      <EndPosition x="0" y="-1" z="9" />
                      <EndDirection>Up</EndDirection>
                      <Sections />
                      <ConveyorLineType>LARGE_LINE</ConveyorLineType>
                    </MyObjectBuilder_ConveyorLine>
                    <MyObjectBuilder_ConveyorLine>
                      <StartPosition x="-3" y="1" z="13" />
                      <StartDirection>Backward</StartDirection>
                      <EndPosition x="-3" y="1" z="14" />
                      <EndDirection>Forward</EndDirection>
                      <Sections />
                      <ConveyorLineType>LARGE_LINE</ConveyorLineType>
                    </MyObjectBuilder_ConveyorLine>
                    <MyObjectBuilder_ConveyorLine>
                      <StartPosition x="3" y="1" z="13" />
                      <StartDirection>Backward</StartDirection>
                      <EndPosition x="3" y="1" z="14" />
                      <EndDirection>Forward</EndDirection>
                      <Sections />
                      <ConveyorLineType>LARGE_LINE</ConveyorLineType>
                    </MyObjectBuilder_ConveyorLine>
                    <MyObjectBuilder_ConveyorLine>
                      <StartPosition x="-1" y="1" z="3" />
                      <StartDirection>Down</StartDirection>
                      <EndPosition x="-1" y="0" z="3" />
                      <EndDirection>Up</EndDirection>
                      <Sections />
                      <ConveyorLineType>SMALL_LINE</ConveyorLineType>
                      <ConveyorLineConductivity>BACKWARD</ConveyorLineConductivity>
                    </MyObjectBuilder_ConveyorLine>
                    <MyObjectBuilder_ConveyorLine>
                      <StartPosition x="-1" y="0" z="3" />
                      <StartDirection>Down</StartDirection>
                      <EndPosition x="-1" y="-1" z="3" />
                      <EndDirection>Up</EndDirection>
                      <Sections />
                      <ConveyorLineType>SMALL_LINE</ConveyorLineType>
                      <ConveyorLineConductivity>BACKWARD</ConveyorLineConductivity>
                    </MyObjectBuilder_ConveyorLine>
                  </ConveyorLines>
                  <DisplayName>[NPC] Clydesdale</DisplayName>
                  <DestructibleBlocks>false</DestructibleBlocks>
                  <CreatePhysics>false</CreatePhysics>
                  <EnableSmallToLargeConnections>false</EnableSmallToLargeConnections>
                  <IsRespawnGrid>false</IsRespawnGrid>
                  <LocalCoordSys>0</LocalCoordSys>
                  <TargetingTargets />
                  <OxygenRooms>
                    <OxygenRoom OxygenAmount="0">
                      <StartingPosition>
                        <X>-7</X>
                        <Y>-3</Y>
                        <Z>-2</Z>
                      </StartingPosition>
                    </OxygenRoom>
                  </OxygenRooms>
                </MyObjectBuilder_CubeGrid>
              </ProjectedGrids>
              <ProjectionOffset>
                <X>1</X>
                <Y>2</Y>
                <Z>7</Z>
              </ProjectionOffset>
              <ProjectionRotation>
                <X>-2</X>
                <Y>-2</Y>
                <Z>-2</Z>
              </ProjectionRotation>
              <KeepProjection>true</KeepProjection>
              <ShowOnlyBuildable>false</ShowOnlyBuildable>
              <InstantBuildingEnabled>false</InstantBuildingEnabled>
              <MaxNumberOfProjections>5</MaxNumberOfProjections>
              <MaxNumberOfBlocks>200</MaxNumberOfBlocks>
              <ProjectionsRemaining>0</ProjectionsRemaining>
              <GetOwnershipFromProjector>false</GetOwnershipFromProjector>
              <Scale>1</Scale>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-2" y="3" z="14" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MergeBlock">
              <SubtypeName>SmallShipMergeBlock</SubtypeName>
              <EntityId>119901720789041167</EntityId>
              <Min x="-1" y="0" z="17" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ShareMode>Faction</ShareMode>
              <CustomName>Cle Merge Block</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>1</NumberInGrid>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Gyro">
              <SubtypeName>SmallBlockGyro</SubtypeName>
              <EntityId>137340709662862071</EntityId>
              <Min x="0" y="3" z="8" />
              <BlockOrientation Forward="Down" Up="Backward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ShareMode>Faction</ShareMode>
              <CustomName>Cle Gyroscope 4</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>6</NumberInGrid>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockLargeFlatAtmosphericThrust</SubtypeName>
              <EntityId>140844043236152466</EntityId>
              <Min x="-4" y="0" z="17" />
              <BlockOrientation Forward="Backward" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Large Flat Atmo Thruster Po 09</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>3</NumberInGrid>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockLargeFlatAtmosphericThrust</SubtypeName>
              <EntityId>127097933393898882</EntityId>
              <Min x="2" y="0" z="17" />
              <BlockOrientation Forward="Backward" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Large Flat Atmo Thruster Sb 10</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>4</NumberInGrid>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CargoContainer">
              <SubtypeName>SmallBlockMediumContainer</SubtypeName>
              <EntityId>75604058398244259</EntityId>
              <Min x="2" y="0" z="2" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ShareMode>Faction</ShareMode>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items>
                        <MyObjectBuilder_InventoryItem>
                          <Amount>26574.801766</Amount>
                          <PhysicalContent xsi:type="MyObjectBuilder_Ingot">
                            <SubtypeName>Iron</SubtypeName>
                          </PhysicalContent>
                          <ItemId>0</ItemId>
                        </MyObjectBuilder_InventoryItem>
                      </Items>
                      <nextItemId>1</nextItemId>
                      <Volume>3.375</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanReceive CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Medium Cargo Container Sb 1</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>1</NumberInGrid>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CargoContainer">
              <SubtypeName>SmallBlockMediumContainer</SubtypeName>
              <EntityId>86957925227596634</EntityId>
              <Min x="-4" y="0" z="2" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ShareMode>Faction</ShareMode>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items>
                        <MyObjectBuilder_InventoryItem>
                          <Amount>26574.801766</Amount>
                          <PhysicalContent xsi:type="MyObjectBuilder_Ingot">
                            <SubtypeName>Iron</SubtypeName>
                          </PhysicalContent>
                          <ItemId>0</ItemId>
                        </MyObjectBuilder_InventoryItem>
                      </Items>
                      <nextItemId>1</nextItemId>
                      <Volume>3.375</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanReceive CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Medium Cargo Container Po 2</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>2</NumberInGrid>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CargoContainer">
              <SubtypeName>SmallBlockMediumContainer</SubtypeName>
              <EntityId>124585014210411667</EntityId>
              <Min x="2" y="0" z="5" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ShareMode>Faction</ShareMode>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items>
                        <MyObjectBuilder_InventoryItem>
                          <Amount>26574.801766</Amount>
                          <PhysicalContent xsi:type="MyObjectBuilder_Ingot">
                            <SubtypeName>Iron</SubtypeName>
                          </PhysicalContent>
                          <ItemId>0</ItemId>
                        </MyObjectBuilder_InventoryItem>
                      </Items>
                      <nextItemId>1</nextItemId>
                      <Volume>3.375</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanReceive CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Medium Cargo Container Sb 3</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>3</NumberInGrid>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CargoContainer">
              <SubtypeName>SmallBlockMediumContainer</SubtypeName>
              <EntityId>117380944231474636</EntityId>
              <Min x="-4" y="0" z="5" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ShareMode>Faction</ShareMode>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items>
                        <MyObjectBuilder_InventoryItem>
                          <Amount>26574.801766</Amount>
                          <PhysicalContent xsi:type="MyObjectBuilder_Ingot">
                            <SubtypeName>Iron</SubtypeName>
                          </PhysicalContent>
                          <ItemId>0</ItemId>
                        </MyObjectBuilder_InventoryItem>
                      </Items>
                      <nextItemId>1</nextItemId>
                      <Volume>3.375</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanReceive CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Medium Cargo Container Po 4</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>4</NumberInGrid>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Conveyor">
              <SubtypeName>SmallShipConveyorHub</SubtypeName>
              <EntityId>135198732473937382</EntityId>
              <Min x="2" y="0" z="8" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Conveyor">
              <SubtypeName>SmallShipConveyorHub</SubtypeName>
              <EntityId>120261040090023176</EntityId>
              <Min x="-4" y="0" z="8" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Conveyor">
              <SubtypeName>SmallShipConveyorHub</SubtypeName>
              <EntityId>76762617566159352</EntityId>
              <Min x="-1" y="0" z="8" />
              <BlockOrientation Forward="Down" Up="Backward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ShipConnector">
              <SubtypeName>ConnectorMedium</SubtypeName>
              <EntityId>140807068315072514</EntityId>
              <Min x="-1" y="-2" z="8" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ShareMode>Faction</ShareMode>
              <DeformationRatio>0.5</DeformationRatio>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>1.152</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanReceive CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame10</TimerType>
                      <FramesFromLastTrigger>20</FramesFromLastTrigger>
                      <TimerTickInFrames>80</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Connector 1</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>1</NumberInGrid>
              <Enabled>true</Enabled>
              <MasterToSlaveTransform xsi:nil="true" />
              <Strength>1E-06</Strength>
              <MasterToSlaveGrid xsi:nil="true" />
              <IsMaster>true</IsMaster>
              <TradingEnabled>false</TradingEnabled>
              <AutoUnlockTime>0</AutoUnlockTime>
              <TimeOfConnection>0</TimeOfConnection>
              <IsParkingEnabled>true</IsParkingEnabled>
              <IsPowerTransferOverrideEnabled>false</IsPowerTransferOverrideEnabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CargoContainer">
              <SubtypeName>SmallBlockMediumContainer</SubtypeName>
              <EntityId>123933371243768809</EntityId>
              <Min x="-4" y="0" z="11" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ShareMode>Faction</ShareMode>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items>
                        <MyObjectBuilder_InventoryItem>
                          <Amount>26574.801766</Amount>
                          <PhysicalContent xsi:type="MyObjectBuilder_Ingot">
                            <SubtypeName>Iron</SubtypeName>
                          </PhysicalContent>
                          <ItemId>0</ItemId>
                        </MyObjectBuilder_InventoryItem>
                      </Items>
                      <nextItemId>1</nextItemId>
                      <Volume>3.375</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanReceive CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Medium Cargo Container Po 5</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>5</NumberInGrid>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CargoContainer">
              <SubtypeName>SmallBlockMediumContainer</SubtypeName>
              <EntityId>136898796423700571</EntityId>
              <Min x="2" y="0" z="11" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ShareMode>Faction</ShareMode>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>3.375</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanReceive CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Medium Cargo Container Sb 6</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>6</NumberInGrid>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CargoContainer">
              <SubtypeName>SmallBlockMediumContainer</SubtypeName>
              <EntityId>88938357250572153</EntityId>
              <Min x="2" y="0" z="14" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ShareMode>Faction</ShareMode>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items>
                        <MyObjectBuilder_InventoryItem>
                          <Amount>26574.801766</Amount>
                          <PhysicalContent xsi:type="MyObjectBuilder_Ingot">
                            <SubtypeName>Iron</SubtypeName>
                          </PhysicalContent>
                          <ItemId>0</ItemId>
                        </MyObjectBuilder_InventoryItem>
                      </Items>
                      <nextItemId>1</nextItemId>
                      <Volume>3.375</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanReceive CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Medium Cargo Container Sb 7</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>10</NumberInGrid>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CargoContainer">
              <SubtypeName>SmallBlockMediumContainer</SubtypeName>
              <EntityId>121747319696927516</EntityId>
              <Min x="-4" y="0" z="14" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ShareMode>Faction</ShareMode>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items>
                        <MyObjectBuilder_InventoryItem>
                          <Amount>26574.801766</Amount>
                          <PhysicalContent xsi:type="MyObjectBuilder_Ingot">
                            <SubtypeName>Iron</SubtypeName>
                          </PhysicalContent>
                          <ItemId>0</ItemId>
                        </MyObjectBuilder_InventoryItem>
                      </Items>
                      <nextItemId>1</nextItemId>
                      <Volume>3.375</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanReceive CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Medium Cargo Container Po 8</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>9</NumberInGrid>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Conveyor">
              <SubtypeName>SmallBlockConveyor</SubtypeName>
              <EntityId>131470201390927249</EntityId>
              <Min x="-1" y="1" z="3" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Conveyor">
              <SubtypeName>SmallBlockConveyor</SubtypeName>
              <EntityId>92935897415012265</EntityId>
              <Min x="1" y="1" z="3" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="2" y="3" z="15" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="0" y="3" z="3" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-1" y="3" z="3" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_OreDetector">
              <SubtypeName>SmallBlockOreDetector</SubtypeName>
              <EntityId>98795979659951313</EntityId>
              <Min x="1" y="-1" z="3" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ShareMode>Faction</ShareMode>
              <CustomName>Cle Ore Detector</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>2</NumberInGrid>
              <Enabled>true</Enabled>
              <DetectionRadius>50</DetectionRadius>
              <BroadcastUsingAntennas>true</BroadcastUsingAntennas>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockLargeFlatAtmosphericThrust</SubtypeName>
              <EntityId>123543774671183599</EntityId>
              <Min x="-4" y="-2" z="6" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Large Flat Atmo Thruster Po 05</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>8</NumberInGrid>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockLargeFlatAtmosphericThrust</SubtypeName>
              <EntityId>78895350237247920</EntityId>
              <Min x="2" y="-2" z="6" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Large Flat Atmo Thruster Sb 06</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>7</NumberInGrid>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ReflectorLight">
              <SubtypeName>SmallBlockFrontLight</SubtypeName>
              <EntityId>106515924022798316</EntityId>
              <Min x="-3" y="-1" z="1" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <CustomName>Cle Spotlight Po 1</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>4</NumberInGrid>
              <Enabled>false</Enabled>
              <Radius>10</Radius>
              <ReflectorRadius>120</ReflectorRadius>
              <Falloff>1.5</Falloff>
              <Intensity>3</Intensity>
              <BlinkIntervalSeconds>0</BlinkIntervalSeconds>
              <BlinkLenght>10</BlinkLenght>
              <BlinkOffset>0</BlinkOffset>
              <Offset>0.5</Offset>
              <RotationSpeed>0.08</RotationSpeed>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ReflectorLight">
              <SubtypeName>SmallBlockFrontLight</SubtypeName>
              <EntityId>98559854255029984</EntityId>
              <Min x="3" y="-1" z="1" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <CustomName>Cle Spotlight Sb 2</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>5</NumberInGrid>
              <Enabled>false</Enabled>
              <Radius>10</Radius>
              <ReflectorRadius>120</ReflectorRadius>
              <Falloff>1.5</Falloff>
              <Intensity>3</Intensity>
              <BlinkIntervalSeconds>0</BlinkIntervalSeconds>
              <BlinkLenght>10</BlinkLenght>
              <BlinkOffset>0</BlinkOffset>
              <Offset>0.5</Offset>
              <RotationSpeed>0.08</RotationSpeed>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MyProgrammableBlock">
              <SubtypeName>SmallProgrammableBlockReskin</SubtypeName>
              <EntityId>133524887062689858</EntityId>
              <Min x="0" y="3" z="10" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ShareMode>Faction</ShareMode>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyMultiTextPanelComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_MultiTextPanelComponent">
                      <TextPanelsContents>
                        <MySerializedTextPanelData>
                          <ChangeInterval>0</ChangeInterval>
                          <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
                          <FontSize>1</FontSize>
                          <ShowText>NONE</ShowText>
                          <FontColor>
                            <PackedValue>4294967295</PackedValue>
                            <X>255</X>
                            <Y>255</Y>
                            <Z>255</Z>
                            <R>255</R>
                            <G>255</G>
                            <B>255</B>
                            <A>255</A>
                          </FontColor>
                          <BackgroundColor>
                            <PackedValue>4278190080</PackedValue>
                            <X>0</X>
                            <Y>0</Y>
                            <Z>0</Z>
                            <R>0</R>
                            <G>0</G>
                            <B>0</B>
                            <A>255</A>
                          </BackgroundColor>
                          <CurrentShownTexture>0</CurrentShownTexture>
                          <SelectedScript />
                          <TextPadding>2</TextPadding>
                          <ScriptBackgroundColor>
                            <PackedValue>4288108544</PackedValue>
                            <X>0</X>
                            <Y>88</Y>
                            <Z>151</Z>
                            <R>0</R>
                            <G>88</G>
                            <B>151</B>
                            <A>255</A>
                          </ScriptBackgroundColor>
                          <ScriptForegroundColor>
                            <PackedValue>4294962611</PackedValue>
                            <X>179</X>
                            <Y>237</Y>
                            <Z>255</Z>
                            <R>179</R>
                            <G>237</G>
                            <B>255</B>
                            <A>255</A>
                          </ScriptForegroundColor>
                          <Sprites>
                            <Length>0</Length>
                          </Sprites>
                        </MySerializedTextPanelData>
                        <MySerializedTextPanelData>
                          <ChangeInterval>0</ChangeInterval>
                          <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
                          <FontSize>1</FontSize>
                          <ShowText>NONE</ShowText>
                          <FontColor>
                            <PackedValue>4294967295</PackedValue>
                            <X>255</X>
                            <Y>255</Y>
                            <Z>255</Z>
                            <R>255</R>
                            <G>255</G>
                            <B>255</B>
                            <A>255</A>
                          </FontColor>
                          <BackgroundColor>
                            <PackedValue>4278190080</PackedValue>
                            <X>0</X>
                            <Y>0</Y>
                            <Z>0</Z>
                            <R>0</R>
                            <G>0</G>
                            <B>0</B>
                            <A>255</A>
                          </BackgroundColor>
                          <CurrentShownTexture>0</CurrentShownTexture>
                          <SelectedScript />
                          <TextPadding>2</TextPadding>
                          <ScriptBackgroundColor>
                            <PackedValue>4288108544</PackedValue>
                            <X>0</X>
                            <Y>88</Y>
                            <Z>151</Z>
                            <R>0</R>
                            <G>88</G>
                            <B>151</B>
                            <A>255</A>
                          </ScriptBackgroundColor>
                          <ScriptForegroundColor>
                            <PackedValue>4294962611</PackedValue>
                            <X>179</X>
                            <Y>237</Y>
                            <Z>255</Z>
                            <R>179</R>
                            <G>237</G>
                            <B>255</B>
                            <A>255</A>
                          </ScriptForegroundColor>
                          <Sprites>
                            <Length>0</Length>
                          </Sprites>
                        </MySerializedTextPanelData>
                      </TextPanelsContents>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Automaton PB 3 [adventure]</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>1</NumberInGrid>
              <Enabled>true</Enabled>
              <Program>/*
 * R e a d m e
 * -----------
 * 
 * Underworld Adventurer
 */

readonly ProgramCore pc;
DisplayUI dui;
DisplayService display;

public Program()
{
    double timestep = 6.0 * 1.0 / 60.0;

    Echo($"Booting Core...");
    //Program Core and Primitives
    pc = new ProgramCore(Runtime, IGC, GridTerminalSystem, Me);
    List&lt;IMyRemoteControl&gt; rcs = new List&lt;IMyRemoteControl&gt;();
    GridTerminalSystem.GetBlocksOfType(rcs, x =&gt; x.IsSameConstructAs(Me));
    var rc = rcs.FirstOrDefault();

    dui = new DisplayUI(pc, GridTerminalSystem, "BMC");
    display = new DisplayService(pc, GridTerminalSystem, Me, "BMCAux");

    Echo($"Booting Gyros...");
    //Primary Systems
    var gyros = new GyroControl(timestep, GridTerminalSystem, rc);
    Propulsion prop = MakePropulsion(rc, display);

    //Cruise
    Echo($"Booting Cruise Control Systems...");
    BasicNavigation rtu = new BasicNavigation(pc, GridTerminalSystem, rc, gyros, prop, display);
    var navUI = new NavigationUIText(rtu, dui);

    //Life Support
    Echo($"Booting Life Support...");
    var lsm = new LifeSupportManager(pc, GridTerminalSystem, Me);
    var lsmui = new LifeSupportUIText(lsm, dui);

    //Missile Counter
    Echo("Booting Logistics...");
    {
        try
        {
            RecipeCounter reco = new RecipeCounter(GridTerminalSystem, Me, Echo);
            var rct = new RecipeUIText(reco, dui, display);
        }
        catch (ArgumentException)
        {
            Echo("Failed.");
        }
    }

    //Ship Diagnostic Systems
    Echo($"Creating Diagnostic Systems...");
    {
        var st = new SpinTest(pc, rc, display, gyros);
        var at = new AccelTest(pc, GridTerminalSystem, rc, display, prop);
        var da = new DamageAssessment(GridTerminalSystem, Me);
        var pidT = new YawPID(rc, display, gyros);
        var diagT = new DiagnosticText(dui, display, rtu, st, pidT, at, da);
    }
    Echo($"Online.");
}

private Propulsion MakePropulsion(IMyRemoteControl rc, DisplayService ds = null)
{
    string bmc = "BMC.BDU";
    string mxspeed = "maxSpeed";
    const double timeStep = 1.0 / 10.0;

    MyIni ini = new MyIni();
    ini.TryParse(Me.CustomData);
    double myMaxSpeed = defaultMaxSpeed;
    myMaxSpeed = ini.Get(bmc, mxspeed).ToDouble(myMaxSpeed);
    var pid = new PID(1, 0, 0, timeStep);
    var prop = new Propulsion(rc, VirtualThruster.MakeThrusters(rc, GridTerminalSystem), myMaxSpeed, pid, 5.0, 0.5, ds);
    return prop;
}

public void Main(string argument, UpdateType updateSource)
{
    try
    {
        pc.Main(argument, updateSource);
    }
    catch(Exception ex)
    {
        dui.BlueScreen(ex.Message);
        display.BlueScreen(ex.StackTrace);
        throw ex;
    }
}

public class AbstractDisplay
{
    protected List&lt;IMyTextSurface&gt; Surfaces { get; private set; }

    private readonly string tag;
    public AbstractDisplay(string tag)
    {
        this.tag = tag;
        Surfaces = new List&lt;IMyTextSurface&gt;();
    }
    public void UpdateBlocks(IMyGridTerminalSystem gts, IMyProgrammableBlock me)
    {
        Surfaces.Clear();
        gts.GetBlocksOfType&lt;IMyTerminalBlock&gt;(null, (p) =&gt;
        {
            if (p.CustomName.Contains($"[{tag}]") || p.CustomName.Contains($"[{tag}:"))
            {
                int num = 0;
                string text = p.CustomName;
                num = FetchSurfaceNum(text, tag);
                IMyTextSurfaceProvider sp = p as IMyTextSurfaceProvider;
                if (sp != null) Surfaces.Add(sp.GetSurface(num));
                else if (p is IMyTextSurface) Surfaces.Add(p as IMyTextSurface);
            }
            return false;
        });
        foreach (var s in Surfaces)
        {
            s.Alignment = TextAlignment.LEFT;
            s.ContentType = ContentType.TEXT_AND_IMAGE;
        }
    }
    public static int FetchSurfaceNum(string text, string tag)
    {
        int num = 0;
        text = text.Substring(text.LastIndexOf($"[{tag}") + tag.Length + 1);
        if (text[0] == ':' &amp;&amp; text[2] == ']') int.TryParse(text[1].ToString(), out num);
        return num;
    }

    public void BlueScreen(string ex)
    {
        foreach(var s in Surfaces)
        {
            s.BackgroundColor = Color.Blue;
            s.FontColor = Color.Yellow;
            s.WriteText("Blue Screen of Death\n");
            s.WriteText(ex, true);
        }
    }
}

public class AssemblerManager : IUpdateBlocks
{
    readonly List&lt;IMyAssembler&gt; assms = new List&lt;IMyAssembler&gt;();
    IMyAssembler leadAssembler;
    readonly Action&lt;string&gt; Echo;

    public AssemblerManager(IMyGridTerminalSystem gts, IMyProgrammableBlock me, Action&lt;string&gt; echo)
    {
        this.Echo = echo;
        assms = new List&lt;IMyAssembler&gt;();
        UpdateBlocks(gts, me);
    }

    public void UpdateBlocks(IMyGridTerminalSystem gts, IMyProgrammableBlock me)
    {
        assms.Clear();
        gts.GetBlocksOfType(assms, x=&gt;x.IsSameConstructAs(me));
        leadAssembler = assms.FirstOrDefault(x =&gt; x.CooperativeMode == false &amp;&amp; x.BlockDefinition.SubtypeId =="LargeAssembler");
        if (leadAssembler == null) leadAssembler = assms.FirstOrDefault();
        if (leadAssembler != null) leadAssembler.CooperativeMode = false;
        foreach (var asm in assms)
        {
            if (asm != leadAssembler) asm.CooperativeMode = true;
        }
    }

    public bool Working
    {
        get
        {
            return leadAssembler.IsProducing;
        }
    }

    public void Assemble(List&lt;MyTuple&lt;MyItemType, double&gt;&gt; difference)
    {
        foreach (var assm in assms)
        {
            assm.Mode = MyAssemblerMode.Assembly;
            assm.ClearQueue();
        }

        foreach (var item in difference)
        {
            //E($"{item.Item1.SubtypeId}");
            double amount = item.Item2;
            if (amount &gt; 0.0) // Different
            {
                try
                {
                    var def = TypeToBlueprint(item.Item1);
                    leadAssembler.AddQueueItem(def, Math.Abs(amount));
                }
                catch(Exception)
                {
                    Echo(item.Item1.ToString());
                }
            }
        }
    }

    public void Disassemble(List&lt;MyTuple&lt;MyItemType, double&gt;&gt; difference)
    {
        foreach (var assm in assms)
        {
            assm.Mode = MyAssemblerMode.Disassembly;
            assm.ClearQueue();
        }

        foreach (var item in difference)
        {
            double amount = item.Item2;
            if (amount &lt; 0.0) // Different
            {
                MyDefinitionId def = TypeToBlueprint(item.Item1);
                foreach (var asm in assms)
                {
                    asm.AddQueueItem(def, Math.Abs(amount) / assms.Count);
                }
                leadAssembler?.AddQueueItem(def, Math.Abs(amount) % assms.Count);
            }
        }
    }

    private MyDefinitionId TypeToBlueprint(MyItemType item)
    {
        //Just works
        /*Interior Plate
                Steel Plate
                Bulletproof Glass
                Canvas
                Large Steel Tube
                Display
                Metal Grid
                Power Cell
                Small Steel Tube
                Solar Cell
                Superconductor Component
                Thruster Components
                Zone Chip*/
        //Needs fix
        /*Computer / ComputerComponent
                Construction/Construction Component
                Detector/Component
                Explosives/Component
                Girder/Component
                GravityGenerator/Component
                Medical/Component
                Motor/Component
                Radio Communication/Component
                Reactor/Component*/
        //MyDefinitionId id;
        //id = MyDefinitionId.Parse(item.TypeId+"/"+item.SubtypeId);
        switch(item.SubtypeId)
        {
            case "Computer":
            case "Construction":
            case "Detector":
            case "Explosives":
            case "Girder":
            case "GravityGenerator":
            case "Medical":
            case "Motor":
            case "RadioCommunication":
            case "Reactor":
            case "Thrust":
                return MyDefinitionId.Parse(blueprintDef + item.SubtypeId + "Component");
            default:
            return MyDefinitionId.Parse(blueprintDef + item.SubtypeId);
        }
    }
}

public interface IFlightStrategy
{
    bool Start();
    void Stop();
    bool Update6(double elapsedTime);
}

public class BasicNavigation : IUpdateBlocks
{
    readonly IProgramCore pc;
    private readonly IMyRemoteControl rc;
    IFlightStrategy strategy;
    readonly List&lt;IMyCockpit&gt; cockpits = new List&lt;IMyCockpit&gt;();
    readonly List&lt;IMyCameraBlock&gt; cameraBlocks;

    readonly IFlightStrategy cruise, dock, up;

    public bool SetStrategy(IFlightStrategy newStrat)
    {
        if (strategy == newStrat)
        {
            if (!newStrat?.Start() ?? false)
            {
                strategy.Stop();
                strategy = null;
            }
        }
        else
        {
            strategy?.Stop();
            pc.RemoveUpdate6(CruiseUpdate);
            if (newStrat?.Start() ?? false)
            {
                strategy = newStrat;
                pc.AddUpdate6(CruiseUpdate);
            }
            else strategy = null;
        }
        return (strategy == newStrat);
    }

    public BasicNavigation(ProgramCore pc, IMyGridTerminalSystem gts, IMyRemoteControl rc, GyroControl gyros, Propulsion propulsion, DisplayService ds)
    {
        this.pc = pc;
        this.rc = rc;
        cameraBlocks = new List&lt;IMyCameraBlock&gt;();

        cruise = new LevelOut(rc, gyros, propulsion, cockpits);
        dock = new LandAt(rc, gyros, propulsion, ds, cameraBlocks, cockpits);
        up = new RotateToGrav(rc, gyros);

        pc.AddCommand("escape500", Add500);
        pc.AddCommand("escape-500", Drop500);
        pc.AddCommand("cruiseon", () =&gt; SetStrategy(cruise));
        pc.AddCommand("cruiseoff", Stop);
        pc.AddCommand("aheadhalf", AheadHalf);
        pc.AddCommand("align", Align);
        pc.AddCommand("docklase", ()=&gt;Dock());
        pc.Add(this);
    }

    public bool Dock()
    {
        return SetStrategy(dock);
    }

    public double TargetElevation
    {
        get { return ((LevelOut)cruise).TargetElevation; }
    }

    public double TargetSpeed
    {
        get
        {
            return ((LevelOut)cruise).TargetSpeed;
        }
        set
        {
            SetStrategy(cruise);
            ((LevelOut)cruise).TargetSpeed = value;
        }
    }

    public void Stop()
    {
        SetStrategy(null);
    }

    public void Align()
    {
        SetStrategy(up);
    }

    public void AheadHalf()
    {
        SetStrategy(cruise); ((LevelOut)cruise).AheadHalf();
    }

    public void Add500()
    {
        SetStrategy(cruise); ((LevelOut)cruise).Add500();
    }

    public void Drop500()
    {
        SetStrategy(cruise); ((LevelOut)cruise).Drop500();
    }

    private void CruiseUpdate(double elapsedTime)
    {
        if (!strategy.Update6(elapsedTime))
        {
            SetStrategy(null);
        }
    }

    public void UpdateBlocks(IMyGridTerminalSystem gts, IMyProgrammableBlock me)
    {
        gts.GetBlocksOfType(cameraBlocks, x =&gt; x.IsSameConstructAs(me) &amp;&amp; x.CustomName.Contains("[dockcam]"));

        gts.GetBlocksOfType(cockpits, x =&gt; rc.IsSameConstructAs(x) &amp;&amp; x.CanControlShip);
        if (cockpits.Any(x =&gt; x.IsMainCockpit)) cockpits.RemoveAll(x =&gt; !x.IsMainCockpit);
    }

    public class RotateToGrav : IFlightStrategy
    {
        readonly IMyRemoteControl rc;
        readonly GyroControl gyros;
        Vector3D initialDir;

        public RotateToGrav(IMyRemoteControl rc, GyroControl gyros)
        {
            this.rc = rc;
            this.gyros = gyros;
        }

        public bool Start()
        {
            var up = -rc.GetNaturalGravity();
            if (!up.IsZero())
            {
                up.Normalize();
                initialDir = Vector3D.Reject(rc.WorldMatrix.Forward, up).Normalized();
                if (initialDir.IsZero()) { up.CalculatePerpendicularVector(out initialDir); }
                return true;
            }
            return false;
        }

        public void Stop()
        {
            gyros.Override = false;
        }

        public bool Update6(double elapsedTime)
        {
            var up = -rc.GetNaturalGravity();
            up.Normalize();
            if (up.LengthSquared() &lt;= double.Epsilon || (rc.WorldMatrix.Up.Dot(up) &gt; 0.9995 &amp;&amp; rc.GetShipVelocities().AngularVelocity.LengthSquared() &lt;= 0.0005))
            {
                gyros.Override = false;
                return false;
            }
            else
            {
                gyros.Rotate(initialDir, up);
                return true;
            }
        }
    }

    public class LevelOut : IFlightStrategy
    {
        readonly IMyRemoteControl rc;
        readonly GyroControl gc;
        readonly Propulsion prop;
        readonly List&lt;IMyCockpit&gt; cockpits;
        //IMyCockpit ck;
        public double TargetElevation { get; private set; }
        public double TargetSpeed { get; set; }

        public LevelOut(IMyRemoteControl rc, GyroControl gc, Propulsion prop, List&lt;IMyCockpit&gt; cockpits)
        {
            this.rc = rc;
            this.gc = gc;
            this.prop = prop;
            this.cockpits = cockpits;

            double elev;
            if (rc.TryGetPlanetElevation(MyPlanetElevation.Sealevel, out elev))
            {
                TargetElevation = elev;
            }
            else
            {
                TargetElevation = 2000.0;
            }
            TargetSpeed = 0.0;
        }

        public void Add500()
        {
            TargetElevation += 500.0;
        }

        public void Drop500()
        {
            TargetElevation -= 500.0;
        }

        public void AheadHalf()
        {
            TargetSpeed = 50.0;
        }

        public bool Update6(double elapsedTime)
        {
            double elev;
            if (rc.TryGetPlanetElevation(MyPlanetElevation.Sealevel, out elev))
            {
                var grav = rc.GetNaturalGravity();
                var fwd = rc.WorldMatrix.Forward;
                var up = -rc.GetNaturalGravity();
                var gravMag = up.Normalize();
                {
                    var ck = cockpits.FirstOrDefault(x =&gt; x.IsUnderControl);
                    var yawChange = ck?.RotationIndicator.Y ?? 0.0f;
                    fwd = fwd.Rotate(up, -Math.Sign(yawChange) * 0.6);
                    fwd = Vector3D.ProjectOnPlane(ref fwd, ref up);
                    fwd.Normalize();
                }
                prop.Thrust(rc.GetPosition() + up * (TargetElevation - elev), fwd * TargetSpeed, grav);
                //Execute(rc, prop, fwd, targetSpeed, TargetElevation, elev, up, gravMag);
                gc.Rotate(fwd, up);
                //displayService.WriteText($"{up.Dot(prop.NeededThrustDir):F2}\n",false);
                //prop.Thrust(hp, Vector3D.Zero, grav);
                return true;
            }
            return false;
        }

        public bool Start()
        {
            double elev;
            if (rc.TryGetPlanetElevation(MyPlanetElevation.Sealevel, out elev))
            {
                //This occurs if cruise is already running.
                if (!gc.Override)
                {
                    TargetSpeed = 0;
                    TargetElevation = elev;
                }
                return true;
            }
            return false;
        }

        public void Stop()
        {
            TargetSpeed = 0;
            gc.Override = false;
            prop.Stop();
        }
    }

    public class LandAt : IFlightStrategy
    {
        readonly List&lt;IMyCameraBlock&gt; dockCameras;
        readonly IMyRemoteControl rc;
        readonly GyroControl gyros;
        readonly Propulsion prop;
        readonly DisplayService displayService;
        readonly List&lt;IMyCockpit&gt; cockpits;
        Vector3D hp;

        public LandAt(IMyRemoteControl rc, GyroControl gyros, Propulsion prop, DisplayService displayService, List&lt;IMyCameraBlock&gt; dockCamera, List&lt;IMyCockpit&gt; cockpits)
        {
            this.dockCameras = dockCamera;
            this.rc = rc;
            this.gyros = gyros;
            this.prop = prop;
            this.displayService = displayService;
            this.cockpits = cockpits;
        }

        public bool Update6(double elapsedTime)
        {
            double elev;
            if (rc.TryGetPlanetElevation(MyPlanetElevation.Sealevel, out elev))
            {
                var grav = rc.GetNaturalGravity();
                var fwd = rc.WorldMatrix.Forward;
                var up = -rc.GetNaturalGravity();
                var gravMag = up.Normalize();
                var yawChange = cockpits.Sum(x =&gt; x.IsUnderControl &amp;&amp; x.CanControlShip ? x.RotationIndicator.Y : 0.0f);
                //var yawChange = ck?.RotationIndicator.Y ?? 0.0f;
                fwd = fwd.Rotate(up, -Math.Sign(yawChange) * 0.6);
                fwd = Vector3D.ProjectOnPlane(ref fwd, ref up);
                fwd.Normalize();
                gyros.Rotate(fwd, up);
                prop.Thrust(hp, Vector3D.Zero, grav);
                if ((rc.GetPosition() - hp).LengthSquared() &gt; 0.001 || rc.GetShipVelocities().LinearVelocity.LengthSquared() &gt; 0.001) return true;
            }
            return false;
        }

        public bool Start()
        {
            var dockCamera = dockCameras.FirstOrDefault();
            if (dockCamera != null)
            {
                dockCamera.EnableRaycast = true;
                displayService.WriteText($"Di: {dockCamera.RaycastDistanceLimit}\n", false);
                var r = dockCamera.Raycast(15000);
                if (r.HitPosition != null)
                {
                    const double offset = 250;
                    const double tooClose = 5;
                    hp = r.HitPosition ?? Vector3D.Zero;
                    var d2 = (rc.GetPosition() - hp).LengthSquared();
                    double d;
                    if (d2 &gt; offset * offset || d2 &lt; tooClose * tooClose)
                    {
                        d = offset;
                    }
                    else
                    {
                        d = tooClose;
                    }
                    hp += -d * rc.GetNaturalGravity().Normalized();
                    MyWaypointInfo wp = new MyWaypointInfo("Autopilot", hp);
                    displayService.WriteText(wp.ToString());
                    prop.On();
                    return true;
                }
                displayService.WriteText("Failed to find target.\n");
                displayService.WriteText($"{r.Type}\n");
            }
            return false;
        }

        public void Stop()
        {
            dockCameras.ForEach(x =&gt; x.EnableRaycast = false);
            gyros.Override = false;
            prop.Stop();
        }
    }
}

public class DiagnosticText
{
    public DiagnosticText(DisplayUI dui, DisplayService display, BasicNavigation bn, IFlightStrategy st, IFlightStrategy yp, ISimpleRender at, DamageAssessment da)
    {
        var dMenu = new Menu(dui, "Diagnostics");
        dui.Add(dMenu);
        dMenu.Add(dui.Back);
        DamageReportText drt = new DamageReportText(da, display);
        dMenu.Add(new MenuItem("Ship Damage", () =&gt; drt.Render()));
        dMenu.Add(new MenuItem("Acceleration Test", () =&gt; at.Render()));
        dMenu.Add(new MenuItem("Gyro Test (avoid in gravity)", ()=&gt;bn.SetStrategy(st)));
        dMenu.Add(new MenuItem("YawPID Test", () =&gt;bn.SetStrategy(yp)));
    }
}

public interface ISimpleRender
{
    void Render();
}

public class DamageReportText : ISimpleRender
{
    readonly DamageAssessment da;
    readonly DisplayService ds;
    readonly List&lt;IMyTerminalBlock&gt; list = new List&lt;IMyTerminalBlock&gt;();
    public DamageReportText(DamageAssessment da, DisplayService ds)
    {
        this.da = da;
        this.ds = ds;
    }

    public void Render()
    {
        da.AssessDamage(list);
        if (list.Count &gt; 0)
        {
            ds.WriteText("Damaged Blocks:\n", false);
            ds.WriteText("===============\n\n");
            foreach (IMyTerminalBlock block in list)
            {
                ds.WriteText($"{block.CustomName}\n");
            }
        }
        else
        {
            ds.WriteText("No damaged blocks.", false);
        }
    }
}

internal class Diff
{
    readonly List&lt;MyTuple&lt;MyItemType, double&gt;&gt; difference;

    public Diff(List&lt;MyTuple&lt;MyItemType, double&gt;&gt; difference)
    {
        this.difference = new List&lt;MyTuple&lt;MyItemType, double&gt;&gt;(difference);
    }

    public void Assemble(AssemblerManager assembler)
    {
        assembler.Assemble(difference);
    }

    public void Disassemble(AssemblerManager assembler)
    {
        assembler.Disassemble(difference);
    }

    public override string ToString()
    {
        string s = "";
        foreach (var item in difference)
        {
            s += $"{item.Item1} {item.Item2}\n";
        }
        return s;
    }
}

public class DisplayService : AbstractDisplay, IUpdateBlocks
{
    public DisplayService(ProgramCore pc, IMyGridTerminalSystem gts, IMyProgrammableBlock me, string tag) : base(tag)
    {
        UpdateBlocks(gts, me);
        pc.Add(this);
    }

    internal void WriteText(string text, bool append=true)
    {
        foreach (var s in Surfaces)
        {
            s.WriteText(text, append);
        }
    }

    public static string TimeFormat(double seconds)
    {
        if (seconds &lt; 1.0) return $"{seconds * 1000:F0}ms";
        if (seconds &lt; 10.0) return $"{seconds:F1}s";
        if (seconds &lt; 100) return $"{seconds:F0}s";
        if (seconds &lt; 90*60) return $"{(seconds/60.0):F0}m";
        if (seconds &lt; 3600*36) return $"{(seconds / 3600.0):F0}h";
        return $"{(seconds / (3600.0*24)):F0}d";
    }
}

public interface IMenuItem
{
    void Apply();
    void Draw(IMySurfaceWrapper surface);
}

public interface IMySurfaceWrapper
{
    void Write(string text);
    void Clear();
}

public class TextImpl : IMySurfaceWrapper
{
    readonly List&lt;IMyTextSurface&gt; surfaces;// = new List&lt;IMyTextSurface&gt;();
    public TextImpl(List&lt;IMyTextSurface&gt; surfaces)
    {
        this.surfaces = surfaces;
    }

    //public TextImpl(IMyTextSurface surface)
    //{
    //    this.surfaces.Add(surface);
    //}

    public void Clear()
    {
        foreach (var s in surfaces)
        {
            s.WriteText(string.Empty, false);
        }
    }

    public void Write(string text)
    {
        foreach (var s in surfaces)
        {
            s.WriteText(text, true);
        }
    }
}

public class StatusMenuItem : IMenuItem
{
    readonly Action action;
    readonly Func&lt;string&gt; text;

    public StatusMenuItem(Func&lt;string&gt; textAction, Action action)
    {
        this.text = textAction;
        this.action = action;
    }

    public void Apply()
    {
        action();
    }

    public void Draw(IMySurfaceWrapper surface)
    {
        surface.Write(text());
    }
}

public class ToggleNumberMenuItem&lt;T&gt; : IMenuItem
{
    T[] tList;
    int index;
    Action&lt;T&gt; setAction;
    Func&lt;T&gt; getFunc;
    string propertyName;

    public ToggleNumberMenuItem(string propertyName, T[] tList, Func&lt;T&gt; getFunc, Action&lt;T&gt; setAction)
    {
        this.tList = tList;
        index = 0;
        this.setAction = setAction;
        this.propertyName = propertyName;
        this.getFunc = getFunc;
    }
    public void Apply()
    {
        if (tList[index].Equals(getFunc()))
        {
            index = (index + 1) % tList.Length;
        }
        else
        {
            index = 1;
        }
        setAction(tList[index]);
    }

    public void Draw(IMySurfaceWrapper surface)
    {
        surface.Write($"{propertyName}: {getFunc()}");
    }
}

public class MenuItem : IMenuItem
{
    readonly Action action;
    readonly string text;

    public MenuItem(string text, Action action)
    {
        this.text = text;
        this.action = action;
    }

    public void Apply()
    {
        action();
    }

    public void Draw(IMySurfaceWrapper surface)
    {
        surface.Write(text);
    }
}

public interface IDisplayUI
{
    void Push(Menu menu);
    void Pop();
}

public class Menu : IMenuItem
{
    protected readonly List&lt;IMenuItem&gt; choices = new List&lt;IMenuItem&gt;();
    protected int caretIndex = 0;
    readonly string title = "&lt;Menu&gt;";
    readonly IDisplayUI parent;

    public Menu(IDisplayUI parent, string name)
    {
        this.parent = parent;
        title = name;
    }

    public virtual void Render(IMySurfaceWrapper surface)
    {
        int i = 0;
        foreach (var c in choices)
        {
            if (caretIndex == i)
            {
                surface.Write("&gt;");
            }
            else surface.Write(" ");
            WriteEntry(i++, surface);
            surface.Write("\n");
        }
        while (i &lt; 9)
        {
            surface.Write("\n");
            ++i;
        }
    }

    protected virtual void WriteEntry(int i, IMySurfaceWrapper surface)
    {
        choices[i].Draw(surface);
    }

    public void Add(IMenuItem item)
    {
        choices.Add(item);
    }

    public void Apply()
    {
        //choices[caretIndex].Apply();
        parent.Push(this);
    }

    public void Up()
    {
        --caretIndex;
        if (caretIndex &lt; 0) caretIndex = 0;
    }
    public void Down()
    {
        ++caretIndex;
        if (caretIndex &gt;= choices.Count) caretIndex = choices.Count-1;
    }

    public void Action()
    {
        choices[caretIndex].Apply();
    }

    public void Draw(IMySurfaceWrapper surface)
    {
        surface.Write(title);
    }
}

public class DisplayUI : AbstractDisplay, IDisplayUI
{
    readonly Stack&lt;Menu&gt; menuStack = new Stack&lt;Menu&gt;();
    readonly IMySurfaceWrapper surface;
    public string Status { get; set; }
    public string Message { get; set; }

    public IMenuItem Back
    {
        get; private set;
    }

    public DisplayUI(ProgramCore pc, IMyGridTerminalSystem gts, string tag) : base(tag)
    {
        Status = "Status";
        Message = "";
        Back = new MenuItem("Back", () =&gt; { this.Pop(); });
        UpdateBlocks(gts, null);
        surface = new TextImpl(Surfaces);
        pc.AddCommand("up", Up);
        pc.AddCommand("down", Down);
        pc.AddCommand("apply", Apply);
        var root = new Menu(this, "&lt;Root Menu&gt;");
        Push(root);
        Render();
    }

    public void Render()
    {
        surface.Clear();
        surface.Write($"{Status}\n");
        surface.Write("====\n");
        //Write the status.
        //Loop to write the choices; add the caret where it belongs.
        //Write the message.
        menuStack.Peek().Render(surface);
        surface.Write("====\n");
        surface.Write($"{Message}\n");
    }

    public void Up()
    {
        menuStack.Peek().Up();
        Render();
    }

    public void Down()
    {
        menuStack.Peek().Down();
        Render();
    }

    public void Apply()
    {
        Message = "";
        try
        {
            menuStack.Peek().Action();
        }
        catch (NullReferenceException)
        {
            Message = "Can't act. Null Reference Caught.";
        }
        Render();
    }

    public void Push(Menu menu)
    {
        menuStack.Push(menu);
    }

    public void Pop()
    {
        menuStack.Pop();
    }

    public void Add(IMenuItem item)
    {
        menuStack.Peek().Add(item);
        Render();
    }
}

public class GyroControl : IUpdateBlocks
{
    const double maxAngular = 6.2;
    //const double gyroProportionalGain = 10;
    //const double gyroDerivativeGain = 2.0;
    //const double gyroProportionalGain = 9.00;
    //const double gyroDerivativeGain = 4.80;
    //const double gyroProportionalGain = 7.25;
    //const double gyroDerivativeGain = 4.40;
    const double gyroProportionalGain = 1.00;
    const double gyroDerivativeGain = 0.0;
    const double gyroIntegralGain = 0.0;
    readonly PID pitchPID;
    public PID yawPID;
    readonly PID rollPID;
    private readonly string groupName;
    readonly IMyShipController rc;

    private readonly List&lt;IMyGyro&gt; gyros = new List&lt;IMyGyro&gt;();

    public bool Override
    {
        get
        {
            return gyros.First().GyroOverride;
        }
        internal set
        {
            foreach (var g in gyros) g.GyroOverride = value;
        }

    }

    public GyroControl(double timestep, IMyGridTerminalSystem gts, IMyRemoteControl rc, string groupName = null)
    {
        if (rc == null) throw new ArgumentNullException("rc");
        this.rc = rc;
        pitchPID = new PID(gyroProportionalGain, gyroIntegralGain, gyroDerivativeGain, timestep);
        yawPID = new PID(gyroProportionalGain, gyroIntegralGain, gyroDerivativeGain, timestep);
        rollPID = new PID(gyroProportionalGain, gyroIntegralGain, gyroDerivativeGain, timestep);
        this.groupName = groupName;
        UpdateBlocks(gts);
        foreach (var g in gyros)
        {
            g.Pitch = 0.0f;
            g.Yaw = 0.0f;
            g.Roll = 0.0f;
        }
    }

    public void UpdateBlocks(IMyGridTerminalSystem gts, IMyProgrammableBlock me = null)
    {
        gyros.Clear();
        if (groupName == null) gts.GetBlocksOfType(gyros, x =&gt; x.IsSameConstructAs(rc));
        else
        {
            var group = gts.GetBlockGroupWithName(groupName);
            group.GetBlocksOfType(gyros, x =&gt; x.IsSameConstructAs(rc));
        }
    }

    internal bool IsWorking()
    {
        return gyros.FirstOrDefault(x =&gt; x.IsWorking) != null;
    }

    internal void Rotate(Vector3D desiredGlobalFwdNormalized, Vector3D desiredGlobalUpDenormalized, Vector3D w)
    {
        double gp;
        double gy;
        double gr;
        //Rotate Toward forward
        if (rc.WorldMatrix.Forward.Dot(desiredGlobalFwdNormalized) &lt; 0.999999)
        {
            var waxis = Vector3D.Cross(rc.WorldMatrix.Forward, desiredGlobalFwdNormalized);
            Vector3D axis = Vector3D.TransformNormal(waxis, MatrixD.Transpose(rc.WorldMatrix));
            gp = (float)MathHelper.Clamp(pitchPID.Control(-axis.X), -maxAngular, maxAngular);
            gy = (float)MathHelper.Clamp(yawPID.Control(-axis.Y), -maxAngular, maxAngular);
        }
        else
        {
            gp = 0.0;
            gy = 0.0;
        }
        //Roll to up
        {
            var desiredUp = Vector3D.Normalize(desiredGlobalUpDenormalized);

            var waxis = Vector3D.Cross(rc.WorldMatrix.Up, desiredUp);
            Vector3D axis = Vector3D.TransformNormal(waxis, MatrixD.Transpose(rc.WorldMatrix));
            gr = (float)MathHelper.Clamp(rollPID.Control(-axis.Z), -maxAngular, maxAngular);
        }
        const double sigma = 0.00009;
        if (Math.Abs(gp) &lt; sigma) gp = 0;
        if (Math.Abs(gy) &lt; sigma) gy = 0;
        if (Math.Abs(gr) &lt; sigma * 100) gr = 0;
        w = Vector3D.TransformNormal(w, MatrixD.Transpose(rc.WorldMatrix));
        ApplyGyroOverride(gp + w.X, gy + w.Y, gr + w.Z, gyros, rc.WorldMatrix);
    }

    internal void Rotate(Vector3D desiredGlobalFwdNormalized, Vector3D desiredGlobalUpDenormalized)
    {
        double gp;
        double gy;
        double gr;
        //Rotate Toward forward
        if (rc.WorldMatrix.Forward.Dot(desiredGlobalFwdNormalized) &lt; 0.9999)
        {
            var waxis = Vector3D.Cross(rc.WorldMatrix.Forward, desiredGlobalFwdNormalized);
            Vector3D axis = Vector3D.TransformNormal(waxis, MatrixD.Transpose(rc.WorldMatrix));
            gp = (float)MathHelper.Clamp(pitchPID.Control(-axis.X), -maxAngular, maxAngular);
            gy = (float)MathHelper.Clamp(yawPID.Control(-axis.Y), -maxAngular, maxAngular);
        }
        else
        {
            gp = 0.0;
            gy = 0.0;
        }
        //Roll to up
        {
            var desiredUp = Vector3D.Normalize(desiredGlobalUpDenormalized);

            var waxis = Vector3D.Cross(rc.WorldMatrix.Up, desiredUp);
            Vector3D axis = Vector3D.TransformNormal(waxis, MatrixD.Transpose(rc.WorldMatrix));
            gr = (float)MathHelper.Clamp(rollPID.Control(-axis.Z), -maxAngular, maxAngular);
        }
        const double sigma = 0.0009;
        if (Math.Abs(gp) &lt; sigma) gp = 0;
        if (Math.Abs(gy) &lt; sigma) gy = 0;
        if (Math.Abs(gr) &lt; sigma*100) gr = 0;
        ApplyGyroOverride(gp, gy, gr, gyros, rc.WorldMatrix);
    }

    public void Rotate(double yaw, double pitch, double roll)
    {
        ApplyGyroOverride(pitch, yaw, roll, gyros, rc.WorldMatrix);
    }

    /*
            Whip's ApplyGyroOverride - Last modified: 2020/08/27
            Takes pitch, yaw, and roll speeds relative to the gyro's backwards
            ass rotation axes.
            */
    static private void ApplyGyroOverride(double pitchSpeed, double yawSpeed, double rollSpeed, List&lt;IMyGyro&gt; gyroList, MatrixD worldMatrix)
    {
        var rotationVec = new Vector3D(pitchSpeed, yawSpeed, rollSpeed);
        var relativeRotationVec = Vector3D.TransformNormal(rotationVec, worldMatrix);

        foreach (var thisGyro in gyroList)
        {
            var transformedRotationVec = Vector3D.TransformNormal(relativeRotationVec, Matrix.Transpose(thisGyro.WorldMatrix));

            thisGyro.Pitch = (float)transformedRotationVec.X;
            thisGyro.Yaw = (float)transformedRotationVec.Y;
            thisGyro.Roll = (float)transformedRotationVec.Z;
            thisGyro.GyroOverride = true;
        }
    }
}

public static readonly string BROADCAST_TAG = "IGCDATALINK";
public static readonly string UNICAST_TAG = "UNICAST_TAG";
public static readonly string PAIR_REQUEST = "PAIR";

public static readonly string FIRE_MSG = "FIREMSG";
public static readonly string READY_MSG = "RDY";

public struct InterceptComputer
{
    public Vector3D ApproachDir;
    private Vector3D slipDir;
    public Vector3D SlipDir { get { return slipDir; } }

    private Vector3D relVel;
    readonly double slipMag;
    private readonly double distance;
    public InterceptComputer(Vector3D relPos, Vector3D relVel)
    {
        this.relVel = relVel;
        this.ApproachDir = Vector3D.Normalize(relPos);
        var approachTerm = relPos * relVel.Dot(relPos) / relPos.Dot(relPos);

        slipDir = relVel - approachTerm;
        distance = relPos.Normalize();
        if (!slipDir.IsZero())
        {
            slipMag = slipDir.Normalize();
        }
        else slipMag = 0.0;
    }

    public Vector3D Intercept(double maxVel2)
    {
        var desiredApproachMag = Math.Sqrt(maxVel2 - slipMag * slipMag);

        var travelDir = slipDir * slipMag + ApproachDir * desiredApproachMag;
        //travelMag =
        travelDir.Normalize();
        return travelDir;
    }

    public Vector3D ComputeSlipAccel(double n, double accelN, Vector3D gravity, Vector3D targetAccel = new Vector3D())
    {
        var rangeVector = ApproachDir * distance;

        var rangeVectorNormal = ApproachDir;

        //HACK: Convince yourself that 1 is correct at the end.
        Vector3D rotationVector = Vector3D.Cross(ApproachDir * distance, relVel) / Math.Max((ApproachDir * distance).LengthSquared(), 1);
        Vector3D compensateVector = Vector3D.Cross(rotationVector, rangeVectorNormal) * relVel.Length();

        //TODO: Add this in later
        //Vector3D targetANVector = targetInfo.GuessAcceleration - (targetInfo.GuessAcceleration.Dot(ref rangeVectorNormal) * rangeVectorNormal);
        var targetAnV = Vector3D.ProjectOnPlane(ref targetAccel, ref rangeVectorNormal);
        targetAnV *= accelN *0.5;

        var gravSlip = gravity - (rangeVector * gravity.Dot(rangeVector) / rangeVector.LengthSquared());

        return n * compensateVector - gravity + targetAnV;
    }
}

public class InventoryContainer
{
    readonly static List&lt;MyInventoryItem&gt; inventoryItemsTemporaryStorage = new List&lt;MyInventoryItem&gt;();
    readonly static List&lt;MyItemType&gt; typesTemporaryStorage = new List&lt;MyItemType&gt;();
    readonly IMyEntity entity;
    readonly IMyTerminalBlock tb;
    readonly string INVQUOTA = "BMCInv";
    readonly string SPECIAL = "[special]";
    readonly public Dictionary&lt;MyItemType, MyFixedPoint&gt; needs = new Dictionary&lt;MyItemType, MyFixedPoint&gt;();

    public InventoryContainer(IMyEntity entity)
    {
        tb = (IMyTerminalBlock)entity;
        this.entity = entity;
        if (tb.CustomName.Contains(SPECIAL))
        {
            var ini = new MyIni();
            if (ini.TryParse(tb.CustomData, INVQUOTA))
            {
                List&lt;MyItemType&gt; types = new List&lt;MyItemType&gt;();
                entity.GetInventory().GetAcceptedItems(types);
                foreach (var quotaItem in types)
                {
                    var amt = ini.Get(INVQUOTA, quotaItem.SubtypeId).ToDouble();
                    if (amt &gt; 0)
                    {
                        needs.Add(quotaItem, (MyFixedPoint)amt);
                    }
                }
            }
        }
    }

    public override string ToString()
    {
        return entity.DisplayName;
    }

    public void GetSupplyAndDemand(Dictionary&lt;string, List&lt;MyTuple&lt;IMyInventory, MyInventoryItem&gt;&gt;&gt; surplus, Dictionary&lt;MyItemType, List&lt;MyTuple&lt;IMyInventory, MyFixedPoint&gt;&gt;&gt; demand)
    {
        ConsolidateContainer();
        string allowedType = GetAllowedType();
        for (int i = 0; i &lt; entity.InventoryCount; ++i)
        {
            var inventory = entity.GetInventory(i);
            inventoryItemsTemporaryStorage.Clear();
            inventory.GetItems(inventoryItemsTemporaryStorage);
            foreach (var invItem in inventoryItemsTemporaryStorage)
            {
                if (i &gt; 0 || (allowedType != "" &amp;&amp; invItem.Type.TypeId != allowedType))
                {
                    surplus[invItem.Type.TypeId].Add(new MyTuple&lt;IMyInventory, MyInventoryItem&gt;(inventory, invItem));
                }
            }
            //Some blocks have multiple inventories. For now, we only use the needs for the first one.
            if (i == 0)
            {
                if (needs.Count &gt; 0)
                {
                    foreach (var need in needs)
                    {
                        MyFixedPoint vl = need.Value;
                        var item = inventory.FindItem(need.Key);
                        if (item != null)
                        {
                            vl -= ((MyInventoryItem)item).Amount;
                        }
                        if (vl &gt; 0)
                        {
                            List&lt;MyTuple&lt;IMyInventory, MyFixedPoint&gt;&gt; result;
                            if (!demand.TryGetValue(need.Key, out result))
                            {
                                result = new List&lt;MyTuple&lt;IMyInventory, MyFixedPoint&gt;&gt;();
                                demand[need.Key] = result;
                            }
                            result.Add(new MyTuple&lt;IMyInventory, MyFixedPoint&gt;(inventory, vl));
                        }
                    }
                }
            }
        }
    }
    public void FillSurplus(Dictionary&lt;string, List&lt;MyTuple&lt;IMyInventory, MyInventoryItem&gt;&gt;&gt; surplus, Dictionary&lt;MyItemType, List&lt;MyTuple&lt;IMyInventory, MyFixedPoint&gt;&gt;&gt; demand)
    {
        string allowedType = GetAllowedType();
        var inventory = entity.GetInventory();
        if (inventory.IsFull) return;
        //Fill empties from surplus
        foreach (var itemType in surplus.Keys)
        {
            if (allowedType == itemType || allowedType == "")
                foreach (var surplusItem in surplus[itemType])
                {
                    inventory.TransferItemFrom(surplusItem.Item1, surplusItem.Item2);
                }
        }
        //Give excess to needs
        foreach (var d in demand)
        {
            var findItem = inventory.FindItem(d.Key);
            if (findItem != null)
            {
                for(int i = d.Value.Count-1; i&gt;=0; --i)
                {
                    var want = d.Value[i];
                    var srcAmt = ((MyInventoryItem)findItem).Amount;
                    //Assume the transfer will work.
                    if (inventory.TransferItemTo(want.Item1, (MyInventoryItem)findItem, want.Item2))
                    {
                        //E($"Supplying: {srcAmt} {((MyInventoryItem)findItem).Type.SubtypeId}");
                        if (want.Item2 &lt;= srcAmt)
                        {
                            d.Value.RemoveAtFast(i);
                        }
                        else
                        {
                            d.Value[i] = new MyTuple&lt;IMyInventory, MyFixedPoint&gt;(want.Item1, want.Item2-srcAmt);
                        }
                    }
                }
            }
        }
    }

    public IMyInventory Inventory
    {
        get { return entity.GetInventory(); }
    }

    public void RefreshInventory(Dictionary&lt;MyItemType, double&gt; count)
    {
        for (int i = 0; i &lt; entity.InventoryCount; ++i)
        {
            var inventory = entity.GetInventory(i);
            inventoryItemsTemporaryStorage.Clear();
            inventory.GetItems(inventoryItemsTemporaryStorage);
            foreach (var inventoryItem in inventoryItemsTemporaryStorage)
            {
                if (count.ContainsKey(inventoryItem.Type)) count[inventoryItem.Type] += (double)inventoryItem.Amount;
                else count.Add(inventoryItem.Type, (double)inventoryItem.Amount);
            }
        }
    }

    private void ConsolidateContainer()
    {
        for (int i = 0; i &lt; entity.InventoryCount; ++i)
        {
            var inventory = entity.GetInventory(i);
            inventoryItemsTemporaryStorage.Clear();
            inventory.GetItems(inventoryItemsTemporaryStorage);
            typesTemporaryStorage.Clear();
            foreach (var inventoryItem in inventoryItemsTemporaryStorage)
            {
                if (typesTemporaryStorage.Contains(inventoryItem.Type))
                    inventory.TransferItemTo(inventory, inventoryItem);
                else
                    typesTemporaryStorage.Add(inventoryItem.Type);
            }
        }
    }

    private string GetAllowedType()
    {
        string allowedType = "";
        var terminalBlock = tb;
        if (terminalBlock.CustomName.Contains("[ore]")) allowedType = "MyObjectBuilder_Ore";
        else if (terminalBlock.CustomName.Contains("[ingot]")) allowedType = "MyObjectBuilder_Ingot";
        else if (terminalBlock.CustomName.Contains("[component]")) allowedType = "MyObjectBuilder_Component";
        else if (terminalBlock.CustomName.Contains("[ammo]")) allowedType = "MyObjectBuilder_Ammo";
        else if (terminalBlock.CustomName.Contains("[tool]")) allowedType = "MyObjectBuilder_Tool";
        return allowedType;
    }
}

public class InventoryManager : IUpdateBlocks
{
    readonly List&lt;InventoryContainer&gt; cargo = new List&lt;InventoryContainer&gt;();
    readonly Dictionary&lt;MyItemType, double&gt; count = new Dictionary&lt;MyItemType, double&gt;();
    readonly Quota quota;
    readonly AssemblerManager assembler;
    readonly Dictionary&lt;string, List&lt;MyTuple&lt;IMyInventory, MyInventoryItem&gt;&gt;&gt; surplus = new Dictionary&lt;string, List&lt;MyTuple&lt;IMyInventory, MyInventoryItem&gt;&gt;&gt;();
    readonly Dictionary&lt;MyItemType, List&lt;MyTuple&lt;IMyInventory, MyFixedPoint&gt;&gt;&gt; demand = new Dictionary&lt;MyItemType, List&lt;MyTuple&lt;IMyInventory, MyFixedPoint&gt;&gt;&gt;();
    readonly Action&lt;string&gt; Echo;
    const string quotaHdr = "BMCQuota";
    readonly List&lt;MyItemType&gt; allowedTypes = new List&lt;MyItemType&gt;();

    public InventoryManager(IMyGridTerminalSystem gts, IMyProgrammableBlock me, Action&lt;string&gt; echo)
    {
        var data = me.CustomData;
        {
            surplus.Add("MyObjectBuilder_Ore", new List&lt;MyTuple&lt;IMyInventory, MyInventoryItem&gt;&gt;());
            surplus.Add("MyObjectBuilder_Ingot", new List&lt;MyTuple&lt;IMyInventory, MyInventoryItem&gt;&gt;());
            surplus.Add("MyObjectBuilder_Component", new List&lt;MyTuple&lt;IMyInventory, MyInventoryItem&gt;&gt;());
            surplus.Add("MyObjectBuilder_Ammo", new List&lt;MyTuple&lt;IMyInventory, MyInventoryItem&gt;&gt;());
            surplus.Add("MyObjectBuilder_Tool", new List&lt;MyTuple&lt;IMyInventory, MyInventoryItem&gt;&gt;());
        }

        assembler = new AssemblerManager(gts, me, echo);

        var c = new List&lt;IMyCubeBlock&gt;();
        gts.GetBlocksOfType(c, x=&gt;x.HasInventory);
        foreach (var e in c)
        {
            cargo.Add(new InventoryContainer(e));
        }
        {
            allowedTypes = new List&lt;MyItemType&gt;();
            var max = c.FirstOrDefault(x =&gt; x.BlockDefinition.SubtypeId.Contains("Container"));
            max?.GetInventory().GetAcceptedItems(allowedTypes);
            quota = MakeQuota(data, quotaHdr);
            echo($"Quota count: {quota.Keys.Count()}\nChoices: {c.Count}\nUsed: {max?.DisplayNameText}");
        }
        Echo = echo;
    }

    public Quota MakeQuota(string data, string quotaHdr)
    {
        return new Quota(data, quotaHdr, allowedTypes);
    }

    public void UpdateBlocks(IMyGridTerminalSystem gts, IMyProgrammableBlock me)
    {
        assembler.UpdateBlocks(gts, me);
    }

    public Quota Quota
    {
        get { return quota; }
    }

    public Dictionary&lt;MyItemType, double&gt; GetInventory()
    {
        count.Clear();
        foreach (var c in cargo)
        {
            c.RefreshInventory(count);
        }
        return count;
    }

    public void AutoBuild()
    {
        GetInventory();
        //if (count.Count == 0) RunQuota();
        Diff diff = quota.Diff(count);

        diff.Assemble(assembler);
        //Predict finish time.
        //Wake up at finish time.
    }

    public void AutoDissassemble()
    {
        GetInventory();

        //if (count.Count == 0) RunQuota();
        Diff diff = quota.Diff(count);

        diff.Disassemble(assembler);
    }

    public void Refine()
    {
        GetInventory();

        //If there are high priority ores, set the filters for those, and set a wakeup to run Refine again.
        //If there are not high priority ores, set the filters for low and high.
    }

    public void SortContainers()
    {
        foreach (var entry in surplus.Values)
        {
            entry.Clear();
        }
        demand.Clear();
        //In pass #1 we merely look at everything to take a second, action pass.
        foreach (var container in cargo)
        {
            container.GetSupplyAndDemand(surplus, demand);
        }
        foreach (var container in cargo)
        {
            container.FillSurplus(surplus, demand);
        }
    }

    internal IMyInventory MostSpace()
    {
        Echo("IM119");
        foreach (var container in cargo)
        {
            Echo($"IM122 '{container}'");
            if (container != null)
            {
                Echo("IM125");
                double avail = (double)(container.Inventory.MaxVolume - container.Inventory.CurrentVolume);
                if (avail &gt; 7.5010) return container.Inventory;
                Echo($"IM127 {avail}");
            }
        }
        return null;
    }
}

public delegate void IUpdate(double elapsedTime);

public interface IUpdateBlocks
{
    void UpdateBlocks(IMyGridTerminalSystem gts, IMyProgrammableBlock me);
}

public class LifeSupportManager : IUpdateBlocks
{
    readonly List&lt;IMyGasGenerator&gt; H2O2gens = new List&lt;IMyGasGenerator&gt;();
    readonly List&lt;IMyOxygenFarm&gt; oxyFarms = new List&lt;IMyOxygenFarm&gt;();
    readonly List&lt;IMyGasTank&gt; oxyTanks = new List&lt;IMyGasTank&gt;();
    readonly List&lt;IMyGasTank&gt; hydroTanks = new List&lt;IMyGasTank&gt;();

    //optional: Airlock doors during hydro only upcycle. May not need it?

    //readonly double oxygenFull = 95.0;
    //readonly double oxygenLow = 50.0;

    public LifeSupportManager(ProgramCore pc, IMyGridTerminalSystem gts, IMyProgrammableBlock me)
    {
        UpdateBlocks(gts, me);
        pc.AddCommand("toggleH2",ToggleH2);
        pc.AddCommand("toggleH2stock", ToggleH2Tanks);
    }

    public void ToggleH2()
    {
        bool allOn = true;
        foreach (var h2 in H2O2gens)
        {
            allOn &amp;= h2.Enabled;
        }

        foreach (var h2 in H2O2gens)
        {
            h2.Enabled = !allOn;
        }
    }

    public void ToggleBatteries()
    {
        bool allOn = true;
    }

    public void ToggleH2Tanks()
    {
        bool allOn = true;
        foreach (var h2 in hydroTanks)
        {
            allOn &amp;= h2.Stockpile;
        }

        foreach (var h2 in hydroTanks)
        {
            h2.Stockpile = !allOn;
        }
    }

    public string ToggleH2Status()
    {
        int on = 0;
        int off = 0;
        foreach (var h2 in H2O2gens)
        {
            if (h2.Enabled) ++on;
            else ++off;
        }
        string offStr = $"; {off} off";
        return $"Toggle H2O2 to {(off==0?"off":"on")} ({on} on{(off &gt; 0 ? offStr : string.Empty)})";
    }

    public string ToggleH2Stockpile()
    {
        int on = 0;
        int off = 0;
        foreach (var h2 in hydroTanks)
        {
            if (h2.Stockpile) ++on;
            else ++off;
        }
        string offStr = $"; {off} off";
        return $"Toggle H2 Stockpile to {(off == 0 ? "off" : "on")} ({on} on{(off &gt; 0 ? offStr : string.Empty)})";
    }

    public void UpdateBlocks(IMyGridTerminalSystem gts, IMyProgrammableBlock me)
    {
        gts.GetBlocksOfType(oxyTanks, x =&gt; x.IsSameConstructAs(me) &amp;&amp; !IsHydrogenTank(x));
        gts.GetBlocksOfType(hydroTanks, x =&gt; x.IsSameConstructAs(me) &amp;&amp; IsHydrogenTank(x));
        gts.GetBlocksOfType(oxyFarms, x =&gt; x.IsSameConstructAs(me));
        gts.GetBlocksOfType(H2O2gens, x =&gt; x.IsSameConstructAs(me));
        foreach (var gen in H2O2gens)
        {
            gen.AutoRefill = true;
            gen.Enabled = false;
        }
    }

    bool IsHydrogenTank(IMyGasTank block)
    {
        if (block.BlockDefinition.TypeId != oxygenTankId.TypeId)
            return false;

        var resourceSink = block.Components.Get&lt;MyResourceSinkComponent&gt;();
        return resourceSink != null &amp;&amp; resourceSink.AcceptedResources.Contains(hydrogenGasId);
    }

    public void DoBoost()
    {
        bool boostOxy = false;
        bool boostHydro = true;
        GenerateGas(boostHydro, boostOxy);
        if (!boostOxy)
        {
            //Set time for 30 secs. You are hosing airlocks during this time.
        }
        else
        {
            //If both... set timer for first of either to be done.
        }
    }

    public void GenerateGas(bool hydroOn, bool oxyOn)
    {
        foreach (var farm in oxyFarms)
        {
            //It's OK to have the farms going if the ice is off.
            farm.Enabled = oxyOn | !hydroOn;
        }
        foreach (var tank in oxyTanks)
        {
            tank.Enabled = oxyOn;
        }
        foreach (var tank in hydroTanks)
        {
            tank.Enabled = hydroOn;
        }
        foreach (var gen in H2O2gens)
        {
            gen.Enabled = hydroOn | oxyOn;
        }
    }
}

public class LifeSupportUIText
{
    public LifeSupportUIText(LifeSupportManager lsm, DisplayUI dui)
    {
        var lsMenu = new Menu(dui, "Life Support &amp; Power");
        dui.Add(lsMenu);
        lsMenu.Add(dui.Back);
        lsMenu.Add(new StatusMenuItem(() =&gt; lsm.ToggleH2Status(), () =&gt; lsm.ToggleH2()));
        lsMenu.Add(new StatusMenuItem(() =&gt; lsm.ToggleH2Stockpile(), () =&gt; lsm.ToggleH2Tanks()));
    }
}

public class NavigationUIText
{
    public NavigationUIText(BasicNavigation rtu, DisplayUI dui)
    {
        var ccMenu = new Menu(dui, "Navigation");
        dui.Add(ccMenu);
        ccMenu.Add(dui.Back);

        ccMenu.Add(new MenuItem("Stop", () =&gt; { rtu.Stop(); }));
        ccMenu.Add(new ToggleNumberMenuItem&lt;double&gt;("Ahead", new double[] { 0, 25, 50, 75, 99 }, () =&gt; rtu.TargetSpeed, (x) =&gt; { rtu.TargetSpeed = x; }));
        ccMenu.Add(new MenuItem("Altitude +500", () =&gt; { rtu.Add500(); dui.Message = $"Alt: {rtu.TargetElevation:F0}"; }));
        ccMenu.Add(new MenuItem("Altitude -500", () =&gt; { rtu.Drop500(); dui.Message = $"Alt: {rtu.TargetElevation:F0}"; }));
        ccMenu.Add(new MenuItem("Dock Lase", () =&gt; { if (rtu.Dock()) dui.Message = $"On route to target."; }));
        ccMenu.Add(new MenuItem("Align to Gravity", rtu.Align));

        //var ascent = new Menu(dui, "Ascend to Orbit");
        //ccMenu.Add(ascent);
        //ascent.Add(dui.Back);
        //ascent.Add(new MenuItem("On", () =&gt;
        //{
        //    IMyProgrammableBlock pb = (IMyProgrammableBlock)GridTerminalSystem.GetBlockWithName("Ascent");
        //    pb.TryRun("on");
        //}));
        //ascent.Add(new MenuItem("Off", () =&gt;
        //{
        //    IMyProgrammableBlock pb = (IMyProgrammableBlock)GridTerminalSystem.GetBlockWithName("Ascent");
        //    pb.TryRun("off");
        //}));
    }
}


/// &lt;summary&gt;
        /// Discrete time PID controller class.
        /// (Whiplash141 - 11/22/2018)
        /// &lt;/summary&gt;
public class PID
{
    readonly double _kP = 0;
    readonly double _kI = 0;
    readonly double _kD = 0;

    double _timeStep = 0;
    public double InverseTimeStep { get; protected set; }
    double _errorSum = 0;
    double _lastError = 0;
    bool _firstRun = true;

    public double Value { get; private set; }

    public PID(double kP, double kI, double kD, double timeStep)
    {
        _kP = kP;
        _kI = kI;
        _kD = kD;
        _timeStep = timeStep;
        InverseTimeStep = 1 / _timeStep;
    }

    protected virtual double GetIntegral(double currentError, double errorSum, double timeStep)
    {
        return errorSum + currentError * timeStep;
    }

    public double Control(double error)
    {
        //Compute derivative term
        var errorDerivative = (error - _lastError) * InverseTimeStep;

        if (_firstRun)
        {
            errorDerivative = 0;
            _firstRun = false;
        }

        //Get error sum
        _errorSum = GetIntegral(error, _errorSum, _timeStep);

        //Store this error as last error
        _lastError = error;

        //Construct output
        this.Value = _kP * error + _kI * _errorSum + _kD * errorDerivative;
        return this.Value;
    }

    public double Control(double error, double timeStep)
    {
        if (timeStep != _timeStep)
        {
            _timeStep = timeStep;
            InverseTimeStep = 1 / _timeStep;
        }
        return Control(error);
    }

    public void Reset()
    {
        _errorSum = 0;
        _lastError = 0;
        _firstRun = true;
    }
}

public interface IProgramCore
{
    void AddUpdate10(IUpdate update10);
    void AddUpdate6(IUpdate update6);
    bool RemoveUpdate6(IUpdate update);
    void AddUpdate1(IUpdate update1);
    void AddUpdate100(IUpdate update100);
    void Add(IUpdateBlocks update);
}

public class ProgramCore : IProgramCore
{
    public delegate void Callback(MyIGCMessage msg);
    readonly List&lt;MyTuple&lt;IMyBroadcastListener, Callback&gt;&gt; broadcastListeners;
    readonly List&lt;IUpdate&gt; updates1;
    readonly List&lt;IUpdate&gt; updates6;
    readonly List&lt;IUpdate&gt; updates10;
    readonly List&lt;IUpdate&gt; updates100;
    readonly List&lt;IUpdateBlocks&gt; updateBlocks = new List&lt;IUpdateBlocks&gt;();
    readonly IMyGridProgramRuntimeInfo runtime;
    readonly Dictionary&lt;string, Action&gt; commands = new Dictionary&lt;string, Action&gt;();
    readonly Dictionary&lt;string, Action&lt;MyCommandLine.ItemCollection&gt;&gt; argCommands= new Dictionary&lt;string, Action&lt;MyCommandLine.ItemCollection&gt;&gt;();
    int frame = 0;
    int frame100 = 0;
    private Callback unicastCallback;
    private readonly IMyGridTerminalSystem gts;
    readonly IMyIntergridCommunicationSystem IGC;
    private readonly IMyProgrammableBlock me;
    //readonly Action&lt;string&gt; Echo;

    /// &lt;summary&gt;
            /// This runs like a clock since the PB has been running.
            /// &lt;/summary&gt;
    public double ElapsedTime { get; private set; }
    public bool On
    {
        get
        {
            return (runtime.UpdateFrequency &amp; (UpdateFrequency.Update1 | UpdateFrequency.Update10 | UpdateFrequency.Update100)) &gt; 0;
        }
        set
        {
            if (value == true)
            {
                runtime.UpdateFrequency = ((updates6.Count &gt; 0 || updates1.Count &gt; 0) ? UpdateFrequency.Update1 : 0) |
                    ((updates10.Count &gt; 0) ? UpdateFrequency.Update10 : 0) |
                    ((updates100.Count &gt; 0)  || (updateBlocks.Count &gt; 0) ? UpdateFrequency.Update100 : 0);
            }
            else
            {
                runtime.UpdateFrequency = UpdateFrequency.None;
            }
        }
    }

    public ProgramCore(IMyGridProgramRuntimeInfo runtime, IMyIntergridCommunicationSystem IGC, IMyGridTerminalSystem gts = null, IMyProgrammableBlock me = null)
    {
        //this.Echo = Echo;
        this.IGC = IGC;

        updates1 = new List&lt;IUpdate&gt;();
        updates6 = new List&lt;IUpdate&gt;();
        updates10 = new List&lt;IUpdate&gt;();
        updates100 = new List&lt;IUpdate&gt;();

        this.runtime = runtime;

        broadcastListeners = new List&lt;MyTuple&lt;IMyBroadcastListener, Callback&gt;&gt;();
        IGC.UnicastListener.SetMessageCallback(UNICAST_TAG);
        unicastCallback = null;
        this.gts = gts;
        this.me = me;
    }

    internal void Save()
    {
    }

    internal void Main(string argument, UpdateType updateSource)
    {
        ElapsedTime += (double)runtime.TimeSinceLastRun.TotalSeconds;
        if ((updateSource &amp; UpdateType.IGC) &gt; 0)
        {
            foreach (var bl in broadcastListeners)
            {
                while (bl.Item1.HasPendingMessage)
                {
                    MyIGCMessage msg = bl.Item1.AcceptMessage();
                    bl.Item2(msg);
                }
            }
            while (unicastCallback != null &amp;&amp; IGC.UnicastListener.HasPendingMessage)
            {
                MyIGCMessage msg = IGC.UnicastListener.AcceptMessage();
                unicastCallback(msg);
            }
        }
        if ((updateSource &amp; UpdateType.Update1) &gt; 0)
        {
            frame++;
            if (frame % 6 == 0)
            {
                var listSize = updates6.Count;
                for(int i = 0; i &lt; listSize; ++i)
                {
                    updates6[i](ElapsedTime);
                }
            }
            {
                var listSize = updates1.Count;
                for (int i = listSize-1; i&gt;=0; --i)
                {
                    updates1[i](ElapsedTime);
                }
            }
        }
        if ((updateSource &amp; UpdateType.Update10) &gt; 0)
        {
            var listSize = updates10.Count;
            for (int i = 0; i &lt; listSize; ++i)
            {
                updates10[i](ElapsedTime);
            }
        }
        if ((updateSource &amp; UpdateType.Update100) &gt; 0)
        {
            var listSize = updates100.Count;
            for (int i = 0; i &lt; listSize; ++i)
            {
                updates100[i](ElapsedTime);
            }
            frame100++;
            if (frame100 % 3 == 0)
            {
                foreach (var u in updateBlocks)
                {
                    u.UpdateBlocks(gts, me);
                }
            }
        }
        if ((updateSource &amp; (UpdateType.Terminal | UpdateType.Trigger| UpdateType.Script)) &gt; 0)
        {
            RunTextCommand(argument);
        }
    }

    internal void RunTextCommand(string argument)
    {
        MyCommandLine commandLine = new MyCommandLine();
        if (commandLine.TryParse(argument))
        {
            if (commandLine.ArgumentCount == 1)
            {
                Action v;
                if (commands.TryGetValue(argument.ToLower(), out v)) v();
            }
            else
            {
                Action&lt;MyCommandLine.ItemCollection&gt; v;
                if (argCommands.TryGetValue(commandLine.Argument(0).ToLower(), out v)) v(commandLine.Items);
            }
        }
    }
    public bool RemoveUpdate6(IUpdate update)
    {
        if (update == null) throw new ArgumentNullException("update");
        var result = updates6.Remove(update);
        if (updates1.Count + updates6.Count == 0) runtime.UpdateFrequency &amp;= ~UpdateFrequency.Update1;
        return result;
    }
    internal bool RemoveUpdate1(IUpdate update)
    {
        if (update == null) throw new ArgumentNullException("update");
        var result = updates1.Remove(update);
        if (updates1.Count + updates6.Count == 0) runtime.UpdateFrequency &amp;= ~UpdateFrequency.Update1;
        return result;
    }

    public void AddUpdate1(IUpdate update)
    {
        if (update == null) throw new ArgumentNullException("update");
        updates1.Add(update);
        runtime.UpdateFrequency |= UpdateFrequency.Update1;
    }
    public void AddUpdate6(IUpdate update)
    {
        if (update == null) throw new ArgumentNullException("update");
        updates6.Add(update);
        runtime.UpdateFrequency |= UpdateFrequency.Update1;
    }
    public void AddUpdate10(IUpdate update)
    {
        if (update == null) throw new ArgumentNullException("update");
        updates10.Add(update);
        runtime.UpdateFrequency |= UpdateFrequency.Update10;
    }

    public void AddUpdate100(IUpdate update)
    {
        if (update == null) throw new ArgumentNullException("update");
        updates100.Add(update);
        runtime.UpdateFrequency |= UpdateFrequency.Update100;
    }

    public void Add(IUpdateBlocks update)
    {
        if (update == null) throw new ArgumentNullException("update");
        updateBlocks.Add(update);
        runtime.UpdateFrequency |= UpdateFrequency.Update100;
    }

    internal void Add(string BROADCAST_TAG, Callback callback)
    {
        var listener = IGC.RegisterBroadcastListener(BROADCAST_TAG);
        listener.SetMessageCallback(BROADCAST_TAG);
        broadcastListeners.Add(new MyTuple&lt;IMyBroadcastListener, Callback&gt;(listener, callback));
    }

    internal void Add(Callback callback)
    {
        unicastCallback = callback;
    }

    internal void AddCommand(string v, Action p)
    {
        commands.Add(v.ToLower(), p);
    }

    internal void AddCommand(string v, Action&lt;MyCommandLine.ItemCollection&gt; p)
    {
        argCommands.Add(v.ToLower(), p);
    }
}

public class Propulsion
{
    readonly double propNavConstant = 3.0;
    readonly double propNavAccelConstant = 3.0;

    readonly PID thrustPID;
    double mass = 100000.0;
    double invMass = 0;
    double neededThrustMag;
    readonly List&lt;IVirtualThruster&gt; thrusters = new List&lt;IVirtualThruster&gt;(6);
    readonly IMyRemoteControl rc;
    readonly DisplayService ds;

    public Propulsion(IMyRemoteControl rc, IList&lt;IVirtualThruster&gt; thrusters, double myMaxSpeed, PID pid, double propNavConstant = 5.0, double propNavAccelConstant = 0.5, DisplayService ds = null)
    {
        this.ds = ds;
        this.propNavConstant = propNavConstant;
        this.propNavAccelConstant = propNavAccelConstant;
        this.rc = rc;
        this.thrusters.AddRange(thrusters);
        this.MaxSpeed = myMaxSpeed;
        thrustPID = pid;
        UpdateMass();
    }

    public Vector3D NeededThrustDir { get; private set; }
    public double MaxSpeed { get; internal set; }

    public void Stop()
    {
        rc.DampenersOverride = true;
        foreach (var thruster in thrusters)
        {
            thruster.ThrustOverridePercentage = 0;
            thruster.Enabled = true;
        }
    }

    public void On()
    {
        foreach (var thruster in thrusters)
        {
            thruster.Enabled = true;
        }
        rc.DampenersOverride = false;
    }

    public void Off()
    {
        rc.DampenersOverride = true;
        foreach (var thruster in thrusters)
        {
            thruster.ThrustOverridePercentage = 0;
            thruster.Enabled = false;
        }
    }

    public double MaxThrust(Vector3D directionVector)
    {
        return thrusters.Sum(x =&gt; Math.Max(0.0, x.MaxEffectiveThrust(directionVector)));
    }

    public double MaxAccel(Vector3D directionVector)
    {
        return thrusters.Sum(x =&gt; Math.Max(0.0, x.MaxEffectiveThrust(directionVector))) * invMass;
    }

    /// &lt;summary&gt;
            /// Pass through a stationary point. Possibly a waypoint.
            /// &lt;/summary&gt;
            /// &lt;param name="desiredWorldPosition"&gt;&lt;/param&gt;
            /// &lt;param name="worldGravity"&gt;&lt;/param&gt;
    public void Impact(Vector3D desiredWorldPosition, Vector3D worldGravity)
    {
        var lv = rc.GetShipVelocities().LinearVelocity;
        var travelDir = desiredWorldPosition - rc.GetPosition();
        var distance = travelDir.Normalize();

        Vector3D velError = travelDir * MaxSpeed - lv;
        Vector3D accelError = velError * thrustPID.InverseTimeStep;

        ActionThrust(mass * (accelError - worldGravity));
    }

    /// &lt;summary&gt;
            /// Intercept something moving at target velocity at WorldPosition. No worries about velocity when you pass it.
            /// &lt;/summary&gt;
            /// &lt;param name="desiredWorldPosition"&gt;&lt;/param&gt;
            /// &lt;param name="targetVelocity"&gt;&lt;/param&gt;
            /// &lt;param name="worldGravity"&gt;&lt;/param&gt;
    public void Impact(Vector3D desiredWorldPosition, Vector3D targetVelocity, Vector3D worldGravity, Vector3D targetAccel = new Vector3D())
    {
        var lv = rc.GetShipVelocities().LinearVelocity;
        InterceptComputer intercept = new InterceptComputer(desiredWorldPosition - rc.GetPosition(), targetVelocity - lv);
        var slipT = mass * intercept.ComputeSlipAccel(propNavConstant, propNavAccelConstant, worldGravity, targetAccel);

        var maxFwdThrust = thrusters[(int)Base6Directions.Direction.Forward].MaxEffectiveThrust();
        maxFwdThrust *= maxFwdThrust;
        var slipL2 = slipT.LengthSquared();
        Vector3D approachThrust;

        //Apply any leftover acceleration to approach thrust (up to maximum velocity)
        if (maxFwdThrust &gt; slipL2)
        {
            approachThrust = Math.Sqrt(maxFwdThrust - slipL2) * intercept.ApproachDir;
        }
        else approachThrust = Vector3D.Zero;

        ActionThrust(slipT + approachThrust);
    }

    /// &lt;summary&gt;
            /// Travel in a certain direction and velocity without worrying about position.
            /// &lt;/summary&gt;
            /// &lt;param name="desiredWorldVelocity"&gt;&lt;/param&gt;
            /// &lt;param name="worldGravity"&gt;&lt;/param&gt;
    public void Thrust(Vector3D desiredWorldVelocity, Vector3D worldGravity)
    {
        var velocityError = desiredWorldVelocity - rc.GetShipVelocities().LinearVelocity;
        Vector3D accelError = velocityError * thrustPID.InverseTimeStep;

        if (velocityError.LengthSquared() &lt; 0.001)
        {
            accelError = Vector3D.Zero;
        }
        ActionThrust(mass * (accelError - worldGravity));
    }

    /// &lt;summary&gt;
            /// Move to a position that is moving, but plan to match velocity exactly as you arrive.
            /// &lt;/summary&gt;
            /// &lt;param name="desiredWorldPosition"&gt;&lt;/param&gt;
            /// &lt;param name="desiredWorldVelocity"&gt;&lt;/param&gt;
            /// &lt;param name="worldGravity"&gt;&lt;/param&gt;
    public void Thrust(Vector3D desiredWorldPosition, Vector3D desiredWorldVelocity, Vector3D worldGravity)
    {
        //ds?.WriteText("V\n",false);
        var velocityError = desiredWorldVelocity - rc.GetShipVelocities().LinearVelocity;
        var positionError = desiredWorldPosition - rc.GetPosition();
        var dist = positionError.IsZero() ? 0.0 : positionError.Normalize();
        if (dist &gt; 0.001 || velocityError.LengthSquared() &gt; 0.001)
        {
            var aF = MaxAccel(positionError) + positionError.Dot(worldGravity);
            var aR = MaxAccel(-positionError) - positionError.Dot(worldGravity);

            var velInDir = velocityError.Dot(positionError);
            double x1;
            if (aF &gt; 0)
            {
                var theoreticalStartPos = velInDir * velInDir;
                theoreticalStartPos /= 2 * aF;
                var term2 = 1 + aR / aF;
                x1 = (dist + theoreticalStartPos) / term2;
            }
            else
            {
                if (aR &gt; 0)
                    x1 = velInDir * velInDir / (2 * aR);
                else x1 = 0.0;
            }

            double timeStep = 1.0 / thrustPID.InverseTimeStep;
            Vector3D posVelError;
            if (Math.Abs(dist) &lt;= Math.Abs(x1))
            {
                //ds?.WriteText("Brake\n");
                posVelError = positionError * velInDir;
            }
            else
            {
                var r = dist - x1;
                double a;
                if (dist &gt;= 0)
                {
                    a = MathHelper.Clamp(2 * (r + velInDir * timeStep) / (timeStep * timeStep), -aR, aF);
                    if (-aR &gt; 0 || aF &lt; 0) throw new Exception($"Bad clamp 1 {aR} {aF}");
                }
                else
                {
                    a = MathHelper.Clamp(2 * (r + velInDir * timeStep) / (timeStep * timeStep), -aF, aR);
                    if (aR &lt; 0 || -aF &gt; 0) throw new Exception($"Bad clamp 2 {aR} {aF}");
                }
                posVelError = (a * timeStep) * positionError;
                //ds?.WriteText($"PVE: {posVelError.Length():F2} TS: {timeStep:F2}\n");
                //ds?.WriteText($"D: {dist:F2} X1:{x1:F2}\n");
                //ds?.WriteText($"AF: {aF:F2} AR:{aR:F2}\n");
                //ds?.WriteText($"VU: {velUp:F2} AA:{a:F2}\n");
            }

            Vector3D finalVelError = posVelError + Vector3D.Reject(velocityError, positionError.IsZero() ? Vector3D.CalculatePerpendicularVector(velocityError) : positionError);
            double thrusterGain;
            if (!finalVelError.IsZero())
            {
                thrusterGain = mass * finalVelError.Normalize() * thrustPID.InverseTimeStep;
                //ds?.WriteText($"TG: {thrusterGain:F2} MASS:{mass:F0}\n");
            }
            else
            {
                thrusterGain = 0.0;
            }
            ActionThrust(finalVelError * thrusterGain - mass * worldGravity);
        }
        else
        {
            Thrust(desiredWorldVelocity, worldGravity);
        }
    }

    public void UpdateMass()
    {
        mass = rc.CalculateShipMass().PhysicalMass;
        invMass = 1.0 / (mass == 0.0 ? 1.0 : mass);
    }

    private void ActionThrust(Vector3D neededThrust)
    {
        neededThrustMag = neededThrust.Normalize();
        if (neededThrustMag &gt; 0.0)
        {
            NeededThrustDir = neededThrust;
            foreach (var thruster in thrusters)
            {
                thruster.Thrust(neededThrust, neededThrustMag);
            }
        }
        else
        {
            foreach (var thruster in thrusters)
            {
                thruster.ThrustOverridePercentage = 0.0f;
            }
        }
    }
}

public class Quota
{
    readonly Dictionary&lt;MyItemType, double&gt; quota = new Dictionary&lt;MyItemType, double&gt;();

    public Quota(string data, string quotaHdr, List&lt;MyItemType&gt; typeNames)
    {
        if (typeNames.Count == 0) { throw new ArgumentException("Unexpected: typeNames is empty.", "typeNames"); }
        // Call the TryParse method on the custom data. This method will
        // return false if the source wasn't compatible with the parser.
        MyIni ini = new MyIni();
        MyIniParseResult result;
        if (!ini.TryParse(data, out result))
            throw new Exception(result.ToString());
        foreach (var t in typeNames)
        {
            if (!t.TypeId.Contains("_Ore") || t.SubtypeId == "Ice") quota.Add(t, ini.Get(quotaHdr, t.SubtypeId).ToDouble(-1));
        }
    }

    public IEnumerable&lt;MyItemType&gt; Keys { get { return quota.Keys.Where(x=&gt;quota[x] &gt; 0); } }

    public double this[MyItemType indx]
    {
        get
        {
            double val;
            if (quota.TryGetValue(indx, out val)) return val;
            return -1;
        }
    }


    internal Diff Diff(Dictionary&lt;MyItemType, double&gt; count)
    {
        List&lt;MyTuple&lt;MyItemType, double&gt;&gt; result = new List&lt;MyTuple&lt;MyItemType, double&gt;&gt;();
        foreach (var q in quota)
        {
            double val;
            count.TryGetValue(q.Key, out val);
            {
                //If you don't have a quota for it, don't worry about it.
                if (q.Value &gt;= 0) result.Add(new MyTuple&lt;MyItemType, double&gt;(q.Key, q.Value-val));
            }
        }
        return new Diff(result);
    }
}

public class RecipeCounter
{
    readonly InventoryManager im;
    readonly List&lt;KeyValuePair&lt;string, Quota&gt;&gt; recipes = new List&lt;KeyValuePair&lt;string, Quota&gt;&gt;();

    public RecipeCounter(IMyGridTerminalSystem gts, IMyProgrammableBlock me, Action&lt;string&gt; echo)
    {
        //Read all the quotas from the CustomData
        im = new InventoryManager(gts, me, echo);
        var data = me.CustomData;
        MyIni ini = new MyIni();
        MyIniParseResult result;
        if (!ini.TryParse(data, out result))
            throw new Exception(result.ToString());
        List&lt;string&gt; sectionHeaders = new List&lt;string&gt;();
        ini.GetSections(sectionHeaders);
        foreach (var r in sectionHeaders)
        {
            if (r.Contains("BMC.Recipe."))
            {
                var item = new KeyValuePair&lt;string, Quota&gt;(r.Replace("BMC.Recipe.", ""), im.MakeQuota(me.CustomData, r));
                recipes.Add(item);
            }
        }
    }

    /// &lt;summary&gt;
            /// Say how many times this recipe could be made from the current information.
            /// &lt;/summary&gt;
            /// &lt;param name="recipe"&gt;&lt;/param&gt;
            /// &lt;returns&gt;&lt;/returns&gt;
    public void CountRecipe(List&lt;KeyValuePair&lt;string, int&gt;&gt; returnRecipes)
    {
        returnRecipes.Clear();
        var inv = im.GetInventory();

        foreach (var missileRecipe in recipes)
        {
            int result = int.MaxValue;
            foreach (var entry in missileRecipe.Value.Keys)
            {
                double value = 0.0;
                if (inv.ContainsKey(entry)) { value = inv[entry]; }
                result = Math.Min(result, (int)(value / missileRecipe.Value[entry]));
            }
            returnRecipes.Add(new KeyValuePair&lt;string, int&gt;(missileRecipe.Key, result));
        }
    }
}

public class RecipeUIText
{
    public RecipeUIText(RecipeCounter reco, DisplayUI dui, DisplayService display)
    {
        dui.Add(new MenuItem("Recipes Available", () =&gt;
        {
            List&lt;KeyValuePair&lt;string, int&gt;&gt; recipes = new List&lt;KeyValuePair&lt;string, int&gt;&gt;();
            reco.CountRecipe(recipes);
            display.WriteText($"Buildable Recipes:\n", false);
            foreach (var recipe in recipes)
            {
                display.WriteText($"{recipe.Key,-25} {recipe.Value,5}\n");
            }
        }));
    }
}

public class SpinTest : IFlightStrategy
{
    enum TestSequence { None, Yaw, Pitch, Roll };
    TestSequence state;
    bool testOn = false;
    readonly IMyRemoteControl rc;
    //readonly ProgramCore pc;
    readonly GyroControl gc;
    readonly DisplayService display;
    Vector3D startAng;
    Vector3D startFwd;
    dir nowFwd;
    double startCross;
    double startTime;
    double angularAccel;
    int tickCount;

    public SpinTest(ProgramCore pc, IMyRemoteControl rc, DisplayService display, GyroControl gc)
    {
        this.gc = gc;
        this.display = display;
        this.rc = rc;
        //this.pc = pc;
        pc.AddCommand("stop", x =&gt; StopTest());
        pc.AddCommand("start", ()=&gt;Start());
    }
    public bool Start()
    {
        if (!testOn)
        {
            display.WriteText("Test starting...\n", false);
            state = TestSequence.None;
        }
        return true;
    }

    public void Stop()
    {
        state = TestSequence.None;
        display.WriteText("Done.\n");
    }

    private void StopTest()
    {
        display.WriteText("Stopping...\n", true);
        gc.Rotate(0, 0, 0);
        gc.Override = false;
        testOn = false;
    }

    public bool Update6(double elapsedTime)
    {
        if (!testOn)
        {
            startAng = rc.GetShipVelocities().AngularVelocity;
            if (startAng.LengthSquared() &lt;= 0.00001)
            {
                startTime = elapsedTime;
                if (state == TestSequence.Roll)
                {
                    return false;
                }
                else
                {
                    gc.Override = true;
                    ++state;
                    SetRotFromArg(state);
                    testOn = true;
                    display.WriteText($"{state,5} ", true);
                    angularAccel = 0.0;
                    tickCount = 0;
                }
            }
            else
            {
                gc.Override = false;
            }
        }
        if (testOn)
        {
            {
                tickCount++;
                if (tickCount == 5) angularAccel = rc.GetShipVelocities().AngularVelocity.Length() / (elapsedTime - startTime);
            }
            //this.startTime += elapsedTime;
            double dot = nowFwd().Dot(startFwd);
            if (startCross - dot &lt; -0.000001)
            {
                //display.WriteText($"α:{angularAccel/Math.PI*180.0:F0}°/s² ω:{30.0 * rc.GetShipVelocities().AngularVelocity.Length() / Math.PI:F2}rpm ", true);
                display.WriteText($"α:{angularAccel / Math.PI * 180.0:F0}°/s² 180° ", true);
                display.WriteText($"in {elapsedTime - this.startTime:N1}s\n", true);
                StopTest();
            }
            else
            {
                startCross = dot;
            }
        }
        return true;
    }

    private Vector3D Fwd() =&gt; rc.WorldMatrix.Forward;
    private Vector3D Up() =&gt; rc.WorldMatrix.Up;
    delegate Vector3D dir();

    private void SetRotFromArg(TestSequence request)
    {
        //startFwd = rc.WorldMatrix.Forward;
        if (request == TestSequence.None) return;
        nowFwd = Fwd;
        if (request == TestSequence.Yaw)
        {
            gc.Rotate(6, 0, 0);
        }

        if (request == TestSequence.Pitch) gc.Rotate(0, 6, 0);
        if (request == TestSequence.Roll)
        {
            gc.Rotate(0, 0, 6);
            nowFwd = Up;
        }
        startFwd = nowFwd();
        startCross = 1.01;
    }
}

public class YawPID : IFlightStrategy
{
    readonly IMyRemoteControl rc;
    //readonly ProgramCore pc;
    readonly GyroControl gc;
    readonly DisplayService display;
    double lastProp;
    double clockStart;
    Vector3D targetDirection;
    bool testOn;
    readonly double oscilate = 60.0;
    double propStep;
    double lastDer;
    double derStep;
    private double bestTime;
    readonly double rotAmt = 1.0;
    const double verySmall = 0.0001;
    int count = 0;
    IUpdate thingToDo;

    public YawPID(IMyRemoteControl rc, DisplayService display, GyroControl gc)
    {
        //this.pc = pc;
        this.rc = rc;
        this.display = display;
        this.gc = gc;
        thingToDo = null;
    }

    public bool Start()
    {
        if (!gc.Override)
        {
            targetDirection = rc.WorldMatrix.Forward.Rotate(rc.WorldMatrix.Up, rotAmt);
            testOn = false;
            thingToDo = RunningProp;
            display.WriteText("Starting.\n", false);
            bestTime = double.MaxValue;
            lastProp = 1.0;
            lastDer = 0.0;
            derStep = 0.2;
            propStep = 0.5;
            gc.yawPID = new PID(lastProp, 0, 0, 0.1);
            return true;
        }
        return false;
    }

    private void RunningProp(double elapsedTime)
    {
        if (!testOn) { clockStart = elapsedTime; testOn = true; }
        if (elapsedTime - clockStart &lt; oscilate)
        {
            if (Good()) TryAgain(elapsedTime);
            else
            {
                gc.Rotate(targetDirection, rc.WorldMatrix.Up);
            }
        }
        else
        {
            NextTest();
        }
    }

    private bool Good()
    {
        return (rc.WorldMatrix.Forward.Dot(targetDirection) &gt; (1.0 - verySmall)) &amp;&amp; rc.GetShipVelocities().AngularVelocity.LengthSquared() &lt; verySmall;
    }

    private void TryAgain(double elapsedTime)
    {
        lastProp += propStep;
        gc.yawPID = new PID(lastProp, 0, 0, 0.1);
        testOn = false;
        targetDirection = rc.WorldMatrix.Forward.Rotate(rc.WorldMatrix.Up, rotAmt);
        display.WriteText($"{elapsedTime - clockStart:F2}\n{lastProp:F1} ");
        //if (++output % 6 == 0) display.WriteText("\n");
    }

    /// &lt;summary&gt;
            /// Found Oscilation, Tune Derivative
            /// &lt;/summary&gt;
    private void NextTest()
    {
        display.WriteText("\nProp found. ");
        gc.Override = false;
        //output = 0;
        lastProp /= 2.0;
        thingToDo = WaitForStop;
        count = 0;
    }

    /// &lt;summary&gt;
            /// Wait to stop in between tests
            /// &lt;/summary&gt;
            /// &lt;param name="elapsedTime"&gt;&lt;/param&gt;
    private void WaitForStop(double elapsedTime)
    {
        if (rc.GetShipVelocities().AngularVelocity.LengthSquared() &lt; verySmall)
        {
            if (count &gt; 4)
            {
                display.WriteText("Stopped.\n");
                thingToDo = RunningDerivative;
                testOn = false;
                targetDirection = rc.WorldMatrix.Forward.Rotate(rc.WorldMatrix.Up, rotAmt);
                gc.yawPID = new PID(lastProp, 0, lastDer, 0.1);
                display.WriteText($"{lastDer:F3} ");
            }
            else count++;
        }
    }

    private void RunningDerivative(double elapsedTime)
    {
        if (!testOn) { clockStart = elapsedTime; testOn = true; }
        if (elapsedTime - clockStart &lt; oscilate)
        {
            if (Good())
            {
                if (CheckForBest(elapsedTime)) Stop(elapsedTime);
                else TryDAgain(elapsedTime);
            }
            else
            {
                gc.Rotate(targetDirection, rc.WorldMatrix.Up);
            }
        }
        else
        {
            TryDAgain(elapsedTime);
        }
    }

    private void TryDAgain(double elapsedTime)
    {
        lastDer += derStep;
        gc.yawPID = new PID(lastProp, 0, lastDer, 0.1);
        testOn = false;
        targetDirection = rc.WorldMatrix.Forward.Rotate(rc.WorldMatrix.Up, rotAmt);
        display.WriteText($"{elapsedTime - clockStart:F4}\n{lastDer:F3} ");
        //if (++output % 6 == 0) display.WriteText("\n");
    }

    private void Stop(double elapsedTime)
    {
        display.WriteText($"{elapsedTime - clockStart:F4}\nDone.\nBest time: {bestTime:F4}\nP:{lastProp:F3} D:{lastDer - derStep:F4}");
        thingToDo = null;
    }

    private bool CheckForBest(double elapsedTime)
    {
        double newTime = elapsedTime - clockStart;
        if (newTime &lt; bestTime) { bestTime = newTime; }
        if (newTime &lt; bestTime * 2) return false;
        return true;
    }

    public void Stop()
    {
        thingToDo = null;
        gc.Override = false;
    }

    public bool Update6(double elapsedTime)
    {
        if (thingToDo != null)
        {
            thingToDo(elapsedTime);
            return true;
        }
        return false;
    }
}

public class AccelTest : ISimpleRender
{
    readonly Propulsion prop;
    readonly DisplayService display;
    readonly IMyRemoteControl rc;
    readonly IMyGridTerminalSystem gts;
    public AccelTest(ProgramCore pc, IMyGridTerminalSystem gts, IMyRemoteControl rc, DisplayService display, Propulsion prop)
    {
        this.display = display;
        this.rc = rc;
        this.prop = prop;
        this.gts = gts;
        pc.AddCommand("accel", Render);
    }

    public void Render()
    {
        var mass = rc.CalculateShipMass();
        double physMass = mass.PhysicalMass;
        double emptyMass = mass.BaseMass;
        double terminalBlockMass = 0.0;
        gts.GetBlocksOfType&lt;IMyTerminalBlock&gt;(null, (x) =&gt; { terminalBlockMass += x.Mass; return false; });
        double nonTermMass = emptyMass - terminalBlockMass;
        display.WriteText($"Totl Mass: {physMass,12:#,#}kg\nInvn Mass: {physMass - emptyMass,12:#,#}kg\nTerm Mass: {terminalBlockMass,12:#,#}kg\nNTer Mass: {emptyMass - terminalBlockMass,12:#,#}kg\n\n", false);

        var foreThrust = prop.MaxThrust(rc.WorldMatrix.Forward) / physMass;
        display.WriteText($"FW: {foreThrust:F2}m/s²\n");
        var backThrust = prop.MaxThrust(rc.WorldMatrix.Backward) / physMass;
        display.WriteText($"BW: {backThrust:F2}m/s²\n");
        display.WriteText($"LT: {prop.MaxThrust(rc.WorldMatrix.Left) / physMass:F2}m/s²\n");
        display.WriteText($"RT: {prop.MaxThrust(rc.WorldMatrix.Right) / physMass:F2}m/s²\n");

        var upThrust = prop.MaxThrust(rc.WorldMatrix.Up) / physMass;
        var downThrust = prop.MaxThrust(rc.WorldMatrix.Down) / physMass;
        var downGrav = rc.GetNaturalGravity().Length();
        display.WriteText($"UP: {upThrust - downGrav:F2}m/s² ({upThrust:F2}m/s² - {downGrav:F2}m/s²)\n");
        display.WriteText($"DN: {downThrust + downGrav:F2}m/s² ({downThrust:F2}m/s² + {downGrav:F2}m/s²)\n\n");

        display.WriteText($"Suicide Burn (up) @ 100m/s: {100 * 100 / (2 * (upThrust - downGrav)):F0}m\n");
        display.WriteText($"Stopping Dist(bw) @ 100m/s: {100 * 100 / (2 * (backThrust)):F0}m\n");
        display.WriteText($"Centrip. Max (fw) @ 100m/s: {100 * 100 / (foreThrust):F0}m\n");
    }
}

public class DamageAssessment
{
    private readonly IMyGridTerminalSystem gts;
    private readonly IMyProgrammableBlock me;

    public DamageAssessment(IMyGridTerminalSystem gts, IMyProgrammableBlock me)
    {
        this.gts = gts;
        //blocks = new List&lt;IMyTerminalBlock&gt;();
        this.me = me;

    }

    public void AssessDamage(List&lt;IMyTerminalBlock&gt; blocks)
    {
        gts.GetBlocksOfType(blocks, x =&gt; !x.IsFunctional &amp;&amp; x.IsSameConstructAs(me));
    }
}

//Inventory; Thanks Vox Serico
public static readonly MyDefinitionId
    hydrogenEngineId = MyDefinitionId.Parse("MyObjectBuilder_HydrogenEngine/"),
    hydrogenGasId = MyDefinitionId.Parse("MyObjectBuilder_GasProperties/Hydrogen"),
    oxygenTankId = MyDefinitionId.Parse("MyObjectBuilder_OxygenTank/");

public static readonly string blueprintDef = "MyObjectBuilder_BlueprintDefinition/";

//Groups
public static readonly string DOCKINGCONNECTOR_GRP = "BMC Drone Connectors";

//Camera and Laser
public const double COS45 = 0.707107;
public const double defaultMaxSpeed = 145.0;
public const double extraDistance = 250.0; //meters
public const double syncRange = 7000.0;

//Time
public const double ONE_TICK = 1 / 60.0;

//Ini Files
public const string missileIniHeader = "BMC.Missile";

public interface IVirtualThruster
{
    bool Enabled { set; }
    float ThrustOverridePercentage { set; }
    float MaxEffectiveThrust();
    float MaxEffectiveThrust(Vector3D directionVector);
    void Thrust(Vector3D neededThrust, double neededThrustMag);
}

public class VirtualThruster : IVirtualThruster
{
    readonly List&lt;IMyThrust&gt; thrusters = new List&lt;IMyThrust&gt;();

    public bool Enabled { set { foreach (var thr in thrusters) { thr.Enabled = value; } } }
    public float MaxEffectiveThrust()
    {
        float sum = 0.0f;
        foreach (var thr in thrusters)
        {
            if (thr.IsWorking)
            {
                sum += thr.MaxEffectiveThrust;
            }
        }
        return sum;
    }
    public float ThrustOverridePercentage
    {
        set
        {
            foreach (var thruster in thrusters)
            {
                thruster.ThrustOverridePercentage = value;
            }
        }
    }

    public void Merge(IMyThrust realThruster)
    {
        thrusters.Add(realThruster);
    }

    public float MaxEffectiveThrust(Vector3D directionVector)
    {
        if (thrusters.Count &gt; 0)
        {
            return (float)(thrusters[0].WorldMatrix.Backward.Dot(directionVector) * MaxEffectiveThrust());
        }
        return 0.0f;
    }

    public void Thrust(Vector3D neededThrust, double neededThrustMag)
    {
        int thrustC = thrusters.Count;
        if (thrustC &gt; 0)
        {
            float itc = 1.0f / thrustC;
            var thrustDirection = thrusters[0].WorldMatrix.Backward;
            float scale = (float)thrustDirection.Dot(neededThrust);
            float amt = (float)(scale * neededThrustMag);
            float thrustFrac = (amt &lt; 0.1) ? 0.0f : MathHelper.Clamp(amt / MaxEffectiveThrust(), 0.0f, 1.0f);
            foreach (var thruster in thrusters)
            {
                thruster.ThrustOverridePercentage = thrustFrac;// Math.Min(1.0f, Math.Max(0.0f, (amt / thruster.MaxEffectiveThrust) * itc));
            }
        }
    }

    public static IVirtualThruster[] MakeThrusters(IMyRemoteControl rc, IMyGridTerminalSystem gts)
    {
        List&lt;IMyThrust&gt; realThrusters = new List&lt;IMyThrust&gt;();
        IVirtualThruster[] thrusters = new IVirtualThruster[6];
        gts.GetBlocksOfType(realThrusters, x =&gt; x.IsSameConstructAs(rc));
        for (int i = 0; i &lt; 6; ++i)
        {
            thrusters[i] = new VirtualThruster();
        }
        foreach (var realThruster in realThrusters)
        {
            int dir = (int)rc.Orientation.TransformDirectionInverse(Base6Directions.GetOppositeDirection(realThruster.Orientation.Forward));
            ((VirtualThruster)thrusters[dir]).Merge(realThruster);
        }
        return thrusters;
    }
}</Program>
              <Storage />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorHalfSlopeInverted</SubtypeName>
              <Min x="-2" y="3" z="17" />
              <BlockOrientation Forward="Up" Up="Left" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="2" y="3" z="16" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-2" y="3" z="15" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-2" y="3" z="11" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="2" y="3" z="11" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-2" y="3" z="12" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="2" y="3" z="12" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-2" y="3" z="13" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="2" y="3" z="13" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
              <SubtypeName>SmallBlockBatteryBlock</SubtypeName>
              <EntityId>91267813794939695</EntityId>
              <Min x="-3" y="3" z="8" />
              <BlockOrientation Forward="Backward" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ShareMode>Faction</ShareMode>
              <CustomName>Cle Battery Po 1</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>4</NumberInGrid>
              <Enabled>true</Enabled>
              <CurrentStoredPower>1</CurrentStoredPower>
              <ProducerEnabled>true</ProducerEnabled>
              <MaxStoredPower>0</MaxStoredPower>
              <SemiautoEnabled>false</SemiautoEnabled>
              <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
              <ChargeMode>0</ChargeMode>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-2" y="3" z="16" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="2" y="3" z="7" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-2" y="3" z="7" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="2" y="3" z="6" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-2" y="3" z="6" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="2" y="3" z="5" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-2" y="3" z="5" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="2" y="3" z="4" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-2" y="3" z="4" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="2" y="3" z="3" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-2" y="3" z="3" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="2" y="3" z="2" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-2" y="3" z="2" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope</SubtypeName>
              <Min x="-2" y="3" z="1" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope</SubtypeName>
              <Min x="2" y="3" z="1" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="1" y="3" z="3" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-2" y="4" z="11" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-1" y="4" z="11" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="0" y="4" z="11" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="1" y="4" z="11" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="2" y="4" z="11" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-1" y="3" z="17" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="0" y="3" z="17" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="1" y="3" z="17" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="2" y="4" z="7" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="-2" y="4" z="7" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="1" y="4" z="7" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="0" y="4" z="7" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-1" y="4" z="7" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Gyro">
              <SubtypeName>SmallBlockGyro</SubtypeName>
              <EntityId>125570663801911577</EntityId>
              <Min x="0" y="4" z="10" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ShareMode>Faction</ShareMode>
              <CustomName>Cle Gyroscope 5</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>4</NumberInGrid>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Gyro">
              <SubtypeName>SmallBlockGyro</SubtypeName>
              <EntityId>91259122642351908</EntityId>
              <Min x="0" y="0" z="7" />
              <BlockOrientation Forward="Forward" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ShareMode>Faction</ShareMode>
              <CustomName>Cle Gyroscope 1</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>5</NumberInGrid>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="0" y="-1" z="7" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CameraBlock">
              <SubtypeName>SmallCameraBlock</SubtypeName>
              <EntityId>83713440194137124</EntityId>
              <Min x="0" y="-2" z="7" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ShareMode>Faction</ShareMode>
              <CustomName>Cle Camera</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>1</NumberInGrid>
              <Enabled>true</Enabled>
              <IsActive>false</IsActive>
              <Fov>1.04719758</Fov>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MyProgrammableBlock">
              <SubtypeName>SmallProgrammableBlockReskin</SubtypeName>
              <EntityId>130397257483534299</EntityId>
              <Min x="1" y="3" z="7" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ShareMode>Faction</ShareMode>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyMultiTextPanelComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_MultiTextPanelComponent">
                      <TextPanelsContents>
                        <MySerializedTextPanelData>
                          <ChangeInterval>0</ChangeInterval>
                          <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
                          <FontSize>1</FontSize>
                          <ShowText>NONE</ShowText>
                          <FontColor>
                            <PackedValue>4294967295</PackedValue>
                            <X>255</X>
                            <Y>255</Y>
                            <Z>255</Z>
                            <R>255</R>
                            <G>255</G>
                            <B>255</B>
                            <A>255</A>
                          </FontColor>
                          <BackgroundColor>
                            <PackedValue>4278190080</PackedValue>
                            <X>0</X>
                            <Y>0</Y>
                            <Z>0</Z>
                            <R>0</R>
                            <G>0</G>
                            <B>0</B>
                            <A>255</A>
                          </BackgroundColor>
                          <CurrentShownTexture>0</CurrentShownTexture>
                          <SelectedScript />
                          <TextPadding>2</TextPadding>
                          <ScriptBackgroundColor>
                            <PackedValue>4288108544</PackedValue>
                            <X>0</X>
                            <Y>88</Y>
                            <Z>151</Z>
                            <R>0</R>
                            <G>88</G>
                            <B>151</B>
                            <A>255</A>
                          </ScriptBackgroundColor>
                          <ScriptForegroundColor>
                            <PackedValue>4294962611</PackedValue>
                            <X>179</X>
                            <Y>237</Y>
                            <Z>255</Z>
                            <R>179</R>
                            <G>237</G>
                            <B>255</B>
                            <A>255</A>
                          </ScriptForegroundColor>
                          <Sprites>
                            <Length>0</Length>
                          </Sprites>
                        </MySerializedTextPanelData>
                        <MySerializedTextPanelData>
                          <ChangeInterval>0</ChangeInterval>
                          <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
                          <FontSize>1</FontSize>
                          <ShowText>NONE</ShowText>
                          <FontColor>
                            <PackedValue>4294967295</PackedValue>
                            <X>255</X>
                            <Y>255</Y>
                            <Z>255</Z>
                            <R>255</R>
                            <G>255</G>
                            <B>255</B>
                            <A>255</A>
                          </FontColor>
                          <BackgroundColor>
                            <PackedValue>4278190080</PackedValue>
                            <X>0</X>
                            <Y>0</Y>
                            <Z>0</Z>
                            <R>0</R>
                            <G>0</G>
                            <B>0</B>
                            <A>255</A>
                          </BackgroundColor>
                          <CurrentShownTexture>0</CurrentShownTexture>
                          <SelectedScript />
                          <TextPadding>2</TextPadding>
                          <ScriptBackgroundColor>
                            <PackedValue>4288108544</PackedValue>
                            <X>0</X>
                            <Y>88</Y>
                            <Z>151</Z>
                            <R>0</R>
                            <G>88</G>
                            <B>151</B>
                            <A>255</A>
                          </ScriptBackgroundColor>
                          <ScriptForegroundColor>
                            <PackedValue>4294962611</PackedValue>
                            <X>179</X>
                            <Y>237</Y>
                            <Z>255</Z>
                            <R>179</R>
                            <G>237</G>
                            <B>255</B>
                            <A>255</A>
                          </ScriptForegroundColor>
                          <Sprites>
                            <Length>0</Length>
                          </Sprites>
                        </MySerializedTextPanelData>
                      </TextPanelsContents>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Automaton PB Sb 1 [rename]</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>2</NumberInGrid>
              <Enabled>true</Enabled>
              <Program>/*
 * R e a d m e
 * -----------
 * 
 * In this file you can include any instructions or other comments you want to have injected onto the 
 * top of your final script. You can safely delete this file if you do not want any such comments.
 */

readonly SensibleNamer sn;
readonly ProjectorManager pm;

public Program()
{
    sn = new SensibleNamer(GridTerminalSystem, Me, Echo);
    pm = new ProjectorManager(GridTerminalSystem, Me, Echo);
}

public void Save()
{
}

public void Main(string argument, UpdateType updateSource)
{
    if (argument == "align proj")
    {
        pm.Main();
    }
    else if (string.IsNullOrEmpty(argument))
    {
        sn.Main(argument, updateSource);
    }
    else
    {
        Echo("Unrecognized command.\n");
    }
}

}
internal class ProjectorManager
{
    readonly List&lt;IMyProjector&gt; projectors = new List&lt;IMyProjector&gt;();
    readonly List&lt;IMyTerminalBlock&gt; blocks = new List&lt;IMyTerminalBlock&gt;();
    IMyGridTerminalSystem GridTerminalSystem { get; set; }
    readonly IMyTerminalBlock Me;
    readonly Action&lt;string&gt; Echo;

    public ProjectorManager(IMyGridTerminalSystem gridTerminalSystem, IMyTerminalBlock Me, Action&lt;string&gt; E)
    {
        GridTerminalSystem = gridTerminalSystem;
        this.Me = Me;
        Echo = E;
    }

    internal void Main()
    {
        blocks.Clear();
        GridTerminalSystem.GetBlocksOfType(blocks, x =&gt; Me.IsSameConstructAs(x));
        Vector3I lowDim = blocks[0].Position; //A Pb means Block 0 exists
        GridTerminalSystem.GetBlocksOfType(projectors);
        if (projectors.Count == 0)
        {
            Echo("No projector found.\n");
        }
        if (projectors.Count &gt; 1)
        {
            Echo("Too many projectors found.\n");
        }
        else
        {
            Echo("Aligning projection...");
            AutoAlign(lowDim);
            Echo("Complete.");
        }
    }

    private void AutoAlign(Vector3I lowDim)
    {
        var pr = projectors[0];

        var vi = pr.Position - lowDim;
        MatrixI rot = MatrixI.CreateRotation(projectors[0].Orientation.Forward, projectors[0].Orientation.Up, Base6Directions.Direction.Forward, Base6Directions.Direction.Up);
        pr.ProjectionOffset = Vector3I.Transform(vi, rot);

        var prot = new Vector3I(0, 0, 0);
        if (pr.Orientation.Forward == Base6Directions.Direction.Right)
        {
            prot.X = 1;
            if (pr.Orientation.Up == Base6Directions.Direction.Up)
            {
                prot.Z = 0;
            }
            else if (pr.Orientation.Up == Base6Directions.Direction.Forward)
            {
                prot.Z = -1;
            }
            else if (pr.Orientation.Up == Base6Directions.Direction.Down)
            {
                prot.Z = 2;
            }
            else if (pr.Orientation.Up == Base6Directions.Direction.Backward)
            {
                prot.Z = 1;
            }
        }
        else if (pr.Orientation.Forward == Base6Directions.Direction.Backward)
        {
            prot.X = 2;
            if (pr.Orientation.Up == Base6Directions.Direction.Up)
            {
                prot.Z = 0;
            }
            else if (pr.Orientation.Up == Base6Directions.Direction.Left)
            {
                prot.Z = 1;
            }
            else if (pr.Orientation.Up == Base6Directions.Direction.Down)
            {
                prot.Z = 2;
            }
            else if (pr.Orientation.Up == Base6Directions.Direction.Right)
            {
                prot.Z = -1;
            }
        }
        else if (pr.Orientation.Forward == Base6Directions.Direction.Left)
        {
            prot.X = -1;
            if (pr.Orientation.Up == Base6Directions.Direction.Up)
            {
                prot.Z = 0;
            }
            else if (pr.Orientation.Up == Base6Directions.Direction.Forward)
            {
                prot.Z = 1;
            }
            else if (pr.Orientation.Up == Base6Directions.Direction.Down)
            {
                prot.Z = 2;
            }
            else if (pr.Orientation.Up == Base6Directions.Direction.Backward)
            {
                prot.Z = -1;
            }
        }
        else if (pr.Orientation.Forward == Base6Directions.Direction.Forward)
        {
            //prot.X = 0;
            if (pr.Orientation.Up == Base6Directions.Direction.Up)
            {
                prot.Z = 0;
            }
            else if (pr.Orientation.Up == Base6Directions.Direction.Left)
            {
                prot.Z = -1;
            }
            else if (pr.Orientation.Up == Base6Directions.Direction.Down)
            {
                prot.Z = 2;
            }
            else if (pr.Orientation.Up == Base6Directions.Direction.Right)
            {
                prot.Z = 1;
            }
        }
        else if (pr.Orientation.Forward == Base6Directions.Direction.Up)
        {
            //prot.X = 0;
            prot.Y = 1;
            if (pr.Orientation.Up == Base6Directions.Direction.Forward)
            {
                prot.Z = 2;
            }
            else if (pr.Orientation.Up == Base6Directions.Direction.Left)
            {
                prot.Z = -1;
            }
            else if (pr.Orientation.Up == Base6Directions.Direction.Backward)
            {
                prot.Z = 0;
            }
            else if (pr.Orientation.Up == Base6Directions.Direction.Right)
            {
                prot.Z = 1;
            }
        }
        else if (pr.Orientation.Forward == Base6Directions.Direction.Down)
        {
            //prot.X = 0;
            prot.Y = -1;
            if (pr.Orientation.Up == Base6Directions.Direction.Forward)
            {
                prot.Z = 0;
            }
            else if (pr.Orientation.Up == Base6Directions.Direction.Left)
            {
                prot.Z = -1;
            }
            else if (pr.Orientation.Up == Base6Directions.Direction.Backward)
            {
                prot.Z = 2;
            }
            else if (pr.Orientation.Up == Base6Directions.Direction.Right)
            {
                prot.Z = 1;
            }
        }
        pr.ProjectionRotation = prot;

        pr.UpdateOffsetAndRotation();
    }
}

public class RenameStrategy
{
    readonly List&lt;IMyTerminalBlock&gt; blocks = new List&lt;IMyTerminalBlock&gt;();
    readonly Dictionary&lt;string, List&lt;IMyTerminalBlock&gt;&gt; blockDict = new Dictionary&lt;string, List&lt;IMyTerminalBlock&gt;&gt;();
    readonly IMyTerminalBlock Me;

    IMyGridTerminalSystem GridTerminalSystem { get; set; }


    public RenameStrategy(IMyGridTerminalSystem gridTerminalSystem, IMyTerminalBlock Me, Action&lt;string&gt; E)
    {
        GridTerminalSystem = gridTerminalSystem;
        this.Me = Me;
    }

    public void NameEverything(string gridName)
    {
        blocks.Clear();
        blockDict.Clear();
        GridTerminalSystem.GetBlocksOfType(blocks, x =&gt; Me.IsSameConstructAs(x));

        var ps = new PortStar(GridTerminalSystem, Me);

        foreach (var block in blocks)
        {
            if (!blockDict.ContainsKey(block.DefinitionDisplayNameText))
            {
                blockDict.Add(block.DefinitionDisplayNameText, new List&lt;IMyTerminalBlock&gt;());
            }
            blockDict[block.DefinitionDisplayNameText].Add(block);
        }

        List&lt;string&gt; tags = new List&lt;string&gt;();
        List&lt;string&gt; nameTags = new List&lt;string&gt;();
        foreach (var pair in blockDict)
        {
            var list = pair.Value;

            ps.SortBlocks(list);

            int leadingZeros = list.Count.ToString().Length;
            var format = new string('0', leadingZeros);
            for (int i = 0; i &lt; list.Count; ++i)
            {
                var block = list[i];
                int count = list.Count;
                string customName = block.CustomName;
                string defDisplayName = block.DefinitionDisplayNameText;
                string side = ps.MakeSideAnnot(list, block);
                var formattedNum = $" {(i + 1).ToString(format)}";
                if (count == 1) formattedNum = "";
                block.CustomName = CreateName(gridName, formattedNum, customName, defDisplayName, side, tags, nameTags);
            }
        }
    }

    public static string CreateName(string gridName, string formattedNum, string oldName, string defDisplayName, string side, List&lt;string&gt; tags, List&lt;string&gt; nameTags)
    {
        tags.Clear();
        GetTags(oldName, ref tags);
        tags = tags.Distinct().ToList();

        nameTags.Clear();
        GetTags(defDisplayName, ref nameTags);
        tags = tags.Except(nameTags).ToList();
        var allTags = String.Join(" ", tags);
        if (!string.IsNullOrWhiteSpace(allTags)) allTags = " " + allTags;
        if (!string.IsNullOrWhiteSpace(side)) side= " " + side;
        if (!string.IsNullOrWhiteSpace(gridName)) gridName += " ";
        return $"{gridName}{Renamer(defDisplayName)}{side}{formattedNum}{allTags}";
    }

    internal class PortStar
    {
        readonly MatrixI rot;
        readonly Vector3I com;
        readonly List&lt;IMyRemoteControl&gt; controllers = new List&lt;IMyRemoteControl&gt;();
        readonly IMyRemoteControl front;

        public PortStar(IMyGridTerminalSystem GridTerminalSystem, IMyTerminalBlock Me)
        {
            GridTerminalSystem.GetBlocksOfType(controllers, x =&gt; Me.IsSameConstructAs(x));
            front = controllers[0];
            rot = MatrixI.CreateRotation(front.Orientation.Forward, front.Orientation.Up, Base6Directions.Direction.Forward, Base6Directions.Direction.Up);
            com = front.CubeGrid.WorldToGridInteger(front.CenterOfMass);
        }

        internal void SortBlocks(List&lt;IMyTerminalBlock&gt; list)
        {
            list.Sort((x, y) =&gt; Vector3I.Transform(x.Position - com, rot).Z.CompareTo(Vector3I.Transform(y.Position - com, rot).Z));
        }

        internal string MakeSideAnnot(List&lt;IMyTerminalBlock&gt; list, IMyTerminalBlock block)
        {
            int loc = Vector3I.Transform(block.Position - com, rot).X;
            string side = "";
            if (loc &lt; 0) side = "Po";
            else if (loc &gt; 0) side = "Sb";
            if (list.Count == 1) side = "";
            return side;
        }
    }

    private static string Renamer(string name)
    {
        var result = name;
        //result = result.Replace("[", "");
        //result = result.Replace("]", "");
        result = result.Replace("Programmable Block", "PB");
        result = result.Replace("Remote Control", "RC");
        result = result.Replace("Atmospheric", "Atmo");
        return result;
    }

    public static void GetTags(string text, ref List&lt;string&gt; tags)
    {
        //int ind = oldText.IndexOf('[');
        //while (ind &gt;= 0)
        //{
        //    var nextBrace = oldText.Substring(ind);
        //    int len = nextBrace.IndexOf(']');
        //    tags.Add(nextBrace.Substring(0, len + 1));
        //    if (len &lt; 0 || len + 1 == nextBrace.Length) break;
        //    oldText = nextBrace.Substring(len + 1);
        //    ind = oldText.IndexOf('[');
        //}

        //Regex regex = new Regex(@"\[[^\]]*\]");
        //var result = regex.Matches(oldText);
        //foreach (Match match in result)
        //{
        //    tags.Add(match.Value);
        //}

        int point = 0;
        int braceLeft;
        while ((braceLeft = text.IndexOf('[', point)) != -1)
        {
            point = braceLeft + 1;
            if (point &gt;= text.Length)
                break;

            int braceRight = text.IndexOf(']', point);
            if (braceRight != -1)
            {
                tags.Add(text.Substring(braceLeft, braceRight - braceLeft + 1));
                point = braceRight + 1;
                if (point &gt;= text.Length)
                    break;
            }
        }
    }

    /*public static string PreserveTags(string oldText)
        {
            string result = "";
            int ind = oldText.IndexOf('[');
            while (ind &gt;= 0)
            {
                var nextBrace = oldText.Substring(ind);
                int len = nextBrace.IndexOf(']');
                result += " " + nextBrace.Substring(0, len + 1);
                if (len &lt; 0 || len + 1 == nextBrace.Length) break;
                oldText = nextBrace.Substring(len + 1);
                ind = oldText.IndexOf('[');
            }
            result = result.TrimEnd(' ');
            return result;
        }*/
}

public class SensibleNamer
{
    // https://github.com/malware-dev/MDK-SE/wiki/Quick-Introduction-to-Space-Engineers-Ingame-Scripts
    readonly List&lt;IMyBlockGroup&gt; blockGroups = new List&lt;IMyBlockGroup&gt;();
    readonly List&lt;IMyTerminalBlock&gt; blocks = new List&lt;IMyTerminalBlock&gt;();
    readonly List&lt;IMyShipConnector&gt; connectors = new List&lt;IMyShipConnector&gt;();
    readonly List&lt;IMyShipController&gt; contr = new List&lt;IMyShipController&gt;();
    readonly RenameStrategy strategy;

    IMyGridTerminalSystem GridTerminalSystem { get; set; }
    readonly IMyTerminalBlock Me;
    readonly Action&lt;string&gt; Echo;

    public SensibleNamer(IMyGridTerminalSystem gridTerminalSystem, IMyTerminalBlock Me, Action&lt;string&gt; E)
    {
        GridTerminalSystem = gridTerminalSystem;
        this.Me = Me;
        Echo = E;
        GridTerminalSystem.GetBlockGroups(blockGroups);
        Echo("Run without any arguments to rename.\n" +
            "Run with 'align proj' to auto align repair projector.\n");
        strategy = new RenameStrategy(gridTerminalSystem, Me, E);
    }

    public void Main(string argument, UpdateType updateSource)
    {
        string gridName = "";
        gridName = GetGridAbbr(gridName);

        strategy.NameEverything(gridName);
        InitConnectors();
        HideStuff();
        HideEverythingInAGroup();
    }

    private void HideStuff()
    {
        blocks.Clear();
        GridTerminalSystem.GetBlocksOfType(blocks, x =&gt; Me.IsSameConstructAs(x));
        foreach (var block in blocks)
        {
            if (block.CustomName.Contains("Cargo")
                || block.CustomName.Contains("Gyro")
                 || block.CustomName.Contains("Thruster")
                 || block.CustomName.Contains("Armory")
                 || block.CustomName.Contains("Solar")
                 || block.CustomName.Contains("Turbine")
                 || block.CustomName.Contains("Locker")
                 || block.CustomName.Contains("Bed")
                 || block.CustomName.Contains("Desk")
                 || block.CustomName.Contains("Bathroom")
                 || block.CustomName.Contains("Battery")
                  || block.CustomName.Contains("Door"))
            {
                block.ShowInTerminal = false;
                block.ShowInToolbarConfig = false;
            }
        }

        foreach (var block in blocks)
        {
            if (block.CustomName.Contains("Light")
                || block.CustomName.Contains("LCD")
                )
            {
                block.ShowInToolbarConfig = false;
            }
        }
    }


    private void HideEverythingInAGroup()
    {
        foreach (var group in blockGroups)
        {
            blocks.Clear();
            group.GetBlocks(blocks, x =&gt; Me.IsSameConstructAs(x));
            foreach (var block in blocks)
            {
                if (!(block is IMyProgrammableBlock))
                {
                    block.ShowInTerminal = false;
                    block.ShowInToolbarConfig = false;
                }
            }
        }
    }

    private void InitConnectors()
    {
        blocks.Clear();
        GridTerminalSystem.GetBlocksOfType(connectors, x =&gt; Me.IsSameConstructAs(x));
        foreach (var connector in connectors)
        {
            connector.PullStrength = 0.0f;
        }
    }

    private string GetGridAbbr(string gridName)
    {
        GridTerminalSystem.GetBlocksOfType(contr, x =&gt; Me.IsSameConstructAs(x));
        if (contr.Count &gt; 0)
        {
            var cn = contr[0].CubeGrid.CustomName;
            if (cn.Contains(" "))
            {
                var results = cn.Split(' ');
                foreach (var c in results)
                {
                    if (char.IsLetter(c[0]))
                    {
                        gridName += c[0];
                    }
                }
            }
            else
            {
                if (cn.Length &gt; 2)
                {
                    gridName += $"{cn[0]}{cn[1]}{cn[cn.Length - 1]}";
                }
            }
        }

        return gridName;
    }</Program>
              <Storage />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MyProgrammableBlock">
              <SubtypeName>SmallProgrammableBlockReskin</SubtypeName>
              <EntityId>78249266959453923</EntityId>
              <Min x="-1" y="3" z="7" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ShareMode>Faction</ShareMode>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyMultiTextPanelComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_MultiTextPanelComponent">
                      <TextPanelsContents>
                        <MySerializedTextPanelData>
                          <ChangeInterval>0</ChangeInterval>
                          <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
                          <FontSize>1</FontSize>
                          <ShowText>NONE</ShowText>
                          <FontColor>
                            <PackedValue>4294967295</PackedValue>
                            <X>255</X>
                            <Y>255</Y>
                            <Z>255</Z>
                            <R>255</R>
                            <G>255</G>
                            <B>255</B>
                            <A>255</A>
                          </FontColor>
                          <BackgroundColor>
                            <PackedValue>4278190080</PackedValue>
                            <X>0</X>
                            <Y>0</Y>
                            <Z>0</Z>
                            <R>0</R>
                            <G>0</G>
                            <B>0</B>
                            <A>255</A>
                          </BackgroundColor>
                          <CurrentShownTexture>0</CurrentShownTexture>
                          <SelectedScript />
                          <TextPadding>2</TextPadding>
                          <ScriptBackgroundColor>
                            <PackedValue>4288108544</PackedValue>
                            <X>0</X>
                            <Y>88</Y>
                            <Z>151</Z>
                            <R>0</R>
                            <G>88</G>
                            <B>151</B>
                            <A>255</A>
                          </ScriptBackgroundColor>
                          <ScriptForegroundColor>
                            <PackedValue>4294962611</PackedValue>
                            <X>179</X>
                            <Y>237</Y>
                            <Z>255</Z>
                            <R>179</R>
                            <G>237</G>
                            <B>255</B>
                            <A>255</A>
                          </ScriptForegroundColor>
                          <Sprites>
                            <Length>0</Length>
                          </Sprites>
                        </MySerializedTextPanelData>
                        <MySerializedTextPanelData>
                          <ChangeInterval>0</ChangeInterval>
                          <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
                          <FontSize>1</FontSize>
                          <ShowText>NONE</ShowText>
                          <FontColor>
                            <PackedValue>4294967295</PackedValue>
                            <X>255</X>
                            <Y>255</Y>
                            <Z>255</Z>
                            <R>255</R>
                            <G>255</G>
                            <B>255</B>
                            <A>255</A>
                          </FontColor>
                          <BackgroundColor>
                            <PackedValue>4278190080</PackedValue>
                            <X>0</X>
                            <Y>0</Y>
                            <Z>0</Z>
                            <R>0</R>
                            <G>0</G>
                            <B>0</B>
                            <A>255</A>
                          </BackgroundColor>
                          <CurrentShownTexture>0</CurrentShownTexture>
                          <SelectedScript />
                          <TextPadding>2</TextPadding>
                          <ScriptBackgroundColor>
                            <PackedValue>4288108544</PackedValue>
                            <X>0</X>
                            <Y>88</Y>
                            <Z>151</Z>
                            <R>0</R>
                            <G>88</G>
                            <B>151</B>
                            <A>255</A>
                          </ScriptBackgroundColor>
                          <ScriptForegroundColor>
                            <PackedValue>4294962611</PackedValue>
                            <X>179</X>
                            <Y>237</Y>
                            <Z>255</Z>
                            <R>179</R>
                            <G>237</G>
                            <B>255</B>
                            <A>255</A>
                          </ScriptForegroundColor>
                          <Sprites>
                            <Length>0</Length>
                          </Sprites>
                        </MySerializedTextPanelData>
                      </TextPanelsContents>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Automaton PB Po 2</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>3</NumberInGrid>
              <Enabled>true</Enabled>
              <Storage />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
              <SubtypeName>SmallBlockBatteryBlock</SubtypeName>
              <EntityId>135700123918890111</EntityId>
              <Min x="1" y="4" z="12" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ShareMode>Faction</ShareMode>
              <CustomName>Cle Battery Sb 3</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>11</NumberInGrid>
              <Enabled>true</Enabled>
              <CurrentStoredPower>1</CurrentStoredPower>
              <ProducerEnabled>true</ProducerEnabled>
              <MaxStoredPower>0</MaxStoredPower>
              <SemiautoEnabled>false</SemiautoEnabled>
              <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
              <ChargeMode>0</ChargeMode>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
              <SubtypeName>SmallBlockBatteryBlock</SubtypeName>
              <EntityId>130915052947449919</EntityId>
              <Min x="-3" y="4" z="12" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ShareMode>Faction</ShareMode>
              <CustomName>Cle Battery Po 4</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>12</NumberInGrid>
              <Enabled>true</Enabled>
              <CurrentStoredPower>1</CurrentStoredPower>
              <ProducerEnabled>true</ProducerEnabled>
              <MaxStoredPower>0</MaxStoredPower>
              <SemiautoEnabled>false</SemiautoEnabled>
              <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
              <ChargeMode>0</ChargeMode>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
              <EntityId>138021828225308240</EntityId>
              <Min x="-5" y="0" z="11" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Atmo Thruster Po 18</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>7</NumberInGrid>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
              <EntityId>88122739396702120</EntityId>
              <Min x="5" y="0" z="11" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Atmo Thruster Sb 19</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>8</NumberInGrid>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
              <EntityId>143541515630276470</EntityId>
              <Min x="-5" y="0" z="13" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Atmo Thruster Po 27</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>9</NumberInGrid>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
              <EntityId>81280930897200861</EntityId>
              <Min x="5" y="0" z="13" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Atmo Thruster Sb 26</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>10</NumberInGrid>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
              <EntityId>118213312795205052</EntityId>
              <Min x="-5" y="0" z="15" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Atmo Thruster Po 32</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>11</NumberInGrid>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
              <EntityId>129970772474677386</EntityId>
              <Min x="5" y="0" z="15" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Atmo Thruster Sb 33</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>12</NumberInGrid>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
              <EntityId>103678932604390382</EntityId>
              <Min x="-5" y="0" z="16" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Atmo Thruster Po 34</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>13</NumberInGrid>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
              <EntityId>93577463673511321</EntityId>
              <Min x="5" y="0" z="16" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Atmo Thruster Sb 35</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>14</NumberInGrid>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
              <EntityId>127090563930756815</EntityId>
              <Min x="-5" y="0" z="12" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Atmo Thruster Po 24</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>15</NumberInGrid>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
              <EntityId>73853568837125196</EntityId>
              <Min x="5" y="0" z="12" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Atmo Thruster Sb 25</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>16</NumberInGrid>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
              <EntityId>96971638608164921</EntityId>
              <Min x="-5" y="0" z="14" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Atmo Thruster Po 29</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>17</NumberInGrid>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
              <EntityId>139481560529995756</EntityId>
              <Min x="5" y="0" z="14" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Atmo Thruster Sb 28</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>18</NumberInGrid>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
              <EntityId>142707096533444091</EntityId>
              <Min x="5" y="0" z="7" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Atmo Thruster Sb 16</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>19</NumberInGrid>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
              <EntityId>138619180089808839</EntityId>
              <Min x="-5" y="0" z="7" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Atmo Thruster Po 17</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>20</NumberInGrid>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
              <EntityId>122234826100056022</EntityId>
              <Min x="5" y="0" z="6" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Atmo Thruster Sb 14</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>21</NumberInGrid>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
              <EntityId>125607562683875390</EntityId>
              <Min x="-5" y="0" z="6" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Atmo Thruster Po 15</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>22</NumberInGrid>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
              <EntityId>127194343134714004</EntityId>
              <Min x="5" y="0" z="5" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Atmo Thruster Sb 12</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>23</NumberInGrid>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
              <EntityId>143107155380215038</EntityId>
              <Min x="-5" y="0" z="5" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Atmo Thruster Po 13</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>24</NumberInGrid>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
              <EntityId>83513034670990234</EntityId>
              <Min x="5" y="0" z="4" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Atmo Thruster Sb 10</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>25</NumberInGrid>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
              <EntityId>72144585813754355</EntityId>
              <Min x="-5" y="0" z="4" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Atmo Thruster Po 08</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>26</NumberInGrid>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
              <EntityId>117979240742817113</EntityId>
              <Min x="5" y="0" z="3" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Atmo Thruster Sb 05</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>27</NumberInGrid>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
              <EntityId>78699755865024091</EntityId>
              <Min x="-5" y="0" z="3" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Atmo Thruster Po 04</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>28</NumberInGrid>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
              <EntityId>79130277847264771</EntityId>
              <Min x="5" y="0" z="2" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Atmo Thruster Sb 02</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>29</NumberInGrid>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
              <EntityId>79493578607575728</EntityId>
              <Min x="-5" y="0" z="2" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Atmo Thruster Po 01</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>30</NumberInGrid>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
              <EntityId>140574845036443932</EntityId>
              <Min x="1" y="4" z="15" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Atmo Thruster Sb 30</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>45</NumberInGrid>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
              <EntityId>123382195581729087</EntityId>
              <Min x="-3" y="4" z="15" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Atmo Thruster Po 31</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>46</NumberInGrid>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
              <EntityId>141152273485337193</EntityId>
              <Min x="-5" y="3" z="11" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Atmo Thruster Po 21</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>33</NumberInGrid>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
              <EntityId>141460216391562868</EntityId>
              <Min x="3" y="3" z="11" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Atmo Thruster Sb 20</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>34</NumberInGrid>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
              <EntityId>126225963313041035</EntityId>
              <Min x="-5" y="3" z="12" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Atmo Thruster Po 23</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>35</NumberInGrid>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
              <EntityId>102480938378108026</EntityId>
              <Min x="3" y="3" z="12" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Atmo Thruster Sb 22</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>36</NumberInGrid>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
              <EntityId>103698334281661068</EntityId>
              <Min x="-3" y="3" z="15" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Atmo Thruster Po 36</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>37</NumberInGrid>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
              <EntityId>81829562084919491</EntityId>
              <Min x="3" y="3" z="15" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Atmo Thruster Sb 37</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>38</NumberInGrid>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
              <EntityId>108206941770567875</EntityId>
              <Min x="-4" y="3" z="15" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Atmo Thruster Po 38</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>39</NumberInGrid>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
              <EntityId>97140974567210578</EntityId>
              <Min x="4" y="3" z="15" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Atmo Thruster Sb 39</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>40</NumberInGrid>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
              <EntityId>133995183593194762</EntityId>
              <Min x="4" y="3" z="3" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Atmo Thruster Sb 07</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>49</NumberInGrid>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
              <EntityId>74629623669068062</EntityId>
              <Min x="-4" y="3" z="3" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Atmo Thruster Po 06</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>50</NumberInGrid>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
              <EntityId>123434055345936505</EntityId>
              <Min x="3" y="3" z="3" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Atmo Thruster Sb 09</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>47</NumberInGrid>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
              <EntityId>103526936832684281</EntityId>
              <Min x="-3" y="3" z="3" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Atmo Thruster Po 11</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>48</NumberInGrid>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="0" y="4" z="12" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="0" y="4" z="13" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="0" y="4" z="14" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="0" y="4" z="15" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope</SubtypeName>
              <Min x="0" y="4" z="17" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="0" y="4" z="16" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="-5" y="1" z="1" />
              <BlockOrientation Forward="Right" Up="Forward" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="5" y="1" z="1" />
              <BlockOrientation Forward="Left" Up="Forward" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HalfArmorBlock</SubtypeName>
              <Min x="-6" y="1" z="2" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HalfArmorBlock</SubtypeName>
              <Min x="-6" y="1" z="3" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HalfArmorBlock</SubtypeName>
              <Min x="-6" y="1" z="4" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HalfArmorBlock</SubtypeName>
              <Min x="-6" y="1" z="5" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HalfArmorBlock</SubtypeName>
              <Min x="-6" y="1" z="6" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HalfArmorBlock</SubtypeName>
              <Min x="-6" y="1" z="7" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HalfArmorBlock</SubtypeName>
              <Min x="6" y="1" z="2" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HalfArmorBlock</SubtypeName>
              <Min x="6" y="1" z="3" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HalfArmorBlock</SubtypeName>
              <Min x="6" y="1" z="4" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HalfArmorBlock</SubtypeName>
              <Min x="6" y="1" z="5" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HalfArmorBlock</SubtypeName>
              <Min x="6" y="1" z="6" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HalfArmorBlock</SubtypeName>
              <Min x="6" y="1" z="7" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HalfArmorBlock</SubtypeName>
              <Min x="-6" y="1" z="11" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HalfArmorBlock</SubtypeName>
              <Min x="-6" y="1" z="12" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HalfArmorBlock</SubtypeName>
              <Min x="-6" y="1" z="13" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HalfArmorBlock</SubtypeName>
              <Min x="-6" y="1" z="14" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HalfArmorBlock</SubtypeName>
              <Min x="-6" y="1" z="15" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HalfArmorBlock</SubtypeName>
              <Min x="-6" y="1" z="16" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HalfArmorBlock</SubtypeName>
              <Min x="6" y="1" z="11" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HalfArmorBlock</SubtypeName>
              <Min x="6" y="1" z="12" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HalfArmorBlock</SubtypeName>
              <Min x="6" y="1" z="13" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HalfArmorBlock</SubtypeName>
              <Min x="6" y="1" z="14" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HalfArmorBlock</SubtypeName>
              <Min x="6" y="1" z="15" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HalfArmorBlock</SubtypeName>
              <Min x="6" y="1" z="16" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="-5" y="1" z="17" />
              <BlockOrientation Forward="Right" Up="Backward" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="5" y="1" z="17" />
              <BlockOrientation Forward="Left" Up="Backward" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HalfSlopeArmorBlock</SubtypeName>
              <Min x="-6" y="1" z="17" />
              <BlockOrientation Forward="Right" Up="Backward" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HalfSlopeArmorBlock</SubtypeName>
              <Min x="6" y="1" z="17" />
              <BlockOrientation Forward="Left" Up="Backward" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HalfSlopeArmorBlock</SubtypeName>
              <Min x="-6" y="1" z="1" />
              <BlockOrientation Forward="Backward" Up="Left" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HalfSlopeArmorBlock</SubtypeName>
              <Min x="6" y="1" z="1" />
              <BlockOrientation Forward="Backward" Up="Right" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="0" y="4" z="8" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Gyro">
              <SubtypeName>SmallBlockGyro</SubtypeName>
              <EntityId>127590662325588783</EntityId>
              <Min x="1" y="1" z="7" />
              <BlockOrientation Forward="Forward" Up="Right" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ShareMode>Faction</ShareMode>
              <CustomName>Cle Gyroscope Sb 2</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>7</NumberInGrid>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Gyro">
              <SubtypeName>SmallBlockGyro</SubtypeName>
              <EntityId>124184240165705076</EntityId>
              <Min x="-1" y="1" z="7" />
              <BlockOrientation Forward="Forward" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ShareMode>Faction</ShareMode>
              <CustomName>Cle Gyroscope Po 3</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>8</NumberInGrid>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockLargeFlatAtmosphericThrust</SubtypeName>
              <EntityId>126322932173075380</EntityId>
              <Min x="2" y="-2" z="3" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Large Flat Atmo Thruster Sb 03</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>5</NumberInGrid>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockLargeFlatAtmosphericThrust</SubtypeName>
              <EntityId>139195368416841678</EntityId>
              <Min x="-4" y="-2" z="3" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Large Flat Atmo Thruster Po 04</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>6</NumberInGrid>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockLargeFlatAtmosphericThrust</SubtypeName>
              <EntityId>124132188808666785</EntityId>
              <Min x="2" y="-2" z="13" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Large Flat Atmo Thruster Sb 07</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>9</NumberInGrid>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockLargeFlatAtmosphericThrust</SubtypeName>
              <EntityId>87297642452377042</EntityId>
              <Min x="-4" y="-2" z="13" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Large Flat Atmo Thruster Po 08</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>10</NumberInGrid>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_LandingGear">
              <SubtypeName>SmallBlockLandingGear</SubtypeName>
              <EntityId>116481869941467895</EntityId>
              <Min x="3" y="-2" z="9" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <CustomName>Cle Landing Gear Sb 1</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>3</NumberInGrid>
              <Enabled>true</Enabled>
              <IsLocked>false</IsLocked>
              <BrakeForce>-INF</BrakeForce>
              <AutoLock>true</AutoLock>
              <FirstLockAttempt>false</FirstLockAttempt>
              <LockSound>ArcShipLandGearOn</LockSound>
              <UnlockSound>ArcShipLandGearOff</UnlockSound>
              <FailedAttachSound>ArcShipLandGearNothing01</FailedAttachSound>
              <AttachedEntityId xsi:nil="true" />
              <MasterToSlave xsi:nil="true" />
              <GearPivotPosition xsi:nil="true" />
              <OtherPivot xsi:nil="true" />
              <LockMode>Unlocked</LockMode>
              <IsParkingEnabled>true</IsParkingEnabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_LandingGear">
              <SubtypeName>SmallBlockLandingGear</SubtypeName>
              <EntityId>91353393762274835</EntityId>
              <Min x="-3" y="-2" z="9" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <CustomName>Cle Landing Gear Po 2</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>4</NumberInGrid>
              <Enabled>true</Enabled>
              <IsLocked>false</IsLocked>
              <BrakeForce>-INF</BrakeForce>
              <AutoLock>true</AutoLock>
              <FirstLockAttempt>false</FirstLockAttempt>
              <LockSound>ArcShipLandGearOn</LockSound>
              <UnlockSound>ArcShipLandGearOff</UnlockSound>
              <FailedAttachSound>ArcShipLandGearNothing01</FailedAttachSound>
              <AttachedEntityId xsi:nil="true" />
              <MasterToSlave xsi:nil="true" />
              <GearPivotPosition xsi:nil="true" />
              <OtherPivot xsi:nil="true" />
              <LockMode>Unlocked</LockMode>
              <IsParkingEnabled>true</IsParkingEnabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorHalfSlopeInverted</SubtypeName>
              <Min x="-3" y="3" z="7" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorHalfSlopeInverted</SubtypeName>
              <Min x="3" y="3" z="7" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HalfArmorBlock</SubtypeName>
              <Min x="4" y="3" z="7" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HalfArmorBlock</SubtypeName>
              <Min x="-4" y="3" z="7" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HalfArmorBlock</SubtypeName>
              <Min x="5" y="3" z="7" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HalfArmorBlock</SubtypeName>
              <Min x="-5" y="3" z="7" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HalfArmorBlock</SubtypeName>
              <Min x="6" y="2" z="7" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HalfArmorBlock</SubtypeName>
              <Min x="-6" y="2" z="7" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HalfSlopeArmorBlock</SubtypeName>
              <Min x="6" y="3" z="7" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HalfSlopeArmorBlock</SubtypeName>
              <Min x="-6" y="3" z="7" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HalfSlopeArmorBlock</SubtypeName>
              <Min x="3" y="4" z="7" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HalfSlopeArmorBlock</SubtypeName>
              <Min x="-3" y="4" z="7" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CameraBlock">
              <SubtypeName>SmallCameraTopMounted</SubtypeName>
              <EntityId>116052413113202535</EntityId>
              <Min x="0" y="4" z="3" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ShareMode>Faction</ShareMode>
              <CustomName>Cle Top Mounted Camera 1</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>1</NumberInGrid>
              <Enabled>true</Enabled>
              <IsActive>false</IsActive>
              <Fov>1</Fov>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CameraBlock">
              <SubtypeName>SmallCameraTopMounted</SubtypeName>
              <EntityId>127358290170018745</EntityId>
              <Min x="5" y="3" z="9" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ShareMode>Faction</ShareMode>
              <CustomName>Cle Top Mounted Camera Sb 2</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>2</NumberInGrid>
              <Enabled>true</Enabled>
              <IsActive>false</IsActive>
              <Fov>1</Fov>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CameraBlock">
              <SubtypeName>SmallCameraTopMounted</SubtypeName>
              <EntityId>120521743151469657</EntityId>
              <Min x="-5" y="3" z="9" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ShareMode>Faction</ShareMode>
              <CustomName>Cle Top Mounted Camera Po 3</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>3</NumberInGrid>
              <Enabled>true</Enabled>
              <IsActive>false</IsActive>
              <Fov>1</Fov>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ReflectorLight">
              <SubtypeName>SmallBlockFrontLight</SubtypeName>
              <EntityId>126172010917641537</EntityId>
              <Min x="1" y="-1" z="7" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <CustomName>Cle Spotlight Sb 3</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>3</NumberInGrid>
              <Enabled>false</Enabled>
              <Radius>10</Radius>
              <ReflectorRadius>120</ReflectorRadius>
              <Falloff>1.5</Falloff>
              <Intensity>3</Intensity>
              <BlinkIntervalSeconds>0</BlinkIntervalSeconds>
              <BlinkLenght>10</BlinkLenght>
              <BlinkOffset>0</BlinkOffset>
              <Offset>0.5</Offset>
              <RotationSpeed>0.08</RotationSpeed>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_InteriorLight">
              <SubtypeName>SmallBlockSmallLight</SubtypeName>
              <EntityId>124742017738615576</EntityId>
              <Min x="5" y="-1" z="9" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <CustomName>Cle Interior Light Sb 1</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>1</NumberInGrid>
              <Enabled>true</Enabled>
              <Radius>3.6</Radius>
              <ReflectorRadius>120</ReflectorRadius>
              <Falloff>1.3</Falloff>
              <Intensity>5</Intensity>
              <BlinkIntervalSeconds>0</BlinkIntervalSeconds>
              <BlinkLenght>10</BlinkLenght>
              <BlinkOffset>0</BlinkOffset>
              <Offset>0.5</Offset>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_InteriorLight">
              <SubtypeName>SmallBlockSmallLight</SubtypeName>
              <EntityId>122706647235096269</EntityId>
              <Min x="-5" y="-1" z="9" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <CustomName>Cle Interior Light Po 2</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>2</NumberInGrid>
              <Enabled>true</Enabled>
              <Radius>3.6</Radius>
              <ReflectorRadius>120</ReflectorRadius>
              <Falloff>1.3</Falloff>
              <Intensity>5</Intensity>
              <BlinkIntervalSeconds>0</BlinkIntervalSeconds>
              <BlinkLenght>10</BlinkLenght>
              <BlinkOffset>0</BlinkOffset>
              <Offset>0.5</Offset>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_TextPanel">
              <SubtypeName>SmallTextPanel</SubtypeName>
              <EntityId>75219017863761994</EntityId>
              <Min x="-4" y="4" z="9" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ShareMode>Faction</ShareMode>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyLcdSurfaceComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_LcdSurfaceComponent">
                      <SelectedRotationIndex>0</SelectedRotationIndex>
                      <TextPanelContent>
                        <ChangeInterval>0</ChangeInterval>
                        <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
                        <FontSize>1</FontSize>
                        <ShowText>NONE</ShowText>
                        <FontColor>
                          <PackedValue>4294967295</PackedValue>
                          <X>255</X>
                          <Y>255</Y>
                          <Z>255</Z>
                          <R>255</R>
                          <G>255</G>
                          <B>255</B>
                          <A>255</A>
                        </FontColor>
                        <BackgroundColor>
                          <PackedValue>4278190080</PackedValue>
                          <X>0</X>
                          <Y>0</Y>
                          <Z>0</Z>
                          <R>0</R>
                          <G>0</G>
                          <B>0</B>
                          <A>255</A>
                        </BackgroundColor>
                        <CurrentShownTexture>0</CurrentShownTexture>
                        <ContentType>SCRIPT</ContentType>
                        <SelectedScript>TSS_FactionIcon</SelectedScript>
                        <TextPadding>2</TextPadding>
                        <CustomizeScripts>true</CustomizeScripts>
                        <ScriptBackgroundColor>
                          <PackedValue>4288108544</PackedValue>
                          <X>0</X>
                          <Y>88</Y>
                          <Z>151</Z>
                          <R>0</R>
                          <G>88</G>
                          <B>151</B>
                          <A>255</A>
                        </ScriptBackgroundColor>
                        <ScriptForegroundColor>
                          <PackedValue>4294962611</PackedValue>
                          <X>179</X>
                          <Y>237</Y>
                          <Z>255</Z>
                          <R>179</R>
                          <G>237</G>
                          <B>255</B>
                          <A>255</A>
                        </ScriptForegroundColor>
                        <Sprites>
                          <Length>0</Length>
                        </Sprites>
                      </TextPanelContent>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Text Panel Po 1</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>1</NumberInGrid>
              <Enabled>true</Enabled>
              <Description />
              <Title>Title</Title>
              <AccessFlag>READ_AND_WRITE_FACTION</AccessFlag>
              <ChangeInterval>0</ChangeInterval>
              <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
              <FontSize>1</FontSize>
              <PublicDescription />
              <PublicTitle>Public title</PublicTitle>
              <ShowText>NONE</ShowText>
              <FontColor>
                <PackedValue>4294967295</PackedValue>
                <X>255</X>
                <Y>255</Y>
                <Z>255</Z>
                <R>255</R>
                <G>255</G>
                <B>255</B>
                <A>255</A>
              </FontColor>
              <BackgroundColor>
                <PackedValue>4278190080</PackedValue>
                <X>0</X>
                <Y>0</Y>
                <Z>0</Z>
                <R>0</R>
                <G>0</G>
                <B>0</B>
                <A>255</A>
              </BackgroundColor>
              <CurrentShownTexture>0</CurrentShownTexture>
              <TextPadding>2</TextPadding>
              <Version>0</Version>
              <ScriptBackgroundColor>
                <PackedValue>4288108544</PackedValue>
                <X>0</X>
                <Y>88</Y>
                <Z>151</Z>
                <R>0</R>
                <G>88</G>
                <B>151</B>
                <A>255</A>
              </ScriptBackgroundColor>
              <ScriptForegroundColor>
                <PackedValue>4294962611</PackedValue>
                <X>179</X>
                <Y>237</Y>
                <Z>255</Z>
                <R>179</R>
                <G>237</G>
                <B>255</B>
                <A>255</A>
              </ScriptForegroundColor>
              <Sprites>
                <Length>0</Length>
              </Sprites>
              <SelectedRotationIndex xsi:nil="true" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_TextPanel">
              <SubtypeName>SmallTextPanel</SubtypeName>
              <EntityId>138514234249585355</EntityId>
              <Min x="4" y="4" z="9" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ShareMode>Faction</ShareMode>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyLcdSurfaceComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_LcdSurfaceComponent">
                      <SelectedRotationIndex>0</SelectedRotationIndex>
                      <TextPanelContent>
                        <ChangeInterval>0</ChangeInterval>
                        <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
                        <FontSize>1</FontSize>
                        <ShowText>NONE</ShowText>
                        <FontColor>
                          <PackedValue>4294967295</PackedValue>
                          <X>255</X>
                          <Y>255</Y>
                          <Z>255</Z>
                          <R>255</R>
                          <G>255</G>
                          <B>255</B>
                          <A>255</A>
                        </FontColor>
                        <BackgroundColor>
                          <PackedValue>4278190080</PackedValue>
                          <X>0</X>
                          <Y>0</Y>
                          <Z>0</Z>
                          <R>0</R>
                          <G>0</G>
                          <B>0</B>
                          <A>255</A>
                        </BackgroundColor>
                        <CurrentShownTexture>0</CurrentShownTexture>
                        <ContentType>SCRIPT</ContentType>
                        <SelectedScript>TSS_FactionIcon</SelectedScript>
                        <TextPadding>2</TextPadding>
                        <CustomizeScripts>true</CustomizeScripts>
                        <ScriptBackgroundColor>
                          <PackedValue>4288108544</PackedValue>
                          <X>0</X>
                          <Y>88</Y>
                          <Z>151</Z>
                          <R>0</R>
                          <G>88</G>
                          <B>151</B>
                          <A>255</A>
                        </ScriptBackgroundColor>
                        <ScriptForegroundColor>
                          <PackedValue>4294962611</PackedValue>
                          <X>179</X>
                          <Y>237</Y>
                          <Z>255</Z>
                          <R>179</R>
                          <G>237</G>
                          <B>255</B>
                          <A>255</A>
                        </ScriptForegroundColor>
                        <Sprites>
                          <Length>0</Length>
                        </Sprites>
                      </TextPanelContent>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Text Panel Sb 2</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>2</NumberInGrid>
              <Enabled>true</Enabled>
              <Description />
              <Title>Title</Title>
              <AccessFlag>READ_AND_WRITE_FACTION</AccessFlag>
              <ChangeInterval>0</ChangeInterval>
              <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
              <FontSize>1</FontSize>
              <PublicDescription />
              <PublicTitle>Public title</PublicTitle>
              <ShowText>NONE</ShowText>
              <FontColor>
                <PackedValue>4294967295</PackedValue>
                <X>255</X>
                <Y>255</Y>
                <Z>255</Z>
                <R>255</R>
                <G>255</G>
                <B>255</B>
                <A>255</A>
              </FontColor>
              <BackgroundColor>
                <PackedValue>4278190080</PackedValue>
                <X>0</X>
                <Y>0</Y>
                <Z>0</Z>
                <R>0</R>
                <G>0</G>
                <B>0</B>
                <A>255</A>
              </BackgroundColor>
              <CurrentShownTexture>0</CurrentShownTexture>
              <TextPadding>2</TextPadding>
              <Version>0</Version>
              <ScriptBackgroundColor>
                <PackedValue>4288108544</PackedValue>
                <X>0</X>
                <Y>88</Y>
                <Z>151</Z>
                <R>0</R>
                <G>88</G>
                <B>151</B>
                <A>255</A>
              </ScriptBackgroundColor>
              <ScriptForegroundColor>
                <PackedValue>4294962611</PackedValue>
                <X>179</X>
                <Y>237</Y>
                <Z>255</Z>
                <R>179</R>
                <G>237</G>
                <B>255</B>
                <A>255</A>
              </ScriptForegroundColor>
              <Sprites>
                <Length>0</Length>
              </Sprites>
              <SelectedRotationIndex xsi:nil="true" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorSorter">
              <SubtypeName>SmallBlockConveyorSorter</SubtypeName>
              <EntityId>104846776775967547</EntityId>
              <Min x="-1" y="0" z="3" />
              <BlockOrientation Forward="Down" Up="Backward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ShareMode>Faction</ShareMode>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>0.064</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Small Conveyor Sorter</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>1</NumberInGrid>
              <Enabled>true</Enabled>
              <IsWhiteList>false</IsWhiteList>
              <DefinitionIds />
              <DefinitionTypes />
              <DrainAll>false</DrainAll>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ShipConnector">
              <SubtypeName>ConnectorSmall</SubtypeName>
              <EntityId>126667209655949145</EntityId>
              <Min x="-1" y="-1" z="3" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ShareMode>Faction</ShareMode>
              <DeformationRatio>0.5</DeformationRatio>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>0.064</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanReceive CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame10</TimerType>
                      <FramesFromLastTrigger>60</FramesFromLastTrigger>
                      <TimerTickInFrames>80</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cle Small Connector</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>1</NumberInGrid>
              <Enabled>true</Enabled>
              <MasterToSlaveTransform xsi:nil="true" />
              <Strength>1E-06</Strength>
              <MasterToSlaveGrid xsi:nil="true" />
              <IsMaster>true</IsMaster>
              <TradingEnabled>false</TradingEnabled>
              <AutoUnlockTime>0</AutoUnlockTime>
              <TimeOfConnection>0</TimeOfConnection>
              <IsParkingEnabled>true</IsParkingEnabled>
              <IsPowerTransferOverrideEnabled>false</IsPowerTransferOverrideEnabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
              <SubtypeName>SmallBlockSmallBatteryBlock</SubtypeName>
              <EntityId>142258255580150538</EntityId>
              <Min x="3" y="3" z="6" />
              <BlockOrientation Forward="Forward" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ShareMode>Faction</ShareMode>
              <CustomName>Cle Small Battery Sb 01</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>1</NumberInGrid>
              <Enabled>true</Enabled>
              <CurrentStoredPower>0.05</CurrentStoredPower>
              <ProducerEnabled>true</ProducerEnabled>
              <MaxStoredPower>0</MaxStoredPower>
              <SemiautoEnabled>false</SemiautoEnabled>
              <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
              <ChargeMode>0</ChargeMode>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
              <SubtypeName>SmallBlockSmallBatteryBlock</SubtypeName>
              <EntityId>122558588613535519</EntityId>
              <Min x="-3" y="3" z="6" />
              <BlockOrientation Forward="Forward" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ShareMode>Faction</ShareMode>
              <CustomName>Cle Small Battery Po 02</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>2</NumberInGrid>
              <Enabled>true</Enabled>
              <CurrentStoredPower>0.05</CurrentStoredPower>
              <ProducerEnabled>true</ProducerEnabled>
              <MaxStoredPower>0</MaxStoredPower>
              <SemiautoEnabled>false</SemiautoEnabled>
              <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
              <ChargeMode>0</ChargeMode>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
              <SubtypeName>SmallBlockSmallBatteryBlock</SubtypeName>
              <EntityId>73514848648727810</EntityId>
              <Min x="4" y="3" z="10" />
              <BlockOrientation Forward="Forward" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ShareMode>Faction</ShareMode>
              <CustomName>Cle Small Battery Sb 03</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>3</NumberInGrid>
              <Enabled>true</Enabled>
              <CurrentStoredPower>0.05</CurrentStoredPower>
              <ProducerEnabled>true</ProducerEnabled>
              <MaxStoredPower>0</MaxStoredPower>
              <SemiautoEnabled>false</SemiautoEnabled>
              <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
              <ChargeMode>0</ChargeMode>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
              <SubtypeName>SmallBlockSmallBatteryBlock</SubtypeName>
              <EntityId>77149435422831132</EntityId>
              <Min x="-4" y="3" z="10" />
              <BlockOrientation Forward="Forward" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ShareMode>Faction</ShareMode>
              <CustomName>Cle Small Battery Po 04</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>4</NumberInGrid>
              <Enabled>true</Enabled>
              <CurrentStoredPower>0.05</CurrentStoredPower>
              <ProducerEnabled>true</ProducerEnabled>
              <MaxStoredPower>0</MaxStoredPower>
              <SemiautoEnabled>false</SemiautoEnabled>
              <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
              <ChargeMode>0</ChargeMode>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
              <SubtypeName>SmallBlockSmallBatteryBlock</SubtypeName>
              <EntityId>96746991178381151</EntityId>
              <Min x="4" y="3" z="13" />
              <BlockOrientation Forward="Forward" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ShareMode>Faction</ShareMode>
              <CustomName>Cle Small Battery Sb 05</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>5</NumberInGrid>
              <Enabled>true</Enabled>
              <CurrentStoredPower>0.05</CurrentStoredPower>
              <ProducerEnabled>true</ProducerEnabled>
              <MaxStoredPower>0</MaxStoredPower>
              <SemiautoEnabled>false</SemiautoEnabled>
              <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
              <ChargeMode>0</ChargeMode>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
              <SubtypeName>SmallBlockSmallBatteryBlock</SubtypeName>
              <EntityId>128460349831034762</EntityId>
              <Min x="-4" y="3" z="13" />
              <BlockOrientation Forward="Forward" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ShareMode>Faction</ShareMode>
              <CustomName>Cle Small Battery Po 06</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>6</NumberInGrid>
              <Enabled>true</Enabled>
              <CurrentStoredPower>0.05</CurrentStoredPower>
              <ProducerEnabled>true</ProducerEnabled>
              <MaxStoredPower>0</MaxStoredPower>
              <SemiautoEnabled>false</SemiautoEnabled>
              <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
              <ChargeMode>0</ChargeMode>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
              <SubtypeName>SmallBlockSmallBatteryBlock</SubtypeName>
              <EntityId>140521535704303588</EntityId>
              <Min x="4" y="3" z="14" />
              <BlockOrientation Forward="Forward" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ShareMode>Faction</ShareMode>
              <CustomName>Cle Small Battery Sb 07</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>7</NumberInGrid>
              <Enabled>true</Enabled>
              <CurrentStoredPower>0.05</CurrentStoredPower>
              <ProducerEnabled>true</ProducerEnabled>
              <MaxStoredPower>0</MaxStoredPower>
              <SemiautoEnabled>false</SemiautoEnabled>
              <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
              <ChargeMode>0</ChargeMode>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
              <SubtypeName>SmallBlockSmallBatteryBlock</SubtypeName>
              <EntityId>133775828178267062</EntityId>
              <Min x="-4" y="3" z="14" />
              <BlockOrientation Forward="Forward" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ShareMode>Faction</ShareMode>
              <CustomName>Cle Small Battery Po 08</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>8</NumberInGrid>
              <Enabled>true</Enabled>
              <CurrentStoredPower>0.05</CurrentStoredPower>
              <ProducerEnabled>true</ProducerEnabled>
              <MaxStoredPower>0</MaxStoredPower>
              <SemiautoEnabled>false</SemiautoEnabled>
              <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
              <ChargeMode>0</ChargeMode>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
              <SubtypeName>SmallBlockSmallBatteryBlock</SubtypeName>
              <EntityId>131580909814264981</EntityId>
              <Min x="3" y="3" z="14" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ShareMode>Faction</ShareMode>
              <CustomName>Cle Small Battery Sb 09</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>9</NumberInGrid>
              <Enabled>true</Enabled>
              <CurrentStoredPower>0.05</CurrentStoredPower>
              <ProducerEnabled>true</ProducerEnabled>
              <MaxStoredPower>0</MaxStoredPower>
              <SemiautoEnabled>false</SemiautoEnabled>
              <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
              <ChargeMode>0</ChargeMode>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
              <SubtypeName>SmallBlockSmallBatteryBlock</SubtypeName>
              <EntityId>129220961537660981</EntityId>
              <Min x="-3" y="3" z="14" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.35" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
              <ShareMode>Faction</ShareMode>
              <CustomName>Cle Small Battery Po 10</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <NumberInGrid>10</NumberInGrid>
              <Enabled>true</Enabled>
              <CurrentStoredPower>0.05</CurrentStoredPower>
              <ProducerEnabled>true</ProducerEnabled>
              <MaxStoredPower>0</MaxStoredPower>
              <SemiautoEnabled>false</SemiautoEnabled>
              <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
              <ChargeMode>0</ChargeMode>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HalfArmorBlock</SubtypeName>
              <Min x="6" y="2" z="14" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HalfArmorBlock</SubtypeName>
              <Min x="-6" y="2" z="14" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HalfArmorBlock</SubtypeName>
              <Min x="5" y="3" z="14" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HalfArmorBlock</SubtypeName>
              <Min x="-5" y="3" z="14" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HalfSlopeArmorBlock</SubtypeName>
              <Min x="6" y="3" z="14" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HalfSlopeArmorBlock</SubtypeName>
              <Min x="-6" y="3" z="14" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HalfArmorBlock</SubtypeName>
              <Min x="5" y="3" z="4" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HalfArmorBlock</SubtypeName>
              <Min x="-5" y="3" z="4" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HalfArmorBlock</SubtypeName>
              <Min x="6" y="2" z="4" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HalfArmorBlock</SubtypeName>
              <Min x="-6" y="2" z="4" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HalfSlopeArmorBlock</SubtypeName>
              <Min x="6" y="3" z="4" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HalfSlopeArmorBlock</SubtypeName>
              <Min x="-6" y="3" z="4" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="3" y="4" z="11" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="-3" y="4" z="11" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="4" y="4" z="11" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-4" y="4" z="11" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0.06944445" y="0.2" z="0.55" />
              <SkinSubtypeId>Battered_Armor</SkinSubtypeId>
            </MyObjectBuilder_CubeBlock>
          </CubeBlocks>
          <XMirroxPlane x="0" y="0" z="0" />
          <ConveyorLines>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="0" y="2" z="2" />
              <StartDirection>Up</StartDirection>
              <EndPosition x="0" y="3" z="2" />
              <EndDirection>Down</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="1" y="2" z="2" />
              <StartDirection>Backward</StartDirection>
              <EndPosition x="1" y="2" z="3" />
              <EndDirection>Forward</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-1" y="2" z="2" />
              <StartDirection>Backward</StartDirection>
              <EndPosition x="-1" y="2" z="3" />
              <EndDirection>Forward</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="1" y="2" z="3" />
              <StartDirection>Down</StartDirection>
              <EndPosition x="1" y="1" z="3" />
              <EndDirection>Up</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-1" y="2" z="3" />
              <StartDirection>Down</StartDirection>
              <EndPosition x="-1" y="1" z="3" />
              <EndDirection>Up</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-3" y="1" z="4" />
              <StartDirection>Backward</StartDirection>
              <EndPosition x="-3" y="1" z="5" />
              <EndDirection>Forward</EndDirection>
              <Sections />
              <ConveyorLineType>LARGE_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="2" y="1" z="3" />
              <StartDirection>Left</StartDirection>
              <EndPosition x="1" y="1" z="3" />
              <EndDirection>Right</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="3" y="1" z="4" />
              <StartDirection>Backward</StartDirection>
              <EndPosition x="3" y="1" z="5" />
              <EndDirection>Forward</EndDirection>
              <Sections />
              <ConveyorLineType>LARGE_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="3" y="1" z="7" />
              <StartDirection>Backward</StartDirection>
              <EndPosition x="3" y="1" z="8" />
              <EndDirection>Forward</EndDirection>
              <Sections />
              <ConveyorLineType>LARGE_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-2" y="1" z="3" />
              <StartDirection>Right</StartDirection>
              <EndPosition x="-1" y="1" z="3" />
              <EndDirection>Left</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-3" y="1" z="7" />
              <StartDirection>Backward</StartDirection>
              <EndPosition x="-3" y="1" z="8" />
              <EndDirection>Forward</EndDirection>
              <Sections />
              <ConveyorLineType>LARGE_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="3" y="1" z="10" />
              <StartDirection>Backward</StartDirection>
              <EndPosition x="3" y="1" z="11" />
              <EndDirection>Forward</EndDirection>
              <Sections />
              <ConveyorLineType>LARGE_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="4" y="1" z="9" />
              <StartDirection>Right</StartDirection>
              <EndPosition x="5" y="1" z="9" />
              <EndDirection>Left</EndDirection>
              <Sections />
              <ConveyorLineType>LARGE_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="2" y="1" z="9" />
              <StartDirection>Left</StartDirection>
              <EndPosition x="1" y="1" z="9" />
              <EndDirection>Right</EndDirection>
              <Sections />
              <ConveyorLineType>LARGE_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-3" y="1" z="10" />
              <StartDirection>Backward</StartDirection>
              <EndPosition x="-3" y="1" z="11" />
              <EndDirection>Forward</EndDirection>
              <Sections />
              <ConveyorLineType>LARGE_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-2" y="1" z="9" />
              <StartDirection>Right</StartDirection>
              <EndPosition x="-1" y="1" z="9" />
              <EndDirection>Left</EndDirection>
              <Sections />
              <ConveyorLineType>LARGE_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-4" y="1" z="9" />
              <StartDirection>Left</StartDirection>
              <EndPosition x="-5" y="1" z="9" />
              <EndDirection>Right</EndDirection>
              <Sections />
              <ConveyorLineType>LARGE_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="0" y="0" z="9" />
              <StartDirection>Down</StartDirection>
              <EndPosition x="0" y="-1" z="9" />
              <EndDirection>Up</EndDirection>
              <Sections />
              <ConveyorLineType>LARGE_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-3" y="1" z="13" />
              <StartDirection>Backward</StartDirection>
              <EndPosition x="-3" y="1" z="14" />
              <EndDirection>Forward</EndDirection>
              <Sections />
              <ConveyorLineType>LARGE_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="3" y="1" z="13" />
              <StartDirection>Backward</StartDirection>
              <EndPosition x="3" y="1" z="14" />
              <EndDirection>Forward</EndDirection>
              <Sections />
              <ConveyorLineType>LARGE_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-1" y="1" z="3" />
              <StartDirection>Down</StartDirection>
              <EndPosition x="-1" y="0" z="3" />
              <EndDirection>Up</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
              <ConveyorLineConductivity>BACKWARD</ConveyorLineConductivity>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-1" y="0" z="3" />
              <StartDirection>Down</StartDirection>
              <EndPosition x="-1" y="-1" z="3" />
              <EndDirection>Up</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
              <ConveyorLineConductivity>BACKWARD</ConveyorLineConductivity>
            </MyObjectBuilder_ConveyorLine>
          </ConveyorLines>
          <DisplayName>Clydsedale</DisplayName>
          <DestructibleBlocks>true</DestructibleBlocks>
          <CreatePhysics>false</CreatePhysics>
          <EnableSmallToLargeConnections>false</EnableSmallToLargeConnections>
          <IsRespawnGrid>false</IsRespawnGrid>
          <LocalCoordSys>0</LocalCoordSys>
          <TargetingTargets />
          <OxygenRooms>
            <OxygenRoom OxygenAmount="0">
              <StartingPosition>
                <X>-7</X>
                <Y>-3</Y>
                <Z>-2</Z>
              </StartingPosition>
            </OxygenRoom>
          </OxygenRooms>
        </CubeGrid>
      </CubeGrids>
      <EnvironmentType>None</EnvironmentType>
    </Prefab>
  </Prefabs>
</Definitions>